<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Egberts</title><link href="https://egbert.github.io/" rel="alternate"></link><link href="https://egbert.github.io/atom.xml" rel="self"></link><id>https://egbert.github.io/</id><updated>2018-12-12T10:45:00-05:00</updated><entry><title>Tight Multiversion Python Re-development Cycle</title><link href="/egberts/articles/tight-multiversion-python-re-development-cycle.html" rel="alternate"></link><published>2018-12-12T10:45:00-05:00</published><updated>2018-12-12T10:45:00-05:00</updated><author><name></name></author><id>tag:None,2018-12-12:/egberts/articles/tight-multiversion-python-re-development-cycle.html</id><summary type="html">&lt;p&gt;Tight Multiversion Python Re-development Cycle&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="set-up-a-new-python-virtual-environment"&gt;Set up a new Python virtual environment&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt; \&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="n"&gt;env3&lt;/span&gt;
&lt;span class="c1"&gt;# Create the virtual environment support&lt;/span&gt;
&lt;span class="n"&gt;python3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;venv&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;
&lt;span class="c1"&gt;# subdirectory bin created with all symlink&amp;#39;d executables (ie., pytest,&lt;/span&gt;
&lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;activate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Following source command CANNOT be done from a script file but only …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Tight Multiversion Python Re-development Cycle&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="set-up-a-new-python-virtual-environment"&gt;Set up a new Python virtual environment&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt; \&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="n"&gt;env3&lt;/span&gt;
&lt;span class="c1"&gt;# Create the virtual environment support&lt;/span&gt;
&lt;span class="n"&gt;python3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;venv&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;
&lt;span class="c1"&gt;# subdirectory bin created with all symlink&amp;#39;d executables (ie., pytest,&lt;/span&gt;
&lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;activate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Following source command CANNOT be done from a script file but only&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;the&lt;/span&gt; &lt;span class="nn"&gt;CURRENT&lt;/span&gt; &lt;span class="nn"&gt;shell&lt;/span&gt;
&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="nb"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;activate&lt;/span&gt;

&lt;span class="c1"&gt;# Now ready to add new (or existing) Python package to within Python3&lt;/span&gt;
&lt;span class="n"&gt;environment&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;jdoe&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;myrepo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;# Go into newly created package repo&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;myrepo&lt;/span&gt;

&lt;span class="c1"&gt;# Depending if package is ready, make said package &amp;#39;pseudo-installed&amp;#39;&lt;/span&gt;
&lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;live&lt;/span&gt; &lt;span class="n"&gt;edit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;able&lt;/span&gt;
&lt;span class="c1"&gt;# This enables you to skip the &amp;quot;install&amp;quot; part&lt;/span&gt;
&lt;span class="c1"&gt;# of the tight &amp;quot;edit python source→pip install→ pytest → edit python&lt;/span&gt;
&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; development loop.&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; \&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; \&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;No setup.py file found; must be a new environment or incorrect&lt;/span&gt;
&lt;span class="n"&gt;subdirectory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Nice, uh?&lt;/p&gt;</content><category term="python"></category></entry><entry><title>Automata theory: formal languages and formal grammars</title><link href="/egberts/articles/automata-theory-formal-languages-and-formal-grammars.html" rel="alternate"></link><published>2018-11-29T10:09:00-05:00</published><updated>2018-11-29T10:09:00-05:00</updated><author><name></name></author><id>tag:None,2018-11-29:/egberts/articles/automata-theory-formal-languages-and-formal-grammars.html</id><summary type="html">&lt;p&gt;
&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;Chomsky hierarchy&lt;/th&gt;
            &lt;th class="justtable"&gt; Grammars&lt;/th&gt;
            &lt;th class="justtable"&gt; Languages&lt;/th&gt;
            &lt;th class="justtable"&gt; Abstract machines&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;Type-0&lt;/td&gt;
                &lt;td class="justtable"&gt; Unrestricted&lt;/td&gt;
                &lt;td class="justtable"&gt; Recursively enumerable&lt;/td&gt;
                &lt;td class="justtable"&gt; Turing machine&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;—&lt;/td&gt;
                &lt;td class="justtable"&gt; (no common name)&lt;/td&gt;
                &lt;td class="justtable"&gt;Decidable&lt;/td&gt;
                &lt;td class="justtable"&gt;Decider&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;Type-1&lt;/td&gt;
                &lt;td class="justtable"&gt; Context-sensitive&lt;/td&gt;
                &lt;td class="justtable"&gt; Context-sensitive&lt;/td&gt;
                &lt;td class="justtable"&gt; Linear-bounded&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;—&lt;/td&gt;
                &lt;td class="justtable"&gt; Positive range concatenation&lt;/td&gt;
                &lt;td class="justtable"&gt; Positive range concatenation*&lt;/td&gt;
                &lt;td class="justtable"&gt; PTIME Turing Machine&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;—&lt;/td&gt;
                &lt;td class="justtable"&gt; Indexed&lt;/td&gt;
                &lt;td class="justtable"&gt; Indexed*&lt;/td&gt;
                &lt;td class="justtable"&gt; Nested stack&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;—&lt;/td&gt;
                &lt;td class="justtable"&gt; —&lt;/td&gt;
                &lt;td class="justtable"&gt; —&lt;/td&gt;
                &lt;td class="justtable"&gt; Thread automaton&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;—&lt;/td&gt;
                &lt;td class="justtable"&gt; Linear context-free rewriting systems&lt;/td&gt;
                &lt;td class="justtable"&gt; Linear context-free rewriting language&lt;/td&gt;
                &lt;td class="justtable"&gt; restricted Tree stack automaton&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;—&lt;/td&gt;
                &lt;td class="justtable"&gt; Tree-adjoining&lt;/td&gt;
                &lt;td class="justtable"&gt; Tree-adjoining …&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;
&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;Chomsky hierarchy&lt;/th&gt;
            &lt;th class="justtable"&gt; Grammars&lt;/th&gt;
            &lt;th class="justtable"&gt; Languages&lt;/th&gt;
            &lt;th class="justtable"&gt; Abstract machines&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;Type-0&lt;/td&gt;
                &lt;td class="justtable"&gt; Unrestricted&lt;/td&gt;
                &lt;td class="justtable"&gt; Recursively enumerable&lt;/td&gt;
                &lt;td class="justtable"&gt; Turing machine&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;—&lt;/td&gt;
                &lt;td class="justtable"&gt; (no common name)&lt;/td&gt;
                &lt;td class="justtable"&gt;Decidable&lt;/td&gt;
                &lt;td class="justtable"&gt;Decider&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;Type-1&lt;/td&gt;
                &lt;td class="justtable"&gt; Context-sensitive&lt;/td&gt;
                &lt;td class="justtable"&gt; Context-sensitive&lt;/td&gt;
                &lt;td class="justtable"&gt; Linear-bounded&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;—&lt;/td&gt;
                &lt;td class="justtable"&gt; Positive range concatenation&lt;/td&gt;
                &lt;td class="justtable"&gt; Positive range concatenation*&lt;/td&gt;
                &lt;td class="justtable"&gt; PTIME Turing Machine&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;—&lt;/td&gt;
                &lt;td class="justtable"&gt; Indexed&lt;/td&gt;
                &lt;td class="justtable"&gt; Indexed*&lt;/td&gt;
                &lt;td class="justtable"&gt; Nested stack&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;—&lt;/td&gt;
                &lt;td class="justtable"&gt; —&lt;/td&gt;
                &lt;td class="justtable"&gt; —&lt;/td&gt;
                &lt;td class="justtable"&gt; Thread automaton&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;—&lt;/td&gt;
                &lt;td class="justtable"&gt; Linear context-free rewriting systems&lt;/td&gt;
                &lt;td class="justtable"&gt; Linear context-free rewriting language&lt;/td&gt;
                &lt;td class="justtable"&gt; restricted Tree stack automaton&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;—&lt;/td&gt;
                &lt;td class="justtable"&gt; Tree-adjoining&lt;/td&gt;
                &lt;td class="justtable"&gt; Tree-adjoining&lt;/td&gt;
                &lt;td class="justtable"&gt; Embedded pushdown&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;Type-2&lt;/td&gt;
                &lt;td class="justtable"&gt; Context-free&lt;/td&gt;
                &lt;td class="justtable"&gt; Context-free&lt;/td&gt;
                &lt;td class="justtable"&gt; Nondeterministic pushdown&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;—&lt;/td&gt;
                &lt;td class="justtable"&gt; Deterministic context-free&lt;/td&gt;
                &lt;td class="justtable"&gt; Deterministic context-free&lt;/td&gt;
                &lt;td class="justtable"&gt; Deterministic pushdown&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;—&lt;/td&gt;
                &lt;td class="justtable"&gt; Visibly pushdown&lt;/td&gt;
                &lt;td class="justtable"&gt; Visibly pushdown&lt;/td&gt;
                &lt;td class="justtable"&gt; Visibly pushdown&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;Type-3&lt;/td&gt;
                &lt;td class="justtable"&gt; Regular&lt;/td&gt;
                &lt;td class="justtable"&gt; Regular&lt;/td&gt;
                &lt;td class="justtable"&gt; Finite&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;—&lt;/td&gt;
                &lt;td class="justtable"&gt; —&lt;/td&gt;
                &lt;td class="justtable"&gt; Star-free&lt;/td&gt;
                &lt;td class="justtable"&gt; Counter-free (with aperiodic finite monoid)&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;—&lt;/td&gt;
                &lt;td class="justtable"&gt; Non-recursive&lt;/td&gt;
                &lt;td class="justtable"&gt; Finite&lt;/td&gt;
                &lt;td class="justtable"&gt; Acyclic finite&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;&lt;/p&gt;
</content><category term="rst"></category><category term="automata"></category><category term="formal language"></category><category term="formal grammar"></category></entry><entry><title>CSP Compatibility</title><link href="/egberts/articles/csp-compatibility.html" rel="alternate"></link><published>2018-11-25T06:50:00-05:00</published><updated>2018-11-25T06:50:00-05:00</updated><author><name></name></author><id>tag:None,2018-11-25:/egberts/articles/csp-compatibility.html</id><summary type="html">&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP"&gt;CSP Compatibility&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP"&gt;CSP Compatibility&lt;/a&gt;&lt;/p&gt;</content><category term="csp"></category><category term="http"></category><category term="security"></category></entry><entry><title>API security checklist</title><link href="/egberts/articles/api-security-checklist.html" rel="alternate"></link><published>2018-11-25T06:07:00-05:00</published><updated>2018-11-25T06:07:00-05:00</updated><author><name></name></author><id>tag:None,2018-11-25:/egberts/articles/api-security-checklist.html</id><summary type="html">&lt;p&gt;Checklist of the most important security countermeasures when designing, testing, and releasing your API.&lt;/p&gt;</summary><content type="html">&lt;h2 id="api-security-checklist"&gt;API Security Checklist&lt;/h2&gt;
&lt;p&gt;Checklist of the most important security countermeasures when designing,
testing, and releasing your API.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Authentication&lt;ul&gt;
&lt;li&gt;Don&amp;rsquo;t use Basic Auth. Use standard authentication (e.g. JWT, OAuth).&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t reinvent the wheel in Authentication, token generation, password storage.
*Use the standards.&lt;/li&gt;
&lt;li&gt;Use Max Retry and jail features in Login.&lt;/li&gt;
&lt;li&gt;Use encryption on all sensitive data.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;JWT (JSON Web Token)&lt;ul&gt;
&lt;li&gt;Use a random complicated key (JWT Secret) to make brute forcing the token very hard.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t extract the algorithm from the payload. Force the algorithm in the backend (HS256 or RS256).&lt;/li&gt;
&lt;li&gt;Make token expiration (TTL, RTTL) as short as possible.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t store sensitive data in the JWT payload, it can be decoded easily.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OAuth&lt;ul&gt;
&lt;li&gt;Always validate redirect_uri server-side to allow only whitelisted URLs.&lt;/li&gt;
&lt;li&gt;Always try to exchange for code and not tokens (don&amp;rsquo;t allow response_type=token).&lt;/li&gt;
&lt;li&gt;Use state parameter with a random hash to prevent CSRF on the OAuth authentication process.&lt;/li&gt;
&lt;li&gt;Define the default scope, and validate scope parameters for each application.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Access&lt;ul&gt;
&lt;li&gt;Limit requests (Throttling) to avoid DDoS / brute-force attacks.&lt;/li&gt;
&lt;li&gt;Use HTTPS on server side to avoid MITM (Man in the Middle Attack).&lt;/li&gt;
&lt;li&gt;Use HSTS header with SSL to avoid SSL Strip attack.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Input&lt;ul&gt;
&lt;li&gt;Use the proper HTTP method according to the operation: GET (read), POST (create), PUT/PATCH (replace/update), and DELETE (to delete a record), and respond with 405 Method Not Allowed if the requested method isn&amp;rsquo;t appropriate for the requested resource.&lt;/li&gt;
&lt;li&gt;Validate content-type on request Accept header (Content Negotiation) to allow only your supported format (e.g. application/xml, application/json, etc.) and respond with 406 Not Acceptable response if not matched.&lt;/li&gt;
&lt;li&gt;Validate content-type of posted data as you accept (e.g.  application/x-www-form-urlencoded, multipart/form-data, application/json, etc.).&lt;/li&gt;
&lt;li&gt;Validate user input to avoid common vulnerabilities (e.g. XSS, SQL-Injection, Remote Code Execution, etc.).&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t use any sensitive data (credentials, Passwords, security tokens, or API keys) in the URL, but use standard Authorization header.&lt;/li&gt;
&lt;li&gt;Use an API Gateway service to enable caching, Rate Limit policies (e.g. Quota, Spike Arrest, or Concurrent Rate Limit) and deploy APIs resources dynamically.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Processing&lt;ul&gt;
&lt;li&gt;Check if all the endpoints are protected behind authentication to avoid broken authentication process.&lt;/li&gt;
&lt;li&gt;User own resource ID should be avoided. Use /me/orders instead of
/user/654321/orders.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t auto-increment IDs. Use UUID instead.&lt;/li&gt;
&lt;li&gt;If you are parsing XML files, make sure entity parsing is not enabled to avoid XXE (XML external entity attack).&lt;/li&gt;
&lt;li&gt;If you are parsing XML files, make sure entity expansion is not enabled to avoid Billion Laughs/XML bomb via exponential entity expansion attack.&lt;/li&gt;
&lt;li&gt;Use a CDN for file uploads.&lt;/li&gt;
&lt;li&gt;If you are dealing with huge amount of data, use Workers and Queues to process as much as possible in background and return response fast to avoid HTTP Blocking.&lt;/li&gt;
&lt;li&gt;Do not forget to turn the DEBUG mode OFF.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Output&lt;ul&gt;
&lt;li&gt;Send X-Content-Type-Options: nosniff header.&lt;/li&gt;
&lt;li&gt;Send X-Frame-Options: deny header.&lt;/li&gt;
&lt;li&gt;Send Content-Security-Policy: default-src &amp;lsquo;none&amp;rsquo; header.&lt;/li&gt;
&lt;li&gt;Remove fingerprinting headers - X-Powered-By, Server, X-AspNet-Version, etc.&lt;/li&gt;
&lt;li&gt;Force content-type for your response, if you return application/json then your response content-type is application/json.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t return sensitive data like credentials, Passwords, or security tokens.&lt;/li&gt;
&lt;li&gt;Return the proper status code according to the operation completed. (e.g. 200 OK, 400 Bad Request, 401 Unauthorized, 405 Method Not Allowed, etc.).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CI &amp;amp; CD&lt;ul&gt;
&lt;li&gt;Audit your design and implementation with unit/integration tests coverage.&lt;/li&gt;
&lt;li&gt;Use a code review process and disregard self-approval.&lt;/li&gt;
&lt;li&gt;Ensure that all components of your services are statically scanned by AV software before pushing to production, including vendor libraries and other dependencies.&lt;/li&gt;
&lt;li&gt;Design a rollback solution for deployments.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="see-also"&gt;See also:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;yosriady/api-development-tools - A collection of useful resources for building
RESTful HTTP+JSON APIs.&lt;/li&gt;
&lt;/ul&gt;</content><category term="api"></category><category term="security"></category><category term="checklist"></category><category term="REST"></category><category term="SOAP"></category><category term="XML"></category></entry><entry><title>Rowhammer and ECC memory</title><link href="/egberts/articles/rowhammer-and-ecc-memory.html" rel="alternate"></link><published>2018-11-22T08:13:00-05:00</published><updated>2018-11-22T08:13:00-05:00</updated><author><name></name></author><id>tag:None,2018-11-22:/egberts/articles/rowhammer-and-ecc-memory.html</id><summary type="html">&lt;h2 id="rowhammer-in-ecc-memory"&gt;Rowhammer in ECC memory&lt;/h2&gt;
&lt;h6 id="_1"&gt;&lt;/h6&gt;
&lt;p&gt;Now isn&amp;rsquo;t that something?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://arstechnica.com/information-technology/2018/11/potentially-disastrous-rowhammer-bitflips-can-bypass-ecc-protections/"&gt;https://arstechnica.com/information-technology/2018/11/potentially-disastrous-rowhammer-bitflips-can-bypass-ecc-protections/&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;h2 id="rowhammer-in-ecc-memory"&gt;Rowhammer in ECC memory&lt;/h2&gt;
&lt;h6 id="_1"&gt;&lt;/h6&gt;
&lt;p&gt;Now isn&amp;rsquo;t that something?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://arstechnica.com/information-technology/2018/11/potentially-disastrous-rowhammer-bitflips-can-bypass-ecc-protections/"&gt;https://arstechnica.com/information-technology/2018/11/potentially-disastrous-rowhammer-bitflips-can-bypass-ecc-protections/&lt;/a&gt;&lt;/p&gt;</content><category term="Rowhammer"></category><category term="ECC"></category><category term="exploit"></category><category term="hardware"></category></entry><entry><title>Web Security Advanced Topic 2018</title><link href="/egberts/articles/web-security-advanced-topic-2018.html" rel="alternate"></link><published>2018-11-22T00:00:00-05:00</published><updated>2018-11-22T00:00:00-05:00</updated><author><name></name></author><id>tag:None,2018-11-22:/egberts/articles/web-security-advanced-topic-2018.html</id><summary type="html">&lt;p&gt;Advanced exploits of web security in 2018&lt;/p&gt;</summary><content type="html">&lt;h2 id="advanced-wed-security-topic-2018"&gt;Advanced Wed Security Topic 2018&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://blog.georgovassilis.com/2016/04/16/advanced-web-security-topics/"&gt;https://blog.georgovassilis.com/2016/04/16/advanced-web-security-topics/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;:::{.alert .alert-info}
This is rather a serious alert
:::&lt;/p&gt;</content><category term="http"></category><category term="security"></category><category term="exploit"></category></entry><entry><title>Public Nameservers with DNSSEC support</title><link href="/egberts/articles/public-nameservers-with-dnssec-support.html" rel="alternate"></link><published>2018-11-20T15:11:00-05:00</published><updated>2018-11-20T15:11:00-05:00</updated><author><name></name></author><id>tag:None,2018-11-20:/egberts/articles/public-nameservers-with-dnssec-support.html</id><summary type="html">&lt;p&gt;An authoritative list of public name servers supporting DNSSEC.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here is a list of Open DNS servers that can prove that my highly hardened
personal website is a secured and “un-hackable”.  Basically this test was done
using the “dig” tool with ad notation of whether DNSSEC is supported (and a
small notation if ca is supported too)
The command used is:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dig +dnssec mywebsiteredacted.net. @&amp;lt;nameserver&amp;gt;
&lt;span class="c1"&gt;# and &amp;#39;ad&amp;#39; flag appears as authenticated,&lt;/span&gt;
&lt;span class="c1"&gt;# and note any absense of &amp;#39;ca&amp;#39; flag&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The safest DNS nameservers that properly deploy DNSSEC are listed below:

&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;DNSSEC support&lt;/th&gt;
            &lt;th class="justtable"&gt; IP address&lt;/th&gt;
            &lt;th class="justtable"&gt;  Name of Nameserver Provider&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;YES&lt;/td&gt;
                &lt;td class="justtable"&gt;     185.228.168.9           &lt;/td&gt;
                &lt;td class="justtable"&gt;  CleanBrowsing DNS&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;YES&lt;/td&gt;
                &lt;td class="justtable"&gt;     185.228.169.9           &lt;/td&gt;
                &lt;td class="justtable"&gt;  CleanBrowsing DNS&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;YES&lt;/td&gt;
                &lt;td class="justtable"&gt;     156.154.70.1            &lt;/td&gt;
                &lt;td class="justtable"&gt;  DNS Advantage&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;YES&lt;/td&gt;
                &lt;td class="justtable"&gt;     156.154.71.1            &lt;/td&gt;
                &lt;td class="justtable"&gt;  DNS Advantage&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;YES&lt;/td&gt;
                &lt;td class="justtable"&gt;     84.200.69.80            &lt;/td&gt;
                &lt;td class="justtable"&gt;  DNS Watch&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;YES&lt;/td&gt;
                &lt;td class="justtable"&gt;     84.200.70.40            &lt;/td&gt;
                &lt;td class="justtable"&gt;  DNS Watch&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;YES&lt;/td&gt;
                &lt;td class="justtable"&gt;     216.146.35.35           &lt;/td&gt;
                &lt;td class="justtable"&gt;  Dyn&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;YES&lt;/td&gt;
                &lt;td class="justtable"&gt;     216.146.36.36           &lt;/td&gt;
                &lt;td class="justtable"&gt;  Dyn&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;YES&lt;/td&gt;
                &lt;td class="justtable"&gt;     81.218.119.11           &lt;/td&gt;
                &lt;td class="justtable"&gt;  GreenTeamDNS&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;YES&lt;/td&gt;
                &lt;td class="justtable"&gt;     74.82.42.42             &lt;/td&gt;
                &lt;td class="justtable"&gt;  HurricaneElectric&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;YES&lt;/td&gt;
                &lt;td class="justtable"&gt;     156.154.70.1            &lt;/td&gt;
                &lt;td class="justtable"&gt;  NeuStar&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;YES&lt;/td&gt;
                &lt;td class="justtable"&gt;     156.154.71.1            &lt;/td&gt;
                &lt;td class="justtable"&gt;  NeuStar&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;YES&lt;/td&gt;
                &lt;td class="justtable"&gt;     9.9.9.9                 &lt;/td&gt;
                &lt;td class="justtable"&gt;  Quad9&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;YES&lt;/td&gt;
                &lt;td class="justtable"&gt;     149.112.112.112         &lt;/td&gt;
                &lt;td class="justtable"&gt;  Quad9&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;
If you are using any of the DNS servers below this line, then when you visit
your banking website, your transaction will not be safe:

&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;DNSSEC support&lt;/th&gt;
            &lt;th class="justtable"&gt; IP address&lt;/th&gt;
            &lt;th class="justtable"&gt;  Name of Nameserver Provider&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;YES&lt;/td&gt;
                &lt;td class="justtable"&gt;     199.85.126.10           &lt;/td&gt;
                &lt;td class="justtable"&gt;  Norton ConnectSafe (discontinued)&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;YES&lt;/td&gt;
                &lt;td class="justtable"&gt;     199.85.126.20           &lt;/td&gt;
                &lt;td class="justtable"&gt;  Norton ConnectSafe (discontinued)&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;YES&lt;/td&gt;
                &lt;td class="justtable"&gt;     199.85.127.10           &lt;/td&gt;
                &lt;td class="justtable"&gt;  Norton ConnectSafe (discontinued)&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       1.0.0.1                &lt;/td&gt;
                &lt;td class="justtable"&gt;   Cloudflare&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       109.69.8.51            &lt;/td&gt;
                &lt;td class="justtable"&gt;   puntCAT&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       1.1.1.1                &lt;/td&gt;
                &lt;td class="justtable"&gt;   Cloudflare&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       176.103.130.130        &lt;/td&gt;
                &lt;td class="justtable"&gt;   AdGuard&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       176.103.130.131        &lt;/td&gt;
                &lt;td class="justtable"&gt;   AdGuard&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       176.103.130.132        &lt;/td&gt;
                &lt;td class="justtable"&gt;   AdGuard Family&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       176.103.130.134        &lt;/td&gt;
                &lt;td class="justtable"&gt;   AdGuard Family&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       195.46.39.39           &lt;/td&gt;
                &lt;td class="justtable"&gt;   SafeDNS&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       195.46.39.40           &lt;/td&gt;
                &lt;td class="justtable"&gt;   SafeDNS&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       198.101.242.72         &lt;/td&gt;
                &lt;td class="justtable"&gt;   AlternateDNS&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       209.244.0.3            &lt;/td&gt;
                &lt;td class="justtable"&gt;   Level 3&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       209.244.0.4            &lt;/td&gt;
                &lt;td class="justtable"&gt;   Level 3&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       23.253.163.53          &lt;/td&gt;
                &lt;td class="justtable"&gt;   AlternateDNS&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       37.235.1.174           &lt;/td&gt;
                &lt;td class="justtable"&gt;   FreeDNS&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       37.235.1.177           &lt;/td&gt;
                &lt;td class="justtable"&gt;   FreeDNS&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       77.88.8.1              &lt;/td&gt;
                &lt;td class="justtable"&gt;   YandexDNS&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       77.88.8.8              &lt;/td&gt;
                &lt;td class="justtable"&gt;   YandexDNS&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       8.8.4.4                &lt;/td&gt;
                &lt;td class="justtable"&gt;   Google DNS&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       8.8.8.8                &lt;/td&gt;
                &lt;td class="justtable"&gt;   Google DNS&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       89.233.43.71           &lt;/td&gt;
                &lt;td class="justtable"&gt;   UncensoredDNS&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       91.239.100.100         &lt;/td&gt;
                &lt;td class="justtable"&gt;   UncensoredDNS&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no&lt;/td&gt;
                &lt;td class="justtable"&gt;       bind.odvr.dns-oarc.net &lt;/td&gt;
                &lt;td class="justtable"&gt;   DNS OARC&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no NOcd&lt;/td&gt;
                &lt;td class="justtable"&gt;  208.67.220.123         &lt;/td&gt;
                &lt;td class="justtable"&gt;   OPENDNS FamilyShield&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no NOcd&lt;/td&gt;
                &lt;td class="justtable"&gt;  208.67.220.220         &lt;/td&gt;
                &lt;td class="justtable"&gt;   OPENDNS&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no NOcd&lt;/td&gt;
                &lt;td class="justtable"&gt;  208.67.222.123         &lt;/td&gt;
                &lt;td class="justtable"&gt;   OPENDNS FamilyShield&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no NOcd&lt;/td&gt;
                &lt;td class="justtable"&gt;  208.67.222.222         &lt;/td&gt;
                &lt;td class="justtable"&gt;   OPENDNS&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no NOcd&lt;/td&gt;
                &lt;td class="justtable"&gt;  8.20.247.20            &lt;/td&gt;
                &lt;td class="justtable"&gt;   Comodo&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;no NOcd&lt;/td&gt;
                &lt;td class="justtable"&gt;  8.26.56.26             &lt;/td&gt;
                &lt;td class="justtable"&gt;   Comodo&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;&lt;/p&gt;</content><category term="DNSSEC"></category><category term="dns"></category></entry><entry><title>Python Code Syntax using Markdown</title><link href="/egberts/articles/code-syntax-python-md.html" rel="alternate"></link><published>2018-11-15T12:22:00-05:00</published><updated>2018-11-15T12:35:00-05:00</updated><author><name>Eggie</name></author><id>tag:None,2018-11-15:/egberts/articles/code-syntax-python-md.html</id><summary type="html">&lt;p&gt;A short version of how to do code syntax for Python&lt;/p&gt;</summary><content type="html">&lt;p&gt;I&amp;rsquo;ve been bitten by this failure of code syntax highlighting all too often,
this time with Bootstrap-Dark, a &lt;a href="Pelican"&gt;Pelican&lt;/a&gt; theme.&lt;/p&gt;
&lt;p&gt;But the Firefox Web Developer shows a totally different color scheme than what
the rest of the CSS style is using.&lt;/p&gt;
&lt;p&gt;My problem was that I was using an outdated pygment.css file
(that came with a Pelican theme, bootstrap).&lt;/p&gt;
&lt;p&gt;It didn&amp;rsquo;t matter what the theme&amp;rsquo;s HTML coding is because Pygments is
auto-generated by Pelican calling the latest Pygment functions.&lt;/p&gt;
&lt;p&gt;It matter that pygments.css didn&amp;rsquo;t get upgraded inside the Pelican theme
package.&lt;/p&gt;
&lt;p&gt;In my version of template HTML, Pelican (correctly) autogenerated using
Pygments API the following HTML div tag as:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;codehilite&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;c1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The pygments.css that came with the Pelican bootstrap-dark theme shows:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;highlight&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;hll&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#ffffcc&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Whereas the older pygments.css (included with Pelican bootstrap-dark theme),
it only offered &lt;code&gt;highlight&lt;/code&gt; class, yet no &lt;code&gt;codehilite&lt;/code&gt; were seen in that
older CSS file.&lt;/p&gt;
&lt;p&gt;(Thanks to &lt;code&gt;Firefox-&amp;gt;Windows-&amp;gt;Web Developer-&amp;gt;Toggle&lt;/code&gt; menu option for
pointing out this &amp;ldquo;breakage&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Replacing the &lt;code&gt;pygments.css&lt;/code&gt; CSS-style file does the trick in restoring this
much needed code syntax highlighting capability for Pelican bootstrap-dark
theme.&lt;/p&gt;
&lt;p&gt;To regenerate the &lt;code&gt;pygments.css&lt;/code&gt; file, execute:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pygmentize -S default -f html -a .codehilite &amp;gt; pygments.css
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or for a darker theme used like this website, use Pygmentize &lt;code&gt;monokai&lt;/code&gt; style, as listed in &lt;code&gt;pygmentize
-L&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pygmentize -S monokai -f html -a .codehilite &amp;gt; pygments.css
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Again, problem was that Pygments changed its HTTP tag class (and properly
so) to a newer &lt;em&gt;codehilite&lt;/em&gt; from an older &lt;em&gt;highlight&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id="test-of-python-code-syntax-highlighting"&gt;Test of Python Code Syntax Highlighting&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve demonstrated various ways to do code syntax highlighting below.&lt;/p&gt;
&lt;p&gt;Also showed one way not to do code syntax highlighting.&lt;/p&gt;
&lt;h3 id="three-colon-python-surrounding-by-three-backticks"&gt;Three-colon Python surrounding by three-backticks&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# using 3-backtick/3-colon python on different lines&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Above was done using Markdown notation:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    ```
    :::python
    # using 3-backtick/3-colon python on different lines
    if a === 1:
        print(&amp;quot;foo&amp;quot;)
    ```
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="three-backtick-python-on-same-line"&gt;Three-backtick python on same line&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# using 3-backtick python in same line&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Above was done using Markdown notation:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   ```python
   # using 3-backtick python in same line
       if a === 1:
           print(&amp;quot;foo&amp;quot;)
    ```
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;NOTE: above method breaks vim editor with Markdown syntax highlighting.&lt;/p&gt;
&lt;h3 id="shebang-method-on-separate-lines-from-3-backtick"&gt;shebang method, on separate lines from 3-backtick&lt;/h3&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Above was done using Markdown notation:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    ```
    #!/usr/bin/python
        if a === 1:
            print(&amp;quot;foo&amp;quot;)
    ```
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="three-backtick-three-colon-python-on-separate-lines"&gt;Three-backtick, three-colon python on separate lines&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Above was done using Markdown notation:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    ```
    :::python
        if a === 1:
            print(&amp;quot;foo&amp;quot;)
    ```
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="no-backtick-4-char-tab-shebang"&gt;No-backtick, 4-char-tab, shebang&lt;/h3&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Above was done using Markdown notation:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="c1"&gt;#!python&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I think that the above method is the best method for a Markdown-type file.&lt;/p&gt;
&lt;h2 id="what-doesnt-work"&gt;What Doesn&amp;rsquo;t Work&lt;/h2&gt;
&lt;h3 id="three-backtick-three-colon-python-on-same-line"&gt;Three-backtick, three-colon python on same line&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    ```:::python
        if a === 1:
            print(&amp;quot;foo&amp;quot;)
    ```
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;above doesn&amp;rsquo;t work, don&amp;rsquo;t do that.&lt;/p&gt;
&lt;p&gt;End of test.&lt;/p&gt;
&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;
&lt;p&gt;Paying attention to the mid-panel of Firefox Web Developer for its color scheme
and whether or not it got inherited from an higher-order class&amp;rsquo;s color-scheme
helps to troubleshoot this onerous color syntax error.
In my case, it was the name of HTTP tag class being changed by Pygment
package (or theme not keeping up with &amp;ldquo;The Jones.&amp;rdquo;)&lt;/p&gt;
&lt;p&gt;If you want line numbering, SHEBANG method is the way to go.&lt;/p&gt;</content><category term="code syntax"></category><category term="pelican"></category><category term="markdown"></category><category term="python"></category><category term="pygments"></category><category term="CSS"></category><category term="fix"></category><category term="HTML"></category></entry><entry><title>Anti Debugging Detection &amp; Prevention</title><link href="/egberts/articles/anti-debugging-detection-prevention.html" rel="alternate"></link><published>2018-11-14T08:00:00-05:00</published><updated>2018-11-14T08:00:00-05:00</updated><author><name></name></author><id>tag:None,2018-11-14:/egberts/articles/anti-debugging-detection-prevention.html</id><summary type="html">&lt;p&gt;Debugger Detection/Prevention
slug: anti-debugging-methods&lt;/p&gt;
&lt;p&gt;some source in [LordNoteworthy@github]. Most common/interesting ones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;IsDebuggerPresent()&lt;/code&gt;, &lt;code&gt;CheckRemoteDebuggerPresent()&lt;/code&gt; etc. (quite silly, mostly as a kinda-decoy)
        OS calls are not 100% obfuscatable =&amp;gt; using them (unless they’re actually inlines or macros) is a Bad Idea™ (Bad Example: [zer0fl4g@github]). IF using them – obfuscate …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Debugger Detection/Prevention
slug: anti-debugging-methods&lt;/p&gt;
&lt;p&gt;some source in [LordNoteworthy@github]. Most common/interesting ones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;IsDebuggerPresent()&lt;/code&gt;, &lt;code&gt;CheckRemoteDebuggerPresent()&lt;/code&gt; etc. (quite silly, mostly as a kinda-decoy)
        OS calls are not 100% obfuscatable =&amp;gt; using them (unless they’re actually inlines or macros) is a Bad Idea™ (Bad Example: [zer0fl4g@github]). IF using them – obfuscate system calls and literals (such as obfuscating “OllyDbg” for FindWindow(), and obfuscating “FindWindow” for GetProcAddress()); more on obfuscating system calls below&lt;/li&gt;
&lt;li&gt;Not-so-obvious system calls, such as OpenProcess(“csrss.exe”),&lt;/li&gt;
&lt;li&gt;OutputDebugString(), UnhandledExceptionFilter()
    FindWindow() (silly, but…)&lt;/li&gt;
&lt;li&gt;Memory reads. NtGlobalFlag, heap flags, KdDebuggerEnabled, GetLastError() (cmp&lt;/li&gt;
&lt;li&gt;fs:[ebp+34h], ebp, cmp gs:[rbp+68h], ebp), TODO – anything else? Reading from&lt;/li&gt;
&lt;li&gt;RAM without function call(!).&lt;ul&gt;
&lt;li&gt;DON’T use directly for comparisons; instead – use as a part of data obfuscation (in particular, will look similar to ‘global read of known value’ used to prevent optimizing out). Effective partial compares when using for data obfuscation (using &amp;amp;mask1 in one place, |mask2 in another place).&lt;/li&gt;
&lt;li&gt;More devious: use the value to generate decryption key, then try to decrypt several pieces of code (with one decrypted by “correct” key, and another by “being-debugged” key, other combinations of “being-debugged” flags also can be accounted for). Then use this code to communicate to the server – which now can distinguish clients which are being debugged (gotcha!).&lt;ul&gt;
&lt;li&gt;wondering if you are crazy:“Even more devious: use the value to generate encryption key, which is used to encrypt a well-defined constant, which is sent to the server – which then can try different keys to decrypt (gotcha!)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Even more devious: use the value to generate encryption key, which is used to encrypt a well-defined constant, which is sent to the server – which then can try different keys to decrypt (gotcha!)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;“self-debug” (actually – debug a copy of the process). Only one ring 3&lt;/li&gt;
&lt;li&gt;debugger allowed at least in Windows.&lt;/li&gt;
&lt;li&gt;Hiding thread from debugger: NtSetInformationThread, NtCreateThreadEx&lt;/li&gt;
&lt;li&gt;(reportedly used by Steam at least at some point)&lt;/li&gt;
&lt;li&gt;MOV SS&lt;/li&gt;
&lt;li&gt;INT 2D&lt;/li&gt;
&lt;li&gt;“check within TLS callback” trick&lt;/li&gt;
&lt;li&gt;NB: using Zw* counterparts [TODO – elaborate]&lt;/li&gt;
&lt;li&gt;Messing with debuggers:&lt;ul&gt;
&lt;li&gt;BlockInput; not really detection, but…&lt;/li&gt;
&lt;li&gt;REP &lt;some-op&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[Kulchytskyy] Most interesting techniques (beyond [Ferrie])&lt;ul&gt;
&lt;li&gt;NtCreateThreadEx to hide threads&lt;/li&gt;
&lt;li&gt;Asm to set SEH handlers (32-bit only); on table-based SEH in x64 Windows – see [NTInsider]&lt;/li&gt;
&lt;li&gt;KiUserExceptionDispatcher&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[Falliere].Techniques going beyond previous refs:&lt;ul&gt;
&lt;li&gt;PUSH SS/POP SS (actually, it is described in [Ferrie], but IMO explanation here is better)&lt;/li&gt;
&lt;li&gt;ICE breakpoint (0xF1); not to be confused with SoftICE.&lt;/li&gt;
&lt;li&gt;Scanning for INT 3 (0xCC). False positives. Also should scan for 0xFA [Falliere] and probably others. Checksums are generally preferred.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[OpenRCE] Techniques going beyond previous refs:&lt;ul&gt;
&lt;li&gt;LOCK CMPXCHG8B as an invalid instruction to raise SEH&lt;/li&gt;
&lt;li&gt;Lots of debugger-specific trickery&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[Tully]. Techniques going beyond previous refs:&lt;ul&gt;
&lt;li&gt;Removing PE Header&lt;/li&gt;
&lt;li&gt;Messing with debuggers:&lt;ul&gt;
&lt;li&gt;OutputDebugString Exploit for OllyDbg (TODO: is it still up-to-date?)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SoftICE detection (doesn’t make much sense now, esp. if your program is&lt;/li&gt;
&lt;li&gt;64-bit, but some ideas might be applicable to other debuggers): lots of&lt;/li&gt;
&lt;li&gt;discussion in [Crackproof your software]&lt;/li&gt;
&lt;/ul&gt;</content><category term="debugger"></category><category term="malware"></category></entry><entry><title>Python Code Syntax Highlighter using RST format in Pelican</title><link href="/egberts/articles/code-syntax-python-rst.html" rel="alternate"></link><published>2018-11-13T18:13:00-05:00</published><updated>2018-11-13T18:13:00-05:00</updated><author><name>Eggie</name></author><id>tag:None,2018-11-13:/egberts/articles/code-syntax-python-rst.html</id><summary type="html">&lt;p class="first last"&gt;A short version of how to do code syntax for Python&lt;/p&gt;
</summary><content type="html">&lt;div class="section" id="using-rst-code-block-option"&gt;
&lt;h2&gt;Using RST code-block option&lt;/h2&gt;
&lt;p&gt;Python code can be syntax-highlighted by using RST &lt;cite&gt;code-block&lt;/cite&gt; directive:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### uses CSS class highlighttable&lt;/span&gt;
&lt;span class="c1"&gt;### must have a blank line above&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;and the above was done using this RST snippet example:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;### uses CSS class highlighttable
### must have a blank line above
&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="ow"&gt;code-block&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="k"&gt;python&lt;/span&gt;

    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="section" id="using-rst-code-option"&gt;
&lt;h2&gt;Using RST code option&lt;/h2&gt;
&lt;p&gt;Or snippet of Python source code can be inserted into the RST file directly
but with no syntax highlighting used,
by using RST &lt;cite&gt;code&lt;/cite&gt; directive:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;and the above was done using this RST snippet example:&lt;/p&gt;
&lt;pre class="code rst literal-block"&gt;
&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="ow"&gt;code&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="k"&gt;python&lt;/span&gt;

&lt;span class="kn"&gt;&lt;/span&gt;    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="using-rst-code-include-option"&gt;
&lt;h2&gt;Using RST code-include option&lt;/h2&gt;
&lt;p&gt;Or Python source files can be included into the RST file directly,
then using RST &lt;cite&gt;code-include&lt;/cite&gt; directive and only displaying line 4 to 7:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    print(&amp;quot;Hello, world!&amp;quot;)
    sys.exit(1)
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;And the above was done using these RST snippet example:&lt;/p&gt;
&lt;pre class="code rst literal-block"&gt;
&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="ow"&gt;code-include&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt; incfile.py
    &lt;span class="nc"&gt;:lexer:&lt;/span&gt; &lt;span class="nf"&gt;'python'&lt;/span&gt;
    &lt;span class="nc"&gt;:encoding:&lt;/span&gt; &lt;span class="nf"&gt;'utf-8'&lt;/span&gt;
    &lt;span class="nc"&gt;:tab-width:&lt;/span&gt; &lt;span class="nf"&gt;4&lt;/span&gt;
    &lt;span class="nc"&gt;:start-line:&lt;/span&gt; &lt;span class="nf"&gt;4&lt;/span&gt;
    &lt;span class="nc"&gt;:end-line:&lt;/span&gt; &lt;span class="nf"&gt;7&lt;/span&gt;
&lt;/pre&gt;
&lt;div class="section" id="external-references"&gt;
&lt;h3&gt;External References&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://thomas-cokelaer.info/tutorials/sphinx/rest_syntax.html"&gt;REST Syntax&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="code syntax"></category><category term="pelican"></category><category term="rst"></category><category term="python"></category><category term="pygments"></category><category term="CSS"></category><category term="fix"></category><category term="HTML"></category></entry><entry><title>Bind9 Keys</title><link href="/egberts/articles/bind9-keys.html" rel="alternate"></link><published>2018-11-13T12:54:00-05:00</published><updated>2018-11-13T12:54:00-05:00</updated><author><name></name></author><id>tag:None,2018-11-13:/egberts/articles/bind9-keys.html</id><summary type="html">&lt;p&gt;Keys Used in DNSSEC&lt;/p&gt;</summary><content type="html">&lt;p&gt;DNS Keys&lt;/p&gt;
&lt;p&gt;There are several types of crypto keys used by DNS and Bind9.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TSIG&lt;/li&gt;
&lt;li&gt;DDNS&lt;/li&gt;
&lt;li&gt;RNDC&lt;/li&gt;
&lt;li&gt;GSS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can use RFC 2136 &amp;ldquo;DNS UPDATE&amp;rdquo;, either by scripting the nsupdate tool
or by using a compatible third-party client: Shared secret key (TSIG)&lt;/p&gt;
&lt;p&gt;To generate a secret key for authenticating the DNS record updates:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ tsig-keygen -r /dev/urandom &lt;span class="p"&gt;|&lt;/span&gt; tee tsig-key.private
key &lt;span class="s2"&gt;&amp;quot;tsig-key&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
     algorithm hmac-sha256&lt;span class="p"&gt;;&lt;/span&gt;
     secret &lt;span class="s2"&gt;&amp;quot;7P6HbRZRJCmtauo/lV0jwN9wkMgBTUikhf9JuaTvYT4=&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This key is known to the server and client, and nobody else.&lt;/p&gt;
&lt;p&gt;Copy the printed text into your named.conf. (You can have multiple keys
for different hosts, each with a unique name in the key &amp;ldquo;…&amp;rdquo; field.)&lt;/p&gt;
&lt;p&gt;Enable dynamic updates in the zone configuration:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  zone … &lt;span class="o"&gt;{&lt;/span&gt;
      …
      update-policy &lt;span class="o"&gt;{&lt;/span&gt;
          /* grant &lt;span class="sb"&gt;`&lt;/span&gt;&amp;lt;key_name&amp;gt;&lt;span class="sb"&gt;`&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;&amp;lt;policy&amp;gt;&lt;span class="sb"&gt;`&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;&amp;lt;record_types&amp;gt;&lt;span class="sb"&gt;`&lt;/span&gt; */
          grant &lt;span class="s2"&gt;&amp;quot;tsig-key&amp;quot;&lt;/span&gt; name myserver.example.com ANY&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Various different policies can be used; e.g. zonesub allows updating the
entire zone, and subdomain dyn.example.com has the obvious meaning.&lt;/p&gt;
&lt;p&gt;To perform DNS record updates:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  $ nsupdate -k tsig-key.private
  &amp;gt; zone example.com
  &amp;gt; del myserver.example.com
  &amp;gt; add myserver.example.com &lt;span class="m"&gt;3600&lt;/span&gt; A &lt;span class="m"&gt;100&lt;/span&gt;.64.1.1
  &amp;gt; send
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There are various clients capable of automatic updates. Public/private
key (SIG(0))&lt;/p&gt;
&lt;p&gt;To enerate a public/private key pair:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ dnssec-keygen -r /dev/urandom -T KEY -n USER myclient.example.com
$ ls K*
Kmyclient.example.com.+005+07399.key
Kmyclient.example.com.+005+07399.private
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The *.key file contains the public key – add it to your DNS zone.&lt;/p&gt;
&lt;p&gt;The *.private file contains the private key – copy it to the client
computer. (Actually, copy both files to the client computer.)&lt;/p&gt;
&lt;p&gt;Set up update-policy { } in exactly the same way as with TSIG.&lt;/p&gt;
&lt;p&gt;Perform updates also in the same way using nsupdate -k
&lt;filename&gt;.private.&lt;/p&gt;
&lt;p&gt;(Note: While TSIG key names are arbitrary, SIG(0) keys are stored in DNS
and therefore always named like hostnames/subdomains. The key name does
not need to match the hostname you&amp;rsquo;re updating, though.) Kerberos
(GSS-TSIG)&lt;/p&gt;
&lt;p&gt;A bit out of scope, but BIND9 supports this as well (mainly for use with
Active Directory).&lt;/p&gt;</content><category term="DNSSEC"></category><category term="dns"></category><category term="bind9"></category></entry><entry><title>DNSSEC Testing</title><link href="/egberts/articles/dnssec-testing.html" rel="alternate"></link><published>2018-11-12T12:15:00-05:00</published><updated>2018-11-12T12:15:00-05:00</updated><author><name></name></author><id>tag:None,2018-11-12:/egberts/articles/dnssec-testing.html</id><summary type="html">&lt;h2 id="dnssec-testing"&gt;DNSSEC Testing&lt;/h2&gt;
&lt;h3 id="domain-dnssec"&gt;Domain DNSSEC&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://dnsviz.net/d/egbert.net/dnssec/"&gt;DNSViz.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dnssec-analyzer.verisignlabs.com/egbert.net"&gt;VeriSign Labs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dnssec-name-and-shame.com/domain/egbert.net"&gt;DNS Name &amp;amp; Shame&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.zonemaster.fr/domain_check"&gt;ZoneMaster France&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="end-user-dnssec"&gt;End-User DNSSEC&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://en.conn.internet.nl/connection/"&gt;Internet NL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.dnssec-or-not.org/"&gt;DNSSEC or Not&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;h2 id="dnssec-testing"&gt;DNSSEC Testing&lt;/h2&gt;
&lt;h3 id="domain-dnssec"&gt;Domain DNSSEC&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://dnsviz.net/d/egbert.net/dnssec/"&gt;DNSViz.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dnssec-analyzer.verisignlabs.com/egbert.net"&gt;VeriSign Labs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dnssec-name-and-shame.com/domain/egbert.net"&gt;DNS Name &amp;amp; Shame&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.zonemaster.fr/domain_check"&gt;ZoneMaster France&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="end-user-dnssec"&gt;End-User DNSSEC&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://en.conn.internet.nl/connection/"&gt;Internet NL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.dnssec-or-not.org/"&gt;DNSSEC or Not&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="dns"></category><category term="dnssec"></category><category term="testing"></category></entry><entry><title>Custom Home Router, Verizon</title><link href="/egberts/articles/custom-home-router-verizon.html" rel="alternate"></link><published>2018-11-10T14:18:00-05:00</published><updated>2018-11-13T12:55:00-05:00</updated><author><name></name></author><id>tag:None,2018-11-10:/egberts/articles/custom-home-router-verizon.html</id><summary type="html">&lt;h2 id="ethernet-via-ont"&gt;Ethernet via ONT&lt;/h2&gt;
&lt;p&gt;Your throughput is a bit higher using that Ethernet port on the ONT than
letting an Verizon-provided broadband modem router bridge the MoAC cable
into providing that Ethernet.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ActionTec Rev A/C/D MoCa has 100 Mbps throughput&lt;/li&gt;
&lt;li&gt;ActionTec Rev E/F MoCa has 100 Mbps throughput …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h2 id="ethernet-via-ont"&gt;Ethernet via ONT&lt;/h2&gt;
&lt;p&gt;Your throughput is a bit higher using that Ethernet port on the ONT than
letting an Verizon-provided broadband modem router bridge the MoAC cable
into providing that Ethernet.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ActionTec Rev A/C/D MoCa has 100 Mbps throughput&lt;/li&gt;
&lt;li&gt;ActionTec Rev E/F MoCa has 100 Mbps throughput&lt;/li&gt;
&lt;li&gt;ActionTec Rev. G/I MoCA has 175 Mbps throughput&lt;/li&gt;
&lt;li&gt;FiOS Quantum Gateway MoCA has 200 Mbps throughput&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;whereas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ONT direct Ethernet goes up to 1 Gbps throughput&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So just for Internet/data service, why bother with MoCA or R6 cabling?&lt;/p&gt;
&lt;p&gt;Call Verizon Support, ask to &amp;ldquo;bridge the Ethernet at the ONT&amp;rdquo; using the
same Verizon&amp;rsquo;s own router but through Ethernet (instead of RG-6) cable.
Be patient. Escalate to level 2 if necessary.&lt;/p&gt;
&lt;h3 id="clone-mac-address"&gt;Clone MAC address&lt;/h3&gt;
&lt;p&gt;If you plan to keep the Verizon-provided modem router because of Cable
TV, then you will have to clone the MAC address.&lt;/p&gt;
&lt;p&gt;If you are strictly an Internet-only household, then no need to clone
MAC address of Verizon-provided router because you can return it and
save $12/month.&lt;/p&gt;
&lt;p&gt;I used to recommend cloning the MAC address of your FiOS router onto
your new router. However, one commenter had a pretty terrible time with
this, and actually had his service cancelled. Instead, I recommend using
your router with it’s true MAC address. This will most likey involve a
call to Verizon, but it’s worth a few minutes on the phone.&lt;/p&gt;
&lt;p&gt;As for me, I&amp;rsquo;ve successfully cloned the MAC address ONLY because I use
custom ISC DHCP client that mirrored the behavior of the original
ActionTec broadband modem router. I can clone MAC only because I am
still holding the ActionTec equipment.&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://loganmarchione.com/2015/07/use-your-own-router-with-verizon-fios/#comment-152266"&gt;https://loganmarchione.com/2015/07/use-your-own-router-with-verizon-fios/#comment-152266&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="verizon"></category><category term="router"></category><category term="homelan"></category></entry><entry><title>Overview of Verizon FiOS Network</title><link href="/egberts/articles/overview-of-verizon-fios-network.html" rel="alternate"></link><published>2018-11-10T13:28:00-05:00</published><updated>2018-11-13T12:56:00-05:00</updated><author><name></name></author><id>tag:None,2018-11-10:/egberts/articles/overview-of-verizon-fios-network.html</id><summary type="html">&lt;h2 id="overview"&gt;Overview&lt;/h2&gt;
&lt;p&gt;Components, as listed in network order from your PC to the Internet:&lt;/p&gt;
&lt;p&gt;&lt;img src="HFC network.png" title="HFC network.png" alt="HFC network.png" width="800" /&gt;&lt;/p&gt;
&lt;h2 id="home-network"&gt;Home Network&lt;/h2&gt;
&lt;p&gt;Your home network can be connected in one of three ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ethernet by ONT direct Cat-5 (preferred)&lt;/li&gt;
&lt;li&gt;Ethernet via Modem Router MoCA coaxial (common)&lt;/li&gt;
&lt;li&gt;Ethernet via Set-Top Box&amp;rsquo;s MoCA coaxial (rare)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ethernet-via-ont-direct-cat-5-preferred"&gt;Ethernet via ONT …&lt;/h3&gt;</summary><content type="html">&lt;h2 id="overview"&gt;Overview&lt;/h2&gt;
&lt;p&gt;Components, as listed in network order from your PC to the Internet:&lt;/p&gt;
&lt;p&gt;&lt;img src="HFC network.png" title="HFC network.png" alt="HFC network.png" width="800" /&gt;&lt;/p&gt;
&lt;h2 id="home-network"&gt;Home Network&lt;/h2&gt;
&lt;p&gt;Your home network can be connected in one of three ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ethernet by ONT direct Cat-5 (preferred)&lt;/li&gt;
&lt;li&gt;Ethernet via Modem Router MoCA coaxial (common)&lt;/li&gt;
&lt;li&gt;Ethernet via Set-Top Box&amp;rsquo;s MoCA coaxial (rare)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ethernet-via-ont-direct-cat-5-preferred"&gt;Ethernet via ONT direct Cat-5 (preferred)&lt;/h3&gt;
&lt;p&gt;&lt;img src="Home network via ONT Ethernet.png" title="Home network via ONT Ethernet.png" alt="Home network via ONT Ethernet.png" width="800" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Personal Computer&lt;/li&gt;
&lt;li&gt;Cat-5E cabling for 802.3/1000Base-T&lt;/li&gt;
&lt;li&gt;Your firewall (you do do have a firewall?)&lt;/li&gt;
&lt;li&gt;Cat-5E cabling for 802.3/1000Base-T&lt;/li&gt;
&lt;li&gt;ActionTec MI424WR, 4-port wireless broadband modem router, 2-channel MoCA,.&lt;/li&gt;
&lt;li&gt;Cat-5E cabling for 802.3/1000Base-T; no PPP, no PPPoE, no PPTP.  Straight TCP/IP.&lt;/li&gt;
&lt;li&gt;ONT, Motorola 1400, via Ethernet RJ-45 connector&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: Call FiOS support at 1-888-553-1555. Remember what your mother
taught you: use your manners! The Verizon technician doesn’t have to do
this for you and will be doing you a favor. Ask customer support to
switch the ONT from coaxial output to ethernet output. If they give you
a hard time about doing it remotely, tell them that you want to use your
own router, an ethernet cable is already run, and you don’t need a
technician to come out. You may even need to ask for a supervisor or
level-two support technician. Expect to spend about 30-45 minutes on the
phone.&lt;/p&gt;
&lt;h3 id="ethernet-via-modem-router-moca-coaxial-common"&gt;Ethernet via Modem Router MoCA coaxial (common)&lt;/h3&gt;
&lt;p&gt;Most commonly used method by Verizon installer is:&lt;/p&gt;
&lt;p&gt;![](Home network via Modem Router MoCA coaxial.png &amp;ldquo;Home network via Modem Router MoCA coaxial.png&amp;rdquo;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Personal Computer&lt;/li&gt;
&lt;li&gt;Cat-5E cabling for 802.3/1000Base-T&lt;/li&gt;
&lt;li&gt;Your firewall&lt;/li&gt;
&lt;li&gt;Cat-5E cabling for 802.3/1000Base-T&lt;/li&gt;
&lt;li&gt;ActionTec MI424WR, 4-port wireless broadband router, 2-channel MoCA&lt;/li&gt;
&lt;li&gt;RG-6 cabling, with F-connectors, MoCA protocol&lt;/li&gt;
&lt;li&gt;ONT, Motorola 1400, coaxial, via F-connector&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ethernet-via-set-top-boxs-moca-coaxial-rare"&gt;Ethernet via Set-Top Box&amp;rsquo;s MoCA coaxial (rare)&lt;/h3&gt;
&lt;p&gt;or that rarely used Ethernet port behind the Set-Top Box&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Personal Computer&lt;/li&gt;
&lt;li&gt;Cat-5E cabling for 802.3/1000Base-T&lt;/li&gt;
&lt;li&gt;Your firewall&lt;/li&gt;
&lt;li&gt;Cat-5E cabling for 802.3/1000Base-T&lt;/li&gt;
&lt;li&gt;Cable Set-Top Box (STB), IP-STB1 cable media gateway (MAC Arris/ResiNet, aka&lt;/li&gt;
&lt;li&gt;DOCSIS Gateway w/ MoCA, aka Digital STB)&lt;/li&gt;
&lt;li&gt;RG-6 cabling, with F-connectors, MoCA protocol&lt;/li&gt;
&lt;li&gt;ONT, Motorola 1400, coaxial, via F-connector&lt;/li&gt;
&lt;li&gt;ISP Network&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="then-to-the-isp-network"&gt;Then to the ISP Network&lt;/h3&gt;
&lt;p&gt;then&lt;/p&gt;
&lt;p&gt;&lt;img src="Verizon ISP network.png" title="Verizon ISP network.png" alt="Verizon ISP network.png" width="800" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Motorola ONT 1400 Single Family Unit (SFU) is an ITU G.984-compliant GPON intelligent optical network terminal (ONT)&lt;/li&gt;
&lt;li&gt;Fiber cable, Single-Mode (SM), SC connector&lt;/li&gt;
&lt;li&gt;MTP/MTO optical splitter, 4:1, on telephone poles&lt;/li&gt;
&lt;li&gt;Optical Nodes&lt;/li&gt;
&lt;li&gt;Trunk Fiber cable, Single-Mode (SM)&lt;/li&gt;
&lt;li&gt;Head-End&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="head-end"&gt;Head-End&lt;/h3&gt;
&lt;p&gt;Head-End comprises of the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Trunk Fiber cable, Single-Mode (SM)&lt;/li&gt;
&lt;li&gt;EQAM (mixes cable and data)&lt;/li&gt;
&lt;li&gt;Switch, Juniper EX3300, 24-Port PoE+ GE/4-Port SFP+ AC&lt;/li&gt;
&lt;li&gt;Hybrid Fiber Coaxial (HFC) network&lt;/li&gt;
&lt;li&gt;CMTS&lt;/li&gt;
&lt;li&gt;CATV&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="technical-evolution"&gt;Technical Evolution&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class="header"&gt;
&lt;th&gt;&lt;p&gt;DOCSIS RELEASE&lt;/p&gt;&lt;/th&gt;
&lt;th&gt;&lt;p&gt;MAX DOWNLOAD&lt;/p&gt;&lt;/th&gt;
&lt;th&gt;&lt;p&gt;MAX UPLOAD&lt;/p&gt;&lt;/th&gt;
&lt;th&gt;&lt;p&gt;DATE RELEASED&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;p&gt;DOCSIS 1&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;40 Mbps&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;10 Mbps&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;p&gt;DOCSIS 1.1&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;40 Mbps&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;10 Mbps&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;p&gt;DOCSIS 2&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;40 Mbps&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;30 Mbps&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;p&gt;DOCSIS 2.5&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;--&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Discontinued use of RG-59 cable&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;p&gt;DOCSIS 3&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;1.2 Gbps&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;200 Mbps&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;p&gt;DOCSIS 3.1&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;10 Gbps&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;1 Gbps&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;p&gt;DOCSIS 3.1 Full Duplex&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;10 Gbps&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;10 Gbps&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;2015&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id="equipments"&gt;Equipments&lt;/h2&gt;
&lt;h3 id="gpon-ont"&gt;GPON ONT&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;SFH ONT 612AZ&lt;/li&gt;
&lt;li&gt;[&lt;a href="https://www.actiontec.com/products/wifi-routers-gateways/fiber/bhr-rev-i/"&gt;https://www.actiontec.com/products/wifi-routers-gateways/fiber/bhr-rev-i/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Motorola ONT 1400]&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class="header"&gt;
&lt;th&gt;&lt;p&gt;Manufacturer&lt;/p&gt;&lt;/th&gt;
&lt;th&gt;&lt;p&gt;Model&lt;/p&gt;&lt;/th&gt;
&lt;th&gt;&lt;p&gt;Type&lt;/p&gt;&lt;/th&gt;
&lt;th&gt;&lt;p&gt;Style&lt;/p&gt;&lt;/th&gt;
&lt;th&gt;&lt;p&gt;MoCA/Coax&lt;/p&gt;&lt;/th&gt;
&lt;th&gt;&lt;p&gt;Ethernet/VDSL2&lt;/p&gt;&lt;/th&gt;
&lt;th&gt;&lt;p&gt;POTS&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;p&gt;Alcatel&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;I-211M-L&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;SFU&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Interior Desktop&lt;/p&gt;
&lt;p&gt;Exterior&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;1: MoCA&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;1: 10/100/1G Ethernet&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;2&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;p&gt;Alcatel&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;O-24121G-A&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;MDU&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Shared&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;12&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;12: 10/100/1G Ethernet&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;24&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;p&gt;Alcatel&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;O-24121V-A&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;MDU&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Shared&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;12&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;12: VDSL2&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;24&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;p&gt;Alcatel&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;O-821M-A&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;SOHO&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Exterior&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;1: MoCA&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;2: 10/100/1G Ethernet&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;8&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;p&gt;Motorola&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;1000-GI4&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;SFU&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Interior&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;1: MoCA&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;1: 10/100/1G Ethernet&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;2&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;p&gt;Motorola&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;1000-GJ4&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;SFU&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Interior&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;1: MoCA&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;1: 10/100/1G Ethernet&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;2&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;p&gt;Motorola&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;1000-GT4&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;SFU&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Exterior&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;1: MoCA&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;1: 10/100/1G Ethernet&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;2&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;p&gt;Motorola&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;14842&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;SOHO&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Exterior&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;1: MoCA&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;5: 10/100/1G Ethernet&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;8&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;p&gt;Motorola&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;6000-GET&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;MDU&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Shared&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;1: MoCA&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;12: 10/100/1G Ethernet&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;24&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;p&gt;Motorola&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;6000-GVT&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;MDU&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Shared&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;1: MoCA&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;12: VDSL2&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;24&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Legend:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SFU Exterior (ONT Outside of Home): An ONT is installed outside. The
    battery&lt;/li&gt;
&lt;li&gt;backup unit (BBU) and power supply (PS) are installed inside. The PS
    must be&lt;/li&gt;
&lt;li&gt;within 6 feet of a grounded outlet. The PS can be up to 50 feet from
    the BBU.&lt;/li&gt;
&lt;li&gt;SFU Exterior installs are now only done if an SFU Interior is
    not feasible.&lt;/li&gt;
&lt;li&gt;SFU Interior (ONT Wall-Mounted Inside of Home): An All-In-One ONT is
    usually&lt;/li&gt;
&lt;li&gt;used on house interior installs. The ONT, BBU (if applicable) and PS
    are in a&lt;/li&gt;
&lt;li&gt;single enclosure. SFU Interior is the most common type of install.&lt;/li&gt;
&lt;li&gt;SFU Desktop (ONT Self-Standing Inside of Home): A small ONT is
    placed inside&lt;/li&gt;
&lt;li&gt;the house, not wall mounted. This setup is used if wall space
    is limited.&lt;/li&gt;
&lt;li&gt;Desktop ONTs can also be wall mounted inside or outside, in
    an enclosure. This&lt;/li&gt;
&lt;li&gt;makes them the most versatile, and therefore most common type of
    ONT used.&lt;/li&gt;
&lt;li&gt;SOHO Exterior (ONT Outside of Office): Same as SFU Exterior, except
    the ONT&lt;/li&gt;
&lt;li&gt;has extra Ethernet and Telephone ports for the
    Office/Small Business.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Phased out:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MDU Shared (ONT in Shared Location for Apartments and Condos): A
    shared ONT&lt;/li&gt;
&lt;li&gt;is placed in the apartment or condo building. Speeds are limited to
    anywhere&lt;/li&gt;
&lt;li&gt;from 15/5 to 75/75, depending on the ONT, and FiOS Digital Voice is
    not&lt;/li&gt;
&lt;li&gt;available. There is, however, FiOS Freedom Essentials, which
    isn&amp;rsquo;t VoIP.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="modem-router"&gt;Modem Router&lt;/h3&gt;
&lt;p&gt;DOCSIS 3.0 MoCA Modem Routers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;a href="https://www.actiontec.com/products/wifi-routers-gateways/fiber/bhr-rev-i/"&gt;https://www.actiontec.com/products/wifi-routers-gateways/fiber/bhr-rev-i/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ActionTec MI424WR]&lt;/li&gt;
&lt;li&gt;Fios Quantum Gateway&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="set-top-box"&gt;Set-Top Box&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Motorola QIP2500 (S-video, composite [RCA], Coax)&lt;/li&gt;
&lt;li&gt;Motorola 7232-P2, Multi-Room DVR&lt;/li&gt;
&lt;li&gt;Motorola 7216, HD DVR&lt;/li&gt;
&lt;li&gt;Motorola 7100-P2 HD Set-top Box&lt;/li&gt;
&lt;li&gt;Motorola 7100-P1 HD Set-top Box&lt;/li&gt;
&lt;li&gt;Cisco CHS 435 HD DVR&lt;/li&gt;
&lt;li&gt;Cisco CHS 335 HD Set-top Box&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="terminologies"&gt;Terminologies&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;CMTS - Cable Modem Termination System&lt;/li&gt;
&lt;li&gt;Directional Coupler - Similar to a splitter but with a different attenuation between output ports. Generally there is one main output that has little attenuation and a second output that has more attenuation.&lt;/li&gt;
&lt;li&gt;DOCSIS - Data Over Cable System Interface Specification, Cable TV&amp;rsquo;s data protocol&lt;/li&gt;
&lt;li&gt;Node - any device that connects to the MoCA network&lt;/li&gt;
&lt;li&gt;ONT - Optical Network Termination&lt;/li&gt;
&lt;li&gt;STB - Set-Top Box - Any device that feeds audio and video signals to a television. These are generally cable, satellite, or IP inputs.&lt;/li&gt;
&lt;li&gt;Telco - Telephone Company Service Provider&lt;/li&gt;
&lt;li&gt;WECB - Wi-Fi Ethernet Coax Bridge - a bridge which converts between Wi-Fi,&lt;/li&gt;
&lt;li&gt;Ethernet, and/or MoCA in any combination.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.cablelabs.com/specs/"&gt;https://www.cablelabs.com/specs/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www3.nd.edu/~cpoellab/teaching/cse40815/Chapter6.pdf"&gt;https://www3.nd.edu/~cpoellab/teaching/cse40815/Chapter6.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lightreading.com/cable-video/docsis/docsis-31-targets-10-gig-downstream/d/d-id/699136"&gt;http://www.lightreading.com/cable-video/docsis/docsis-31-targets-10-gig-downstream/d/d-id/699136&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apps.fcc.gov/edocs_public/attachmatch/FCC-16-6A1.pdf"&gt;https://apps.fcc.gov/edocs_public/attachmatch/FCC-16-6A1.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.klonex.com.pl/media/produkty/pdf/motorola-ont1400gt.pdf"&gt;http://www.klonex.com.pl/media/produkty/pdf/motorola-ont1400gt.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forums.verizon.com/t5/Fios-Internet/Using-your-own-router-with-Verizon-FiOS/td-p/851632"&gt;https://forums.verizon.com/t5/Fios-Internet/Using-your-own-router-with-Verizon-FiOS/td-p/851632&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="verizon"></category><category term="isp"></category></entry><entry><title>Bind9 Directories</title><link href="/egberts/articles/bind9-directories.html" rel="alternate"></link><published>2018-10-18T18:56:00-04:00</published><updated>2018-10-18T18:56:00-04:00</updated><author><name></name></author><id>tag:None,2018-10-18:/egberts/articles/bind9-directories.html</id><summary type="html">&lt;p&gt;Directories used by ISC Bind9&lt;/p&gt;</summary><content type="html">&lt;h2 id="bind9-directories"&gt;Bind9 directories&lt;/h2&gt;
&lt;p&gt;
&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;directory name&lt;/th&gt;
            &lt;th class="justtable"&gt; named.conf keyword&lt;/th&gt;
            &lt;th class="justtable"&gt; description&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;/etc/bind&lt;/td&gt;
                &lt;td class="justtable"&gt; directory&lt;/td&gt;
                &lt;td class="justtable"&gt; directory is a quoted string defining the absolute path for the server e.g. &amp;quot;/var/named&amp;quot;. All subsequent relative paths use this base directory. If no directory options is specified the directory from which BIND was loaded is used. This option may only be specified in a &amp;lsquo;global&amp;rsquo; options statement.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/etc/bind&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;file&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; zone files&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/etc/bind/keys&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;key-directory&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;key-directory is a quoted string defining the absolute path, for example, &amp;quot;/var/lib/bind/dynamic&amp;quot; where the keys used in the dynamic update of secure zones may be found. Only required if this directory is different from that defined by a directory option. This statement may only be used in a global options clause. &lt;code&gt;rndc&lt;/code&gt; &lt;code&gt;loadkeys&lt;/code&gt; and &lt;code&gt;rndc&lt;/code&gt; &lt;code&gt;sign&lt;/code&gt; reads from this directory. &amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/lib/bind&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/lib/bind/dynamic&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;managed-keys-directory&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; Zone files&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/etc/default/bind&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Default systemd settings for &lt;code&gt;named&lt;/code&gt; daemon startup (&lt;a href="bind9.service" class="uri" title="wikilink"&gt;bind9.service&lt;/a&gt;)&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/cache/bind&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;key-directory&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; Dynamically created keyfiles&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; logging for DNS &lt;code&gt;named&lt;/code&gt; daemon&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h2 id="bind9-files"&gt;Bind9 files&lt;/h2&gt;
&lt;p&gt;
&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;file name&lt;/th&gt;
            &lt;th class="justtable"&gt; named.conf keyword&lt;/th&gt;
            &lt;th class="justtable"&gt; description&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/run/named/named.pid&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;pid-file&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;PID number of the master named process, in text-format. pid-file is a quoted string and allows you to define where the pid (Process Identifier) used by BIND is written. If not present it is distribution or OS specific typically /var/run/named.pid or /etc/named.pid. It may be defined using an absolute path or relative to the directory parameter. This statement may only be used in a global options clause. &amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/etc/bind/rndc.conf&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;Used by &lt;code&gt;rndc&lt;/code&gt; utility. Manually created and often formatted like:&lt;/p&gt;, &lt;code&gt;   # Start of rndc.conf&lt;/code&gt;&lt;br /&gt; &lt;code&gt;   include &amp;quot;/etc/bind/rndc.key&amp;quot;;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;   options {&lt;/code&gt;&lt;br /&gt; &lt;code&gt;       default-key &amp;quot;rndc-key&amp;quot;;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;       default-server 127.0.0.1;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;       default-port 953;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;   };&lt;/code&gt;&lt;br /&gt; &lt;code&gt;   # End of rndc.conf&lt;/code&gt;&amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/etc/bind/rndc.key&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; its key is created using &lt;code&gt;rndc-confgen&lt;/code&gt; &lt;code&gt;-a&lt;/code&gt; looking like this:&lt;/p&gt; &lt;p&gt;&lt;code&gt;   key &amp;quot;rndc-key&amp;quot; {&lt;/code&gt;&lt;br /&gt; &lt;code&gt;       algorithm hmac-md5;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;       secret &amp;quot;XbAxWyZPL74rN1Ti3dTV9a==&amp;quot;;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;   };&lt;/code&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/cache/bind/&amp;amp;#42.jnl&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;journal&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; Keeps track of changes being made to the zone databases&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/cache/bind/cache_dump.db&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;dump-file&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;Dumps the DNS cache database into a text file. dump-file is a quoted string defining the absolute path where BIND dumps the database (cache) in response to a rndc dumpdb. If not specified, the default is named_dump.db in the location specified by a directory option. This option may only be specified in a &amp;lsquo;global&amp;rsquo; options statement. &amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/named_stats.txt&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;statistics-file&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; Dumps the statistics into a file. This statement defines the file-name to which data will be written when the command rndc stats is issued. May be an absolute or relative (to directory) path. If the parameter is not present the information is written to named.stats in the path defined by directory or its default. This statement may only be used in a global options clause.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/mem-statistics.log&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;memstatistics-file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; This statement defines the file-name to which BIND memory usage statistics will be written when it exits. May be an absolute or relative (to directory) path. If the parameter is not present the stats are written to &lt;code&gt;named.memstats&lt;/code&gt; in the path defined by directory or its default. This statement may only be used in a global options clause.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/etc/bind/named.iscdlv.key&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;bindkeys-file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; OBSOLETED. Holds the DLV (now discontinued as of Feb 2017). Used to be &lt;code&gt;/etc/bind.keys&lt;/code&gt;&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h2 id="bind9-logging-channels"&gt;Bind9 logging channels&lt;/h2&gt;
&lt;p&gt;
&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;directory name&lt;/th&gt;
            &lt;th class="justtable"&gt; channel name &lt;/th&gt;
            &lt;th class="justtable"&gt; description&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/default.log&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;default_file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Default events get logged into this file&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/general.log&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;general_file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; General events get logged into this file.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/database.log&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;database_file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Database events get logged into this file.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/security.log&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;security_file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Security events get logged into this file.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/config.log&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;config_file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Configuration and any misconfiguration events get logged into this file.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/resolver.log&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;resolver_file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Resolver events get logged into this file.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/xfer-in.log&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;xfer-in_file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Transfer DNS records inbound events get logged into this file.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/xfer-out.log&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;xfer-out_file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Transfer DNS records outbound events get logged into this file.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/notify.log&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;notify_file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Notify events get logged into this file.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/unmatched.log&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;client_file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Client events get logged into this file.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/client.log&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;unmatched_file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Unmatched events get logged into this file.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/unmatched.log&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;unmatched_file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Unmatched events get logged into this file.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/queries.log&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;queries_file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Query events get logged into this file.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/query-errors.log&lt;/code&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;query-errors_file&lt;/code&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; Query ERROR events get logged into this file.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/network.log&lt;/code&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;network_file&lt;/code&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;Network events get logged into this file. open()&lt;/td&gt;
                &lt;td class="justtable"&gt; close(), dropped or downed network interface.&amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/update.log&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;update_file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Update events get logged into this file.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/update-security.log&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;update-security_file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Security update events get logged into this file.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/dispatch.log&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;dispatch_file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Dispatch events get logged into this file.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/dnssec.log&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;dnssec_file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; DNSSEC events get logged into this file.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/lame-servers.log&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;lame-servers_file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Lame server events get logged into this file.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/delegation-only.log&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;delegation-only_file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Delegation events get logged into this file.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;/var/log/bind/rate-limit.log&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;rate-limit_file&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Rate limiting events get logged into this file.&lt;/p&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;p&gt;&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;&lt;/p&gt;</content><category term="bind9"></category></entry><entry><title>nsupdate Troubleshooting</title><link href="/egberts/articles/nsupdate-troubleshooting.html" rel="alternate"></link><published>2018-10-17T20:50:00-04:00</published><updated>2018-10-17T20:50:00-04:00</updated><author><name></name></author><id>tag:None,2018-10-17:/egberts/articles/nsupdate-troubleshooting.html</id><summary type="html">&lt;p&gt;nsupdate&lt;/p&gt;
&lt;h2 id="protocolport"&gt;Protocol/Port&lt;/h2&gt;
&lt;p&gt;Network port/protocol used: 53/udp or 53/tcp (using &lt;code&gt;-v&lt;/code&gt; option)&lt;/p&gt;
&lt;p&gt;Note: &lt;code&gt;rndc&lt;/code&gt; uses:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;953/udp with any key-file (defaults to &lt;code&gt;rndc-key&lt;/code&gt;, or&lt;/li&gt;
&lt;li&gt;named-generated file-based key in &lt;code&gt;/var/lib/bind/session.key&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="nsupdate-commands"&gt;nsupdate commands&lt;/h2&gt;
&lt;h3 id="server"&gt;server&lt;/h3&gt;
&lt;p&gt;Using `server server-ip` will perform the following with unexpected
result (if …&lt;/p&gt;</summary><content type="html">&lt;p&gt;nsupdate&lt;/p&gt;
&lt;h2 id="protocolport"&gt;Protocol/Port&lt;/h2&gt;
&lt;p&gt;Network port/protocol used: 53/udp or 53/tcp (using &lt;code&gt;-v&lt;/code&gt; option)&lt;/p&gt;
&lt;p&gt;Note: &lt;code&gt;rndc&lt;/code&gt; uses:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;953/udp with any key-file (defaults to &lt;code&gt;rndc-key&lt;/code&gt;, or&lt;/li&gt;
&lt;li&gt;named-generated file-based key in &lt;code&gt;/var/lib/bind/session.key&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="nsupdate-commands"&gt;nsupdate commands&lt;/h2&gt;
&lt;h3 id="server"&gt;server&lt;/h3&gt;
&lt;p&gt;Using `server server-ip` will perform the following with unexpected
result (if you are doing esoteric network topology):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a query lookup of SOA on that server-ip,&lt;/li&gt;
&lt;li&gt;extract the MNAME field from the SOA record, and&lt;/li&gt;
&lt;li&gt;then only interact with that MNAME server.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is different from `local server-ip` or `nsupdate -l`.&lt;/p&gt;
&lt;h2 id="keys-used"&gt;Keys used&lt;/h2&gt;
&lt;p&gt;You can use RFC 2136 &amp;ldquo;DNS UPDATE&amp;rdquo;, either by scripting the nsupdate tool
or by using a compatible third-party client:&lt;/p&gt;
&lt;h3 id="shared-secret-key-tsig"&gt;Shared secret key (TSIG)&lt;/h3&gt;
&lt;p&gt;Generate a secret key for authenticating the updates:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   $ tsig-keygen -r /dev/urandom &lt;span class="p"&gt;|&lt;/span&gt; tee tsig-key.private
   key &lt;span class="s2"&gt;&amp;quot;tsig-key&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
       algorithm hmac-sha256&lt;span class="p"&gt;;&lt;/span&gt;
       secret &lt;span class="s2"&gt;&amp;quot;7P6HbRZRJCmtauo/lV0jwN9wkMgBTUikhf9JuaTvYT4=&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This key is known to the server and client, and nobody else.&lt;/p&gt;
&lt;p&gt;Copy the printed text into your named.conf. (You can have multiple keys
for different hosts, each with a unique name in the key &amp;ldquo;…&amp;rdquo; field.)&lt;/p&gt;
&lt;p&gt;Enable dynamic updates in the zone configuration:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   zone … {
       …
       update-policy {
           /* grant &amp;lt;key_name&amp;gt; &amp;lt;policy&amp;gt; &amp;lt;record_types&amp;gt;` */
           grant &amp;quot;tsig-key&amp;quot; name myserver.example.com ANY;
       };
   };
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Various different policies can be used; e.g. zonesub allows updating the
entire zone, and subdomain dyn.example.com has the obvious meaning.&lt;/p&gt;
&lt;p&gt;Perform updates:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ nsupdate -k tsig-key.private
&amp;gt; zone example.com
&amp;gt; del myserver.example.com
&amp;gt; add myserver.example.com &lt;span class="m"&gt;3600&lt;/span&gt; A &lt;span class="m"&gt;100&lt;/span&gt;.64.1.1
&amp;gt; send
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There are various clients capable of automatic updates.&lt;/p&gt;
&lt;h3 id="publicprivate-key-sig0"&gt;Public/private key (SIG(0))&lt;/h3&gt;
&lt;p&gt;Generate a key pair:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ dnssec-keygen -r /dev/urandom -T KEY -n USER myclient.example.com
$ ls K*
Kmyclient.example.com.+005+07399.key
Kmyclient.example.com.+005+07399.private
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The *.key file contains the public key – add it to your DNS zone.&lt;/p&gt;
&lt;p&gt;The *.private file contains the private key – copy it to the client
computer. (Actually, copy both files to the client computer.)&lt;/p&gt;
&lt;p&gt;Set up update-policy { } in exactly the same way as with TSIG.&lt;/p&gt;
&lt;p&gt;Perform updates also in the same way using nsupdate -k
&lt;filename&gt;.private.&lt;/p&gt;
&lt;p&gt;(Note: While TSIG key names are arbitrary, SIG(0) keys are stored in DNS
and therefore always named like hostnames/subdomains. The key name does
not need to match the hostname you&amp;rsquo;re updating, though.)&lt;/p&gt;
&lt;h3 id="kerberos-gss-tsig"&gt;Kerberos (GSS-TSIG)&lt;/h3&gt;
&lt;p&gt;A bit out of scope, but BIND9 supports this as well (mainly for use with
Active Directory).&lt;/p&gt;
&lt;h2 id="troubleshooting"&gt;Troubleshooting&lt;/h2&gt;
&lt;h3 id="nsupdate-updating-other-nameserver"&gt;nsupdate updating other nameserver&lt;/h3&gt;
&lt;p&gt;Might want to check that you are using `local server-ip` and not
`server server-ip` command.&lt;/p&gt;
&lt;p&gt;Using `server server-ip` will perform the following with unexpected
result (if you are doing esoteric network topology):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a query lookup of SOA on that server-ip,&lt;/li&gt;
&lt;li&gt;extract the MNAME field from the SOA record, and&lt;/li&gt;
&lt;li&gt;then only interact with that MNAME server.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It can lead to disastrous result if you are using
hidden-master/public-slave or stealth master network topology.&lt;/p&gt;
&lt;p&gt;Instead, do one of the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use `local server-ip` to minimize this impact or&lt;/li&gt;
&lt;li&gt;use `nsupdate -l` via `/var/lib/bind/dynamic/session.key` that got created during Bind config `update-policy local`.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="update-failed-notauth"&gt;update failed: NOTAUTH&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nsupdate -l -M
&amp;gt; zone example.net red
&amp;gt; update delete arca.example.net
&amp;gt; send&lt;span class="sb"&gt;`&lt;/span&gt;
update failed: NOTAUTH
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You&amp;rsquo;ll see in the packet that DNS Dynamic Update, follow by Dynamic
Update Response packet.&lt;/p&gt;
&lt;p&gt;In the DNS Dynamic Update Response packet, Wireshark-expert mode
reported that there is no dissector for HMAC-SHA256.&lt;/p&gt;
&lt;p&gt;Also&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0x1001 Reply Code: Not Authoritative (9)
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="update-failed-notauthbadkey"&gt;update failed: NOTAUTH(BADKEY)&lt;/h3&gt;
&lt;p&gt;Check the /var/log/bind/security.log for:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;security&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="mf"&gt;127.0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;25080&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;view&lt;/span&gt; &lt;span class="n"&gt;gateway&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;invalid&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="n"&gt;signature&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;TSIG&lt;/span&gt; &lt;span class="n"&gt;ddns&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;arca&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;example&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;net&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;tsig&lt;/span&gt; &lt;span class="n"&gt;verify&lt;/span&gt; &lt;span class="n"&gt;failure&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BADKEY&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;nsupdate can only handle hmac-md5. You probably used an algorithm other
than HMAC-MD5 (i.e. hmac-sha256)&lt;/p&gt;
&lt;p&gt;For correct creation of ddns.conf is &lt;code&gt;ddns-confgen&lt;/code&gt; &lt;code&gt;-a&lt;/code&gt; &lt;code&gt;HMAC-MD5&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Replace the key with a correct algorithm. Keys between BIND9 and ISC
DHCP must use &lt;code&gt;hmac-md5&lt;/code&gt; as this is a ISC DHCP design limitation.&lt;/p&gt;
&lt;h3 id="update-failed-notauthbadsig"&gt;update failed: NOTAUTH(BADSIG)&lt;/h3&gt;
&lt;p&gt;This means that there is no signature &amp;hellip; at all &amp;hellip; to be found.
Perhaps its key name was misspelled. Perhaps it is missing.&lt;/p&gt;
&lt;h3 id="no-signing-records-found"&gt;No signing records found&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ rndc signing -list example.net.
No signing records found
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It means that there is no TEMPORARY RRDATA found in the example.net zone
file as reported by &lt;code&gt;ns_server_signing()&lt;/code&gt; function in &lt;code&gt;named/server.c&lt;/code&gt;.
This command is totally useless and is only practical when using against
very large zone file.&lt;/p&gt;</content><category term="nsupdate"></category><category term="dns"></category><category term="troubleshooting"></category></entry><entry><title>ISC Bind9 Environment Names</title><link href="/egberts/articles/isc-bind9-environment-names.html" rel="alternate"></link><published>2018-10-17T13:16:00-04:00</published><updated>2018-10-17T13:16:00-04:00</updated><author><name></name></author><id>tag:None,2018-10-17:/egberts/articles/isc-bind9-environment-names.html</id><summary type="html">&lt;p&gt;Environment Name Used by ISC Bind9&lt;/p&gt;</summary><content type="html">&lt;p&gt;Bind9 environment&lt;/p&gt;
&lt;h2 id="environment-variables"&gt;Environment variables&lt;/h2&gt;
&lt;h3 id="bind9-environment-variables"&gt;Bind9 environment variables&lt;/h3&gt;
&lt;p&gt;
&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;variable name&lt;/th&gt;
            &lt;th class="justtable"&gt; description&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;PATH&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;The sequence of path prefixes that certain functions and utilities apply in searching for an executable file known only by a filename. The prefixes are separated by a colon (:) When a non-zero-length prefix is applied to this filename, a slash is inserted between the prefix and the filename. A zero-length prefix is a legacy feature that indicates the current working directory. It appears as two adjacent colons (::), as an initial colon preceding the rest of the list, or as a trailing colon following the rest of the list. A portable application must use an actual pathname (such as .) to represent the current working directory in PATH. The list is searched from beginning to end, applying the filename to each prefix, until an executable file with the specified name and appropriate execution permissions is found. If the pathname being sought contains a slash, the search through the path prefixes will not be performed. If the pathname begins with a slash, the specified path is resolved (see pathname resolution ). If PATH is unset or is set to null, the path search is implementation-dependent.  &lt;p&gt;The path separator on Windows is a semicolon, not a colon, as in the Unix world. Setting the path has the effect of automatically locating, say, dig or nsupdate. However, there is a Windows version of nslookup that will be found first. Using the BIND version of nslookup either requires a full path command, such as C:\Program Files\ISC BIND 9\bin\nslookup.exe (or C:\Program Files (x86)\ISC BIND 9\bin\nslookup.exe for a 32-bit BIND install on a Windows 64 bit platform) when running it from the command line. Alternatively, the preceding path directive can be placed first in the path list, which, in turn, has the disadvantage that it will add an extra check for all other program loading operations that use normal Windows locations.&amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;COMSPEC&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;COMSPEC or ComSpec is one of the environment variables used in DOS, OS/2 and Windows, which normally points to the command line interpreter, which is by default COMMAND.COM in DOS or CMD.EXE in OS/2 and Windows NT. The variable name is written in all-uppercase under DOS and OS/2. Under Windows, which also supports lowercase environment variable names, the variable name is COMSPEC inside the DOS emulator NTVDM and for any DOS programs, and ComSpec under CMD.EXE.&lt;br /&gt; The variable&amp;rsquo;s contents can be displayed by typing SET or ECHO %COMSPEC% at the command prompt.&lt;br /&gt; The environment variable by default points to the full path of the command line interpreter. It can also be made by a different company or be a different version.&amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;IDN_DISABLE&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;If you’d like to turn off the IDN support for some reason, defines the &lt;code&gt;IDN_DISABLE&lt;/code&gt; environment variable. The IDN support is disabled if the variable is set when dig runs.&lt;/p&gt;&amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;ISC_TASK_WORKERS&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Used during unit testing of Bind9. This is not used during production.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;ISC_TASKS_MIN&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Used during unit testing of Bind9. This is not used during production.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;KRB5_KTNAME&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; Used to minimize memory leakage associated with KRB5 API calls&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;LANG&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;This variable determines the locale category for native language, local customs and coded character set in the absence of the &lt;code&gt;LC_ALL&lt;/code&gt; and other &lt;code&gt;LC_*&lt;/code&gt; (&lt;code&gt;LC_COLLATE&lt;/code&gt;, &lt;code&gt;LC_CTYPE&lt;/code&gt;, &lt;code&gt;LC_MESSAGES&lt;/code&gt;, &lt;code&gt;LC_MONETARY&lt;/code&gt;, &lt;code&gt;LC_NUMERIC&lt;/code&gt;, &lt;code&gt;LC_TIME&lt;/code&gt;) environment variables. This can be used by applications to determine the language to use for error messages and instructions, collating sequences, date formats, and so forth. Always use a value for LANG that is supported by the UNIX or Linux operating system you are using. To obtain the locale names for your UNIX or Linux system, enter the following command: locale -a.&lt;/p&gt; &lt;p&gt;If you specify the LANG environment variable and also modify the regional settings then the LANG environment variable will override the regional setting. As specified by open systems standards, other environment variables override LANG for some or all locale categories. These variables include the following:&lt;/p&gt; &lt;p&gt;&lt;code&gt;   LC_COLLATE&lt;/code&gt;&lt;br /&gt; &lt;code&gt;   LC_CTYPE&lt;/code&gt;&lt;br /&gt; &lt;code&gt;   LC_MONETARY&lt;/code&gt;&lt;br /&gt; &lt;code&gt;   LC_NUMERIC&lt;/code&gt;&lt;br /&gt; &lt;code&gt;   LC_TIME&lt;/code&gt;&lt;br /&gt; &lt;code&gt;   LC_MESSAGES&lt;/code&gt;&lt;br /&gt; &lt;code&gt;   LC_ALL&lt;/code&gt;&lt;/p&gt; &lt;p&gt;If any of the previous variables are set, you must remove their setting for the LANG variable to have full effect. Some values found on Linux platforms (via &lt;code&gt;locale&lt;/code&gt; &lt;code&gt;-a&lt;/code&gt;) are: C C.UTF-8 en_US en_US.iso88591 en_US.iso885915 en_US.utf8 POSIX&amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;LC_ALL&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;This variable determines the values for all locale categories. The value of the LC_ALL environment variable has precedence over any of the other environment variables starting with LC_ (LC_COLLATE, LC_CTYPE, LC_MESSAGES, LC_MONETARY, LC_NUMERIC, LC_TIME) and the LANG environment variable.&amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;LC_CTYPE&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;This variable determines the locale category for character handling functions, such as &lt;code&gt;tolower()&lt;/code&gt;, &lt;code&gt;toupper()&lt;/code&gt; and &lt;code&gt;isalpha()&lt;/code&gt;. This environment variable determines the interpretation of sequences of bytes of text data as characters (for example, single- as opposed to multi-byte characters), the classification of characters (for example, alpha, digit, graph) and the behavior of character classes. Additional semantics of this variable, if any, are implementation-dependent.&amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;NET_ORDER&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; Set the sorting order of multiple IP addresses being displayed. Valid values are &amp;quot;&lt;code&gt;inet4&lt;/code&gt;&amp;quot; or &amp;quot;&lt;code&gt;inet6&lt;/code&gt;&amp;quot;.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;PKCS11_PROVIDER&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;Declares the PKCS11 provider being used. Valid values are: &amp;quot;&lt;code&gt;undefined&lt;/code&gt;&amp;quot;, &amp;quot;&lt;code&gt;libsofthsm2&lt;/code&gt;&amp;quot;, &amp;quot;&lt;code&gt;openssl&lt;/code&gt;&amp;quot;&amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;TEMP&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; A pathname of a directory made available for programs that need a place to create temporary files.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;TERM&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; The terminal type for which output is to be prepared. This information is used by utilities and application programs wishing to exploit special capabilities specific to a terminal. The format and allowable values of this environment variable are unspecified.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;TZ&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;Timezone information. The contents of the environment variable named &lt;code&gt;TZ&lt;/code&gt; are used by the &lt;code&gt;ctime()&lt;/code&gt;, &lt;code&gt;localtime()&lt;/code&gt;, &lt;code&gt;strftime()&lt;/code&gt; and &lt;code&gt;mktime()&lt;/code&gt; functions, and by various utilities, to override the default timezone. The value of &lt;code&gt;TZ&lt;/code&gt; has one of the two forms (spaces inserted for clarity):&lt;/p&gt; &lt;p&gt;&lt;code&gt;   :characters&lt;/code&gt;&lt;/p&gt; &lt;p&gt;or:&lt;/p&gt; &lt;p&gt;&lt;code&gt;   std offset dst offset, rule&lt;/code&gt;&lt;/tt&gt;&lt;/p&gt; &lt;p&gt;If &lt;code&gt;TZ&lt;/code&gt; is of the first format (that is, if the first character is a colon), the characters following the colon are handled in an implementation-dependent manner. The expanded format (for all TZs whose value does not have a colon as the first character) is as follows:&lt;/p&gt; &lt;p&gt;&lt;code&gt;   stdoffset[dst[offset][,start[/time],end[/time]]]&lt;/code&gt;&amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;ZKT_CONFFILE&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;Specifies the name of the default global configuration files.&lt;/p&gt; &lt;p&gt;&lt;code&gt;/var/lib/named/dnssec.conf&lt;/code&gt;: Built-in default global configuration file. The name of the default global config file is settable via the environment variable &lt;code&gt;ZKT_CONFFILE&lt;/code&gt;. (For non-Debian platform, file is &lt;code&gt;/var/named/dnssec.conf&lt;/code&gt;). Man page is dnssec.zkt(5).&amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pubs.opengroup.org/onlinepubs/7908799/xbd/envvar.html"&gt;UNIX Specification&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="bind9"></category></entry><entry><title>ISC Bind9 Logging</title><link href="/egberts/articles/isc-bind9-logging.html" rel="alternate"></link><published>2018-10-17T10:41:00-04:00</published><updated>2018-10-17T10:41:00-04:00</updated><author><name></name></author><id>tag:None,2018-10-17:/egberts/articles/isc-bind9-logging.html</id><summary type="html">&lt;p&gt;Logging Files Used By ISC Bind9&lt;/p&gt;</summary><content type="html">&lt;p&gt;Editing Bind9 logging Bind9 logging is controlled and ferrated into
several channels.&lt;/p&gt;
&lt;h3 id="functional-log"&gt;Functional Log&lt;/h3&gt;
&lt;p&gt;Bind9 log channel categories.

&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;category name&lt;/th&gt;
            &lt;th class="justtable"&gt; source files&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;NS_LOGCATEGORY_CLIENT&lt;/td&gt;
                &lt;td class="justtable"&gt; client.c&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;DNS_LOGCATEGORY_DATABASE&lt;/td&gt;
                &lt;td class="justtable"&gt; lwdclient.c&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;NS_LOGCATEGORY_GENERAL&lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;lwdclient.c, lwresd.c, main.c, server.c, statschannel.c, tkeyconf.c&amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;NS_LOGCATEGORY_NETWORK&lt;/td&gt;
                &lt;td class="justtable"&gt; interfacemgr.c&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;NS_LOGCATEGORY_NOTIFY&lt;/td&gt;
                &lt;td class="justtable"&gt; notify.c&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;DNS_LOGCATEGORY_DNSSEC&lt;/td&gt;
                &lt;td class="justtable"&gt; query.c&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;NS_LOGCATEGORY_QUERIES&lt;/td&gt;
                &lt;td class="justtable"&gt; query.c&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;NS_LOGCATEGORY_QUERY_EERRORS&lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;client.c, query.c&amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;NS_LOGCATEGORY_RPZ&lt;/td&gt;
                &lt;td class="justtable"&gt; query.c&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;DNS_LOGCATEGORY_RRL&lt;/td&gt;
                &lt;td class="justtable"&gt; query.c&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;DNS_LOGCATEGORY_SECURITY&lt;/td&gt;
                &lt;td class="justtable"&gt; query.c&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;NS_LOGCATEGORY_UNMATCHED&lt;/td&gt;
                &lt;td class="justtable"&gt; client.c&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;NS_LOGCATEGORY_UPDATE&lt;/td&gt;
                &lt;td class="justtable"&gt; update.c&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;NS_LOGCATEGORY_UPDATESECURITY&lt;/td&gt;
                &lt;td class="justtable"&gt; update.c&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;DNS_LOGCATEGORY_XFER_OUT&lt;/td&gt;
                &lt;td class="justtable"&gt; xferout.c&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h3 id="log-modules"&gt;Log modules&lt;/h3&gt;
&lt;p&gt;Bind9 log channel modules&lt;/p&gt;
&lt;p&gt;
&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;module name&lt;/th&gt;
            &lt;th class="justtable"&gt; source files&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;NS_LOGMODULE_ADB&lt;/td&gt;
                &lt;td class="justtable"&gt; lwdclient.c&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;NS_LOGMODULE_CLIENT&lt;/td&gt;
                &lt;td class="justtable"&gt; client.c&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;NS_LOGMODULE_INTERFACEMGR&lt;/td&gt;
                &lt;td class="justtable"&gt; interfacemgr.c&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;NS_LOGMODULE_MAIN&lt;/td&gt;
                &lt;td class="justtable"&gt; main.c&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;NS_LOGMODULE_NOTIFY&lt;/td&gt;
                &lt;td class="justtable"&gt; notify.c&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;NS_LOGMODULE_QUERY&lt;/td&gt;
                &lt;td class="justtable"&gt; query.c&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;NS_LOGMODULE_SERVER&lt;/td&gt;
                &lt;td class="justtable"&gt; main.c&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;NS_LOGMODULE_UPDATE&lt;/td&gt;
                &lt;td class="justtable"&gt; update.c&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;NS_LOGMODULE_XFER_OUT&lt;/td&gt;
                &lt;td class="justtable"&gt; xferout.c&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;&lt;/p&gt;</content><category term="logging"></category><category term="bind9"></category></entry><entry><title>Motorola ONT Specification</title><link href="/egberts/articles/motorola-ont-specification.html" rel="alternate"></link><published>2018-10-15T11:02:00-04:00</published><updated>2018-10-15T11:02:00-04:00</updated><author><name></name></author><id>tag:None,2018-10-15:/egberts/articles/motorola-ont-specification.html</id><summary type="html">&lt;p&gt;Motorola ONT is an optical network terminal. ONT is commonly found in
residential unit that connects the ISP&amp;rsquo;s fibre optic network and
provides Ethernet connectivity to the home.&lt;/p&gt;
&lt;h2 id="specification"&gt;Specification&lt;/h2&gt;
&lt;h3 id="physical-description"&gt;Physical Description&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Height: 11.5’’ (29.2 cm), Width: 10’.5’ (26.7 cm), •&lt;/li&gt;
&lt;li&gt;Depth: 3’’ (7.6 cm)&lt;/li&gt;
&lt;li&gt;Weight …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Motorola ONT is an optical network terminal. ONT is commonly found in
residential unit that connects the ISP&amp;rsquo;s fibre optic network and
provides Ethernet connectivity to the home.&lt;/p&gt;
&lt;h2 id="specification"&gt;Specification&lt;/h2&gt;
&lt;h3 id="physical-description"&gt;Physical Description&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Height: 11.5’’ (29.2 cm), Width: 10’.5’ (26.7 cm), •&lt;/li&gt;
&lt;li&gt;Depth: 3’’ (7.6 cm)&lt;/li&gt;
&lt;li&gt;Weight: 5 lbs.&lt;/li&gt;
&lt;li&gt;Mounting: Wall&lt;/li&gt;
&lt;li&gt;not including fiber management&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="power-supply"&gt;Power Supply&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ONT Input Voltage: +12Vdc, 30 Watts (maximum)&lt;/li&gt;
&lt;li&gt;UPS Input Voltage: 100 to 240 Vac, 50/60 Hz.&lt;/li&gt;
&lt;li&gt;Battery Backup Time: 8 hours idle using 12Vdc 7.2Ahr battery&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="service-interfaces"&gt;Service Interfaces&lt;/h3&gt;
&lt;p&gt;Telephony Interface:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2x POTS, IDC terminals (Tip/Ring) and RJ-11 gel-filled test point
    connections&lt;/li&gt;
&lt;li&gt;5 REN (max) per line, 10 REN (max) across all lines&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="data-interfaces"&gt;Data Interfaces&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2x Ethernet 10/100/1000Base-T ports, RJ-45 gel-filled connector&lt;/li&gt;
&lt;li&gt;MoCA WAN/LAN and RPD over F-type connector&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="video-interface-optional"&gt;Video Interface (optional)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;75-ohm F-type connector, • +18dBmV&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="network-interfaces"&gt;Network Interfaces&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Optical&lt;ul&gt;
&lt;li&gt;GPON: 2.488 Gbps downstream, 1.244 Gbps upstream&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Operating Wavelengths:&lt;ul&gt;
&lt;li&gt;1490 +/- 10nm voice/data receive&lt;/li&gt;
&lt;li&gt;1310 +/-50nm voice/data transmit&lt;/li&gt;
&lt;li&gt;1550-1560 nm video receive&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Field interchangeable SC or OptiFit® connector, Class B+ optics&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="power-interface"&gt;Power Interface&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;7 position 5mm header with remove-able IDC connector&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="environmental"&gt;Environmental&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Operating Temperature: -40°C to +60°C ambient (+46°C with 750 W/m2 solar loading)&lt;/li&gt;
&lt;li&gt;Storage Temperature: -40°C to +65°C&lt;/li&gt;
&lt;li&gt;Operating Humidity: 0 to 100% RH&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="features-and-benefits"&gt;Features and Benefits&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Flexibility&lt;ul&gt;
&lt;li&gt;Revenue growth and building a powerful defense against
    competitors are key&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;reasons service providers need to consider the deployment of next
generation fiber access technologies. Multi-service delivery over a
single converged FTTP and FTTN platform provides the flexibility to
offer “triple play” and additional advanced IPTV services. The converged
platform provides revenue generating services and allows service
providers to take advantage of improved deployment economics and greater
operational simplicity.&lt;/p&gt;
&lt;h3 id="interoperability"&gt;Interoperability&lt;/h3&gt;
&lt;p&gt;The ONT1400GT is in compliance with industry standard FSAN and ITU-T
G.984 specifications to allow interworking with third party vendors. The
ONT1400GT is also designed to interoperate with Motorola’s line of RF
and combination RF/IP set top terminals.&lt;/p&gt;
&lt;h3 id="management"&gt;Management&lt;/h3&gt;
&lt;p&gt;The AXS2200 FTTP and FTTN access networks and ONT1400GT are managed by a
comprehensive element management system that enables visibility into
system performance, service continuity, service provisioning,
maintenance and upgrades from a single operations center.&lt;/p&gt;
&lt;h3 id="regulatory-compliance"&gt;Regulatory Compliance&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Safety:&lt;ul&gt;
&lt;li&gt;EN60825-2, IEC 60825, EN60950, UL60950-1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Emission/Immunity&lt;ul&gt;
&lt;li&gt;FCC Part 15 Subpart B,&lt;/li&gt;
&lt;li&gt;FCC Part 68&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Class B, ETSI CTR-21, EN55022, EN55024&lt;/li&gt;
&lt;li&gt;Applicable Sections of:&lt;ul&gt;
&lt;li&gt;GR-47-CORE,&lt;/li&gt;
&lt;li&gt;GR-57-CORE,&lt;/li&gt;
&lt;li&gt;GR-63-CORE,&lt;/li&gt;
&lt;li&gt;GR-418-CORE,&lt;/li&gt;
&lt;li&gt;GR-485-CORE,&lt;/li&gt;
&lt;li&gt;GR-487-CORE,&lt;/li&gt;
&lt;li&gt;GR-499-CORE,&lt;/li&gt;
&lt;li&gt;GR-909-CORE,&lt;/li&gt;
&lt;li&gt;GR-950-CORE,&lt;/li&gt;
&lt;li&gt;GR-1089-CORE,&lt;/li&gt;
&lt;li&gt;GR-1500-CORE,&lt;/li&gt;
&lt;li&gt;GR-2914-CORE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Protocols&lt;ul&gt;
&lt;li&gt;ITU-T G.984.1, G.984.2, G.984.3, G.984.4, as amended&lt;/li&gt;
&lt;li&gt;ITU-T G.983.2 and G.983.8 statistics (Ethernet interface)&lt;/li&gt;
&lt;li&gt;GPON Encapsulation Method (GEM)&lt;/li&gt;
&lt;li&gt;IGMP v2 services (RFC 2236) and v3 services (RFC 3376)&lt;/li&gt;
&lt;li&gt;IGMP v2 (RFC 2236) and IGMP v3 (RFC 3376) multicast group management including snooping support&lt;/li&gt;
&lt;li&gt;IEEE Std 802.1D bridging and learning, traffic class expediting &amp;amp; dynamic multicast filtering (Annex H)&lt;/li&gt;
&lt;li&gt;IEEE 802.1Q Virtual LAN with 8 levels of priority&lt;/li&gt;
&lt;li&gt;RFC 1886, RFC 2460, RFC 2463, RFC 2464, RFC 2474, RFC 3513, RFC 3587&lt;/li&gt;
&lt;li&gt;H.248 and SIP-enabled VoIP&lt;/li&gt;
&lt;li&gt;GR-303, TR-08&lt;/li&gt;
&lt;li&gt;SNMPv3&lt;/li&gt;
&lt;li&gt;IEEE 802.3i, IEEE802.3u, 802.3ab&lt;/li&gt;
&lt;li&gt;IEEE 802.1ad Provider Bridges&lt;/li&gt;
&lt;li&gt;IEEE 802.3ad link aggregation&lt;/li&gt;
&lt;li&gt;MoCA&lt;/li&gt;
&lt;li&gt;ANSI/SCTE 55-1 (RPD) All&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.klonex.com.pl/media/produkty/pdf/motorola-ont1400gt.pdf"&gt;http://www.klonex.com.pl/media/produkty/pdf/motorola-ont1400gt.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Verizon"></category><category term="Motorola"></category><category term="ONT"></category><category term="FiOS"></category></entry><entry><title>DHCP Lease Renewal and Rebinding Processes</title><link href="/egberts/articles/dhcp-lease-renewal-and-rebinding-processes.html" rel="alternate"></link><published>2018-10-14T16:31:00-04:00</published><updated>2018-10-14T16:31:00-04:00</updated><author><name></name></author><id>tag:None,2018-10-14:/egberts/articles/dhcp-lease-renewal-and-rebinding-processes.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;DHCP Lease Renewal and Rebinding Processes&lt;/h2&gt;
&lt;div class="section" id="lease-renewal-rebinding-process-steps"&gt;
&lt;h3&gt;Lease Renewal/Rebinding Process Steps&lt;/h3&gt;
&lt;p&gt;The following steps summarize the renewal/rebinding process. Obviously,
the exact sequence of operations taken by a client depends on what
happens in its attempts to contact a server; for example, if it is
successful with renewal, it will …&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;DHCP Lease Renewal and Rebinding Processes&lt;/h2&gt;
&lt;div class="section" id="lease-renewal-rebinding-process-steps"&gt;
&lt;h3&gt;Lease Renewal/Rebinding Process Steps&lt;/h3&gt;
&lt;p&gt;The following steps summarize the renewal/rebinding process. Obviously,
the exact sequence of operations taken by a client depends on what
happens in its attempts to contact a server; for example, if it is
successful with renewal, it will never need to attempt rebinding. An
example renewal and rebinding is illustrated in Figure 265. Note also
that the same notes about addressing fields, relay agents and such that
I mentioned in the allocation process topic apply here as well.&lt;/p&gt;
&lt;div class="align-center figure"&gt;
&lt;img alt="DHCP Lease Renewal and Rebinding Process" src="/images/Dhcprere.png" style="width: 440px; height: 400px;" /&gt;
&lt;p class="caption"&gt;DHCP Lease Renewal and Rebinding Process.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This diagram shows the example of a client that presently holding a
lease with Server #2 attempting to contact it to renew the lease.
However, in this case, Server #2 is down for maintenance. The server is
unable to respond and the client remains stuck at Step #2 in the
renewal/rebinding process. It keeps sending DHCPREQUEST messages to
Server #2 until its T2 timer expires. It then enters the rebinding
state and broadcasts a DHCPREQUEST message, which is heard by Server
#1, which in this case agrees to extend its current lease.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="renewal-timer-t1-expires"&gt;
&lt;h2&gt;Renewal Timer (T1) Expires&lt;/h2&gt;
&lt;p&gt;The renewal timer, T1, is set by default to 50% of the length of the
lease. When the timer goes off, the client transitions from the BOUND
tate to the RENEWING state.&lt;/p&gt;
&lt;p&gt;Note that a client may initiate lease renewal prior to T1 timer
expiration if it desires.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="client-sends-dhcprequest-renewal-message"&gt;
&lt;h2&gt;1. Client Sends DHCPREQUEST Renewal Message&lt;/h2&gt;
&lt;p&gt;The client creates a DHCPREQUEST message that identifies itself and its
lease. It then transmits the message directly to the server that
initially granted the lease, unicast. Note that this is different from
the DHCPREQUEST messages used in the allocation/reallocation processes,
where the DHCPREQUEST is broadcast. The client may request a particular
new lease length, just as it may request a lease length in its requests
during allocation, but as always, the server makes the final call on
lease length.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="server-receives-and-processes-dhcprequest-message-and-creates-reply"&gt;
&lt;h2&gt;2. Server Receives and Processes DHCPREQUEST Message and Creates Reply&lt;/h2&gt;
&lt;p&gt;Assuming the server is reachable, it will receive and process the
client's renewal request. There are two possible responses:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Server Agrees To Renew Client Lease: The server decides that the client's lease can be renewed. It prepares to send to the client a DHCPACK message to confirm the lease's renewal, indicating the new lease length and any parameters that may have changed since the lease was created or last renewed.&lt;/li&gt;
&lt;li&gt;Server Refuses To Renew Client Lease: The server decides for whatever reason not to renew the client's lease. It will create a DHCPNAK message.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="server-sends-reply"&gt;
&lt;h2&gt;4. Server Sends Reply&lt;/h2&gt;
&lt;p&gt;The server sends the DHCPACK or DHCPNAK message back to the client.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="client-receives-and-processes-server-reply"&gt;
&lt;h2&gt;5. Client Receives and Processes Server Reply&lt;/h2&gt;
&lt;p&gt;The client takes the appropriate action in response to the server's
reply:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Positive Acknowledgment: The client receives a DHCPACK message, renewing the lease. The client makes note of the new lease expiration time and any changed parameters sent by the server, resets the T1 and T2 timers, and transitions back to the BOUND state. Note that the client does not need to do an ARP IP address check when it is renewing.&lt;/li&gt;
&lt;li&gt;Negative Acknowledgment: The message is a DHCPNAK, which tells the client that its lease renewal request has been denied. The client will immediately transition to the INIT state to get a new lease—step #1 in the allocation process.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="rebinding-timer-t2-expires"&gt;
&lt;h2&gt;6. Rebinding Timer (T2) Expires&lt;/h2&gt;
&lt;p&gt;If the client receives no reply from the server, it will remain in the
RENEWING state, and will regularly retransmit the unicast DHCPREQUEST to
the server. During this period of time, the client is still operating
normally, from the perspective of its user. If no response from the
server is received, eventually the rebinding timer (T2) expires. This
will cause the client to transition to the REBINDING state. Recall that
by default, the T2 timer is set to 87.5% (7/8ths) of the length of the
lease.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="client-sends-dhcprequest-rebinding-message"&gt;
&lt;h2&gt;7. Client Sends DHCPREQUEST Rebinding Message&lt;/h2&gt;
&lt;p&gt;Having received no response from the server that initially granted the
lease, the client “gives up” on that server and tries to contact any
server that may be able to extend its existing lease. It creates a
DHCPREQUEST message and puts its IP address in the CIAddr field,
indicating clearly that it presently owns that address. It then
broadcasts the request on the local network.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="servers-receives-and-processes-dhcprequest-message-and-send-reply"&gt;
&lt;h2&gt;8. Servers Receives and Processes DHCPREQUEST Message and Send Reply&lt;/h2&gt;
&lt;p&gt;Each server receives the request, and responds according to the
information it has for the client (a server that has no information
about the lease or may have outdated information does not respond):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Server Agrees To Rebind Client Lease: A server has information about the client's lease and agrees to extend it. It prepares for the client a DHCPACK message to confirm the lease's renewal, indicating any parameters that may have changed since the lease was created or last renewed.&lt;/li&gt;
&lt;li&gt;Server Decides Client Cannot Extend Its Current Lease: A server determines that for whatever reason, this client's lease should not be extended. It gets ready to send back to the client a DHCPNAK message.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;9. Server Sends Reply&lt;/h2&gt;
&lt;p&gt;Each server that is responding to the client sends its DHCPACK or
DHCPNAK message.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="client-receives-server-reply"&gt;
&lt;h2&gt;10. Client Receives Server Reply&lt;/h2&gt;
&lt;p&gt;The client takes the appropriate action in response to the two
possibilities in the preceding step:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Positive Acknowledgment: The client receives a DHCPACK message, rebinding the lease. The client makes note of the server that is now in charge of this lease, the new lease expiration time, and any changed parameters sent by the server. It resets the T1 and T2 timers, and transitions back to the BOUND state. (It may also probe the new address as it does during regular lease allocation.)&lt;/li&gt;
&lt;li&gt;Negative Acknowledgment: The message is a DHCPNAK, which tells the client that some server has determined that the lease should not be extended.  The client immediately transitions to the INIT state to get a new lease—step #1 in the allocation process.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="lease-expires"&gt;
&lt;h2&gt;11. Lease Expires&lt;/h2&gt;
&lt;p&gt;If the client receives no response to its broadcast rebinding request,
it will, as in the RENEWING state, retransmit the request regularly. If
no response is received by the time the lease expires, it transitions to
the INIT state to get a new lease.&lt;/p&gt;
&lt;/div&gt;
</content><category term="dhcp"></category></entry><entry><title>Systemd and ISC DHCP Client</title><link href="/egberts/articles/systemd-and-isc-dhcp-client.html" rel="alternate"></link><published>2018-10-14T16:23:00-04:00</published><updated>2018-10-14T16:23:00-04:00</updated><author><name></name></author><id>tag:None,2018-10-14:/egberts/articles/systemd-and-isc-dhcp-client.html</id><summary type="html">&lt;p&gt;This page is about using ISC DHCP client (`dhclient`) in
&lt;a href="systemd" title="wikilink"&gt;systemd&lt;/a&gt; environment.&lt;/p&gt;
&lt;p&gt;I must be one of the surviving user that uses both ISC dhclient and
systemd.&lt;/p&gt;
&lt;p&gt;Primarily because systemd DHCP cannot handle DHCP-Options (not options,
but Options). The ones that Juniper JunOS DHCP server requires for
Verizon FiOS.&lt;/p&gt;
&lt;p&gt;So …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This page is about using ISC DHCP client (`dhclient`) in
&lt;a href="systemd" title="wikilink"&gt;systemd&lt;/a&gt; environment.&lt;/p&gt;
&lt;p&gt;I must be one of the surviving user that uses both ISC dhclient and
systemd.&lt;/p&gt;
&lt;p&gt;Primarily because systemd DHCP cannot handle DHCP-Options (not options,
but Options). The ones that Juniper JunOS DHCP server requires for
Verizon FiOS.&lt;/p&gt;
&lt;p&gt;So, here begins the long saga of a blog (that I might break up in
several blogs)&amp;hellip;&lt;/p&gt;
&lt;p&gt;First thing first, to do an analysis of systemd unit inter-dependencies,
I executed:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systemd-analyze dot --order &lt;span class="se"&gt;\&lt;/span&gt;
    nginx.service network-pre.target network-online.target &lt;span class="se"&gt;\&lt;/span&gt;
    network.target system-dhclient.slice
sys-subsystem-net-devices-eth1.device &lt;span class="se"&gt;\&lt;/span&gt;
    networking.service nss-lookup.target shorewall.service bind9.service &lt;span class="se"&gt;\&lt;/span&gt;
    dhclient@eth1.service  ddclient.service resolvconf.service
    system-dhclient.slice  &lt;span class="se"&gt;\&lt;/span&gt;
    &amp;gt; /tmp/custom.gv
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As one can see that most people don&amp;rsquo;t have dhclient@eth0.service systemd
unit file.&lt;/p&gt;
&lt;p&gt;We are going to create a .gv file and convert it to SVG as shown below:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dot -Tsvg &amp;lt; /tmp/custom.gv &amp;gt; /tmp/custom.svg
firefox /tmp/custom.svg
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="isc-dhcp-client"&gt;ISC DHCP CLient&lt;/h3&gt;
&lt;p&gt;And I finally got my very own Linux gateway to be hooked up to the
Verizon HFC network, instead of using ActionTek wireless broadband
router.&lt;/p&gt;
&lt;p&gt;Details in here: &lt;a href="https://github.com/egberts/systemd-dhclient"&gt;https://github.com/egberts/systemd-dhclient&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="etcsystemdnetworkdhclientservice"&gt;/etc/systemd/network/dhclient$.service&lt;/h2&gt;
&lt;p&gt;It is also possible to explicitly tell systemd-networkd to ignore a link
by using Unmanaged=yes option, see systemd.network(5).&lt;/p&gt;</content><category term="dhcp"></category><category term="systemd"></category><category term="isp"></category></entry><entry><title>Systemd Unit File Load Paths</title><link href="/egberts/articles/systemd-unit-file-load-paths.html" rel="alternate"></link><published>2018-10-14T10:14:00-04:00</published><updated>2018-10-14T10:14:00-04:00</updated><author><name></name></author><id>tag:None,2018-10-14:/egberts/articles/systemd-unit-file-load-paths.html</id><summary type="html">&lt;h2 id="unit-file-load-path"&gt;Unit File Load Path&lt;/h2&gt;
&lt;p&gt;Unit files are loaded from a set of paths determined during compilation,
described in the two tables below. Unit files found in directories
listed earlier override files with the same name in directories lower in
the list.&lt;/p&gt;
&lt;p&gt;When the variable $SYSTEMD_UNIT_PATH is set, the contents of …&lt;/p&gt;</summary><content type="html">&lt;h2 id="unit-file-load-path"&gt;Unit File Load Path&lt;/h2&gt;
&lt;p&gt;Unit files are loaded from a set of paths determined during compilation,
described in the two tables below. Unit files found in directories
listed earlier override files with the same name in directories lower in
the list.&lt;/p&gt;
&lt;p&gt;When the variable $SYSTEMD_UNIT_PATH is set, the contents of this
variable overrides the unit load path. If $SYSTEMD_UNIT_PATH ends with
an empty component (&amp;ldquo;:&amp;rdquo;), the usual unit load path will be appended to
the contents of the variable.&lt;/p&gt;
&lt;p&gt;Table 1. Load path when running in system mode (&amp;ndash;system).&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    Path    Description
    /etc/systemd/system.control Persistent and transient configuration created using the dbus API
    /run/systemd/system.control
    /run/systemd/transient  Dynamic configuration for transient units
    /run/systemd/generator.early    Generated units with high priority (see early-dir in system.generator(7))
    /etc/systemd/system Local configuration
    /run/systemd/system Runtime units
    /run/systemd/generator  Generated units with medium priority (see normal-dir in system.generator(7))
    /usr/local/lib/systemd/system   Units of installed packages
    /usr/lib/systemd/system
    /run/systemd/generator.late Generated units with low priority (see late-dir in system.generator(7))
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Table 2. Load path when running in user mode (&amp;ndash;user).&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    Path    Description
    $XDG_CONFIG_HOME/systemd/user.control or ~/.config/systemd/user.control
    Persistent and transient configuration created using the dbus API
    ($XDG_CONFIG_HOME is used if set, ~/.config otherwise)
    $XDG_RUNTIME_DIR/systemd/user.control
    /run/systemd/transient  Dynamic configuration for transient units
    /run/systemd/generator.early    Generated units with high priority (see
    early-dir in system.generator(7))
    $XDG_CONFIG_HOME/systemd/user or $HOME/.config/systemd/user User configuration
    ($XDG_CONFIG_HOME is used if set, ~/.config otherwise)
    /etc/systemd/user   Local configuration
    $XDG_RUNTIME_DIR/systemd/user   Runtime units (only used when $XDG_RUNTIME_DIR
    is set)
    /run/systemd/user   Runtime units
    $XDG_RUNTIME_DIR/systemd/generator  Generated units with medium priority (see
    normal-dir in system.generator(7))
    $XDG_DATA_HOME/systemd/user or $HOME/.local/share/systemd/user  Units of
    packages that have been installed in the home directory ($XDG_DATA_HOME is used
    if set, ~/.local/share otherwise)
    $dir/systemd/user for each $dir in $XDG_DATA_DIRS   Additional locations for
    installed user units, one for each entry in $XDG_DATA_DIRS
    /usr/local/lib/systemd/user Units of packages that have been installed
    system-wide
    /usr/lib/systemd/user
    $XDG_RUNTIME_DIR/systemd/generator.late Generated units with low priority (see late-dir in system.generator(7))
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The set of load paths for the user manager instance may be augmented or
changed using various environment variables. And environment variables
may in turn be set using environment generators, see
systemd.environment-generator(7). In particular, $XDG_DATA_HOME and
$XDG_DATA_DIRS may be easily set using
systemd-environment-d-generator(8). Thus, directories listed here are
just the defaults. To see the actual list that would be used based on
compilation options and current environment use&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systemd-analyze --user unit-paths
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Moreover, additional units might be loaded into systemd (&amp;ldquo;linked&amp;rdquo;) from
directories not on the unit load path. See the link command for
systemctl(1).&lt;/p&gt;</content><category term="systemd"></category></entry><entry><title>Internet Archives</title><link href="/egberts/articles/internet-archives.html" rel="alternate"></link><published>2018-10-01T14:29:00-04:00</published><updated>2018-10-01T14:29:00-04:00</updated><author><name></name></author><id>tag:None,2018-10-01:/egberts/articles/internet-archives.html</id><summary type="html">&lt;p&gt;A list of Internet Archives&lt;/p&gt;</summary><content type="html">&lt;h2 id="internet-archives"&gt;Internet Archives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://archive.org/"&gt;Internet Archive’s Wayback Machine&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href="https://archive.is"&gt;Archive.is&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href="https://screenshots.com"&gt;Screenshots.com&lt;/a&gt;, as well as&lt;/li&gt;
&lt;li&gt;WebActivism (not recommended)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cyberextortion.org/"&gt;CyberExtortion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="archives"></category></entry><entry><title>SpiderMonkey Overview</title><link href="/egberts/articles/spidermonkey-overview.html" rel="alternate"></link><published>2018-09-24T10:35:00-04:00</published><updated>2018-09-24T10:35:00-04:00</updated><author><name></name></author><id>tag:None,2018-09-24:/egberts/articles/spidermonkey-overview.html</id><summary type="html">&lt;p&gt;SpiderMonkey is a Mozilla Web Browser DOM component that comprises of
the following functional capabilities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JavaScript engine&lt;/li&gt;
&lt;li&gt;JavaScript just-in-time compiler (IonMonkey DOM network graphical support&lt;/li&gt;
&lt;li&gt;Threading support (SpiderMonkey Promise)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SpiderMonkey is compliant with ECMA 6 standard. Two engine components
have been created from SpiderMonkey:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;JavaScript/Emulators/SpiderMonkey/js - JavaScript console-based …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;SpiderMonkey is a Mozilla Web Browser DOM component that comprises of
the following functional capabilities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JavaScript engine&lt;/li&gt;
&lt;li&gt;JavaScript just-in-time compiler (IonMonkey DOM network graphical support&lt;/li&gt;
&lt;li&gt;Threading support (SpiderMonkey Promise)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SpiderMonkey is compliant with ECMA 6 standard. Two engine components
have been created from SpiderMonkey:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;JavaScript/Emulators/SpiderMonkey/js - JavaScript console-based engine&lt;/li&gt;
&lt;li&gt;JavaScript/Emulators/SpiderMonkey/xpcshell - JavaScript Browser-based engine&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Difference between &lt;code&gt;js&lt;/code&gt; and &lt;code&gt;xpcshell&lt;/code&gt; is that &lt;code&gt;js&lt;/code&gt; has no graphical
support (thus a smaller subset of JS API support).&lt;/p&gt;
&lt;h2 id="overviews"&gt;Overviews&lt;/h2&gt;
&lt;h3 id="high-level-overviews"&gt;High level overviews&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;http://hacks.mozilla.org/2010/03/a-quick-note-on-javascript-engine-components/&lt;/li&gt;
&lt;li&gt;https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Internals&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="medium-level-documentation"&gt;Medium level documentation&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;jsapi.h&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http://hg.mozilla.org/mozilla-central/file/tip/js/src/jsapi.h and the&lt;/li&gt;
&lt;li&gt;files in http://hg.mozilla.org/mozilla-central/file/tip/js/public&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Frequently used coding recipes and mappings from JS idioms to
SpiderMonkey code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://developer.mozilla.org/En/SpiderMonkey/JSAPI_Cookbook&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="detailed-documentation"&gt;Detailed documentation&lt;/h3&gt;
&lt;p&gt;Build:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://developer.mozilla.org/en/SpiderMonkey/Build_Documentation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Testing:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://developer.mozilla.org/en/SpiderMonkey/Running_Automated_JavaScript_Tests&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Shell:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://developer.mozilla.org/En/SpiderMonkey/Introduction_to_the_JavaScript_shell&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Function reference:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://developer.mozilla.org/en/SpiderMonkey/JSAPI_Reference&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="api"&gt;API&lt;/h3&gt;
&lt;p&gt;Best C++ API is the official Mozilla JSAPI page:
https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/JSAPI_reference&lt;/p&gt;
&lt;h3 id="bindings-c"&gt;Bindings - C++&lt;/h3&gt;
&lt;p&gt;Bindings of SpiderMonkey to C++ have evolved over time:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;http://spiderape.sourceforge.net/ is the first one&lt;/li&gt;
&lt;li&gt;http://flusspferd.org/%7Cflusspferd&amp;gt; was the mainstream one&lt;/li&gt;
&lt;li&gt;libjspp is another good binding that ended its support in 2012&lt;/li&gt;
&lt;li&gt;https://github.com/rogerpoon/jspp%7Cjspp is the current one&lt;/li&gt;
&lt;/ol&gt;</content><category term="javascript"></category><category term="js engine"></category><category term="browser"></category><category term="mozilla"></category></entry><entry><title>Comparison of dynamic analysis framework for machine code</title><link href="/egberts/articles/comparison-of-dynamic-analysis-framework-for-machine-code.html" rel="alternate"></link><published>2018-09-24T10:11:00-04:00</published><updated>2018-09-24T10:11:00-04:00</updated><author><name></name></author><id>tag:None,2018-09-24:/egberts/articles/comparison-of-dynamic-analysis-framework-for-machine-code.html</id><summary type="html">&lt;p&gt;A table of comparison of dynamic analysis framework for machine code processing.&lt;/p&gt;</summary><content type="html">&lt;p&gt;
&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;description &lt;/th&gt;
            &lt;th class="justtable"&gt; Primary platform &lt;/th&gt;
            &lt;th class="justtable"&gt; Implementation of… &lt;/th&gt;
            &lt;th class="justtable"&gt; Analysis language &lt;/th&gt;
            &lt;th class="justtable"&gt; API style&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;a href="Pin" class="uri" title="wikilink"&gt;Pin&lt;/a&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; x86-64 &lt;/td&gt;
                &lt;td class="justtable"&gt; native binaries &lt;/td&gt;
                &lt;td class="justtable"&gt; C/C++ &lt;/td&gt;
                &lt;td class="justtable"&gt; instrumentation + callbacks/hooks&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;a href="Valgrind" class="uri" title="wikilink"&gt;Valgrind&lt;/a&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; x86-64 &lt;/td&gt;
                &lt;td class="justtable"&gt; native binaries &lt;/td&gt;
                &lt;td class="justtable"&gt; C &lt;/td&gt;
                &lt;td class="justtable"&gt; low-level instrumentation&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;a href="DiSL" class="uri" title="wikilink"&gt;DiSL&lt;/a&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; JVM &lt;/td&gt;
                &lt;td class="justtable"&gt; bytecode &lt;/td&gt;
                &lt;td class="justtable"&gt; Java &lt;/td&gt;
                &lt;td class="justtable"&gt; aspect-oriented&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;a href="RoadRunner" class="uri" title="wikilink"&gt;RoadRunner&lt;/a&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; JVM &lt;/td&gt;
                &lt;td class="justtable"&gt; bytecode &lt;/td&gt;
                &lt;td class="justtable"&gt; Java &lt;/td&gt;
                &lt;td class="justtable"&gt; event-stream&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;a href="Jalangi" class="uri" title="wikilink"&gt;Jalangi&lt;/a&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; source code &lt;/td&gt;
                &lt;td class="justtable"&gt; JavaScript &lt;/td&gt;
                &lt;td class="justtable"&gt; callbacks/hooks&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;a href="Wasabi" class="uri" title="wikilink"&gt;Wasabi&lt;/a&gt;&amp;lsquo; &lt;/td&gt;
                &lt;td class="justtable"&gt; WebAssembly &lt;/td&gt;
                &lt;td class="justtable"&gt; binary code &lt;/td&gt;
                &lt;td class="justtable"&gt; JavaScript &lt;/td&gt;
                &lt;td class="justtable"&gt; callbacks/hooks&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;&lt;/p&gt;</content><category term="framework"></category><category term="comparison"></category><category term="machine code"></category><category term="dynamic analysis"></category></entry><entry><title>Using Large Network Packet</title><link href="/egberts/articles/using-large-network-packet.html" rel="alternate"></link><published>2018-09-24T09:38:00-04:00</published><updated>2018-09-24T09:38:00-04:00</updated><author><name></name></author><id>tag:None,2018-09-24:/egberts/articles/using-large-network-packet.html</id><summary type="html">&lt;p&gt;Your customer is using large network packets. And by large packets, this
means packet size greater than 1514 bytes.&lt;/p&gt;
&lt;p&gt;In computer networking, the maximum transmission unit (MTU) of a
communications protocol of a layer is the size (in bytes) of the largest
protocol data unit that the layer can pass …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Your customer is using large network packets. And by large packets, this
means packet size greater than 1514 bytes.&lt;/p&gt;
&lt;p&gt;In computer networking, the maximum transmission unit (MTU) of a
communications protocol of a layer is the size (in bytes) of the largest
protocol data unit that the layer can pass onwards. MTU parameters
usually appear in association with a communications interface (NIC,
serial port, etc.). Standards (Ethernet, for example) can fix the size
of an MTU; or systems (such as point-to-point serial links) may decide
MTU at connect time.&lt;/p&gt;
&lt;h2 id="step-by-step-guide"&gt;Step-by-step guide&lt;/h2&gt;
&lt;p&gt;Enter root shell&lt;/p&gt;
&lt;p&gt;Add MTU to the motherboard NIC (eth0)&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;MTU=65535&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/sysconfig/network-scripts/ifcfg-eth0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Turn off hardware-assist offloading on the Ethernet interface.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# set the MSS&lt;/span&gt;
ifconfig eth0 mtu &lt;span class="m"&gt;65535&lt;/span&gt;
&lt;span class="c1"&gt;# turn off TCP offload&lt;/span&gt;
ethtool -K eth0 tso off
&lt;span class="c1"&gt;# turn off GRE offload&lt;/span&gt;
ethtool -K eth0 gso off
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To make it permanent, edit and insert the above code into
```/etc/rc.local``` and reboot.&lt;/p&gt;</content><category term="ethernet"></category><category term="packet"></category></entry><entry><title>Profiling Bro</title><link href="/egberts/articles/bro-profiling.html" rel="alternate"></link><published>2018-09-24T09:33:00-04:00</published><updated>2018-09-24T09:33:00-04:00</updated><author><name></name></author><id>tag:None,2018-09-24:/egberts/articles/bro-profiling.html</id><summary type="html">&lt;p&gt;How to run OProfile on Bro IDS&lt;/p&gt;</summary><content type="html">&lt;h2 id="profiling-bro"&gt;Profiling Bro&lt;/h2&gt;
&lt;p&gt;This page describes how to run OProfile Get two packages from
&lt;a href="http://debuginfo.centos.org/6/x86_64/"&gt;http://debuginfo.centos.org/6/x86_64/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;kernel-debuginfo-x86_64-`uname -r`.rpm&lt;/li&gt;
&lt;li&gt;kernel-debuginfo-common-x86_64-`uname -r`.rpm&lt;/li&gt;
&lt;li&gt;oprofile&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="set-up-the-kernel"&gt;Set up the kernel&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opcontrol --setup --vmlinux&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib/debug/lib/modules/&lt;span class="sb"&gt;`&lt;/span&gt;uname -r&lt;span class="sb"&gt;`&lt;/span&gt;/vmlinux&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="c1"&gt;# if no vmlinux available, execute&lt;/span&gt;
opcontrol --setup --no-vmlinux
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note: vmlinux must be UNSTRIPPED (HAVE symbols) in its ELF2 file.
Extracting from /boot/vmlinuz-&amp;hellip; will not work.&lt;/p&gt;
&lt;p&gt;Configure Kernel to run oprofile:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &amp;gt; /proc/sys/kernel/nmi_watchdog
&lt;span class="c1"&gt;#  and collect&lt;/span&gt;
opcontrol --reset
opcontrol --separate&lt;span class="o"&gt;=&lt;/span&gt;lib,kernel
opcontrol --start
&lt;span class="c1"&gt;# run your app(s)&lt;/span&gt;
opcontrol --deinit
opreport
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="example-reports"&gt;Example Reports&lt;/h2&gt;
&lt;p&gt;The oprofile reports are largely shaped by the granularity of statistics
collection in the following groups:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;CPUs
&lt;/em&gt;Threads
*NUMAs&lt;/p&gt;</content><category term="Bro"></category><category term="profiling"></category></entry><entry><title>DNSSEC Keys, ZSK vs KSK</title><link href="/egberts/articles/dnssec-keys-zsk-vs-ksk.html" rel="alternate"></link><published>2018-08-26T21:40:00-04:00</published><updated>2018-08-26T21:40:00-04:00</updated><author><name></name></author><id>tag:None,2018-08-26:/egberts/articles/dnssec-keys-zsk-vs-ksk.html</id><summary type="html">&lt;p&gt;The table below summarizes the usage and frequency of use for each of
the keys.:&lt;/p&gt;
&lt;h2 id="zsk-vs-ksk-comparison"&gt;ZSK vs. KSK Comparison&lt;/h2&gt;
&lt;p&gt;
&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;Key&lt;/th&gt;
            &lt;th class="justtable"&gt; Usage&lt;/th&gt;
            &lt;th class="justtable"&gt; Frequency of Use&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;ZSK&lt;/td&gt;
                &lt;td class="justtable"&gt; Private&lt;/td&gt;
                &lt;td class="justtable"&gt; Used by authoritative server to create RRSIG for zone data Used somewhat frequently depending on the zone, whenever authoritative zone data changes or re-signing …&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;The table below summarizes the usage and frequency of use for each of
the keys.:&lt;/p&gt;
&lt;h2 id="zsk-vs-ksk-comparison"&gt;ZSK vs. KSK Comparison&lt;/h2&gt;
&lt;p&gt;
&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;Key&lt;/th&gt;
            &lt;th class="justtable"&gt; Usage&lt;/th&gt;
            &lt;th class="justtable"&gt; Frequency of Use&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;ZSK&lt;/td&gt;
                &lt;td class="justtable"&gt; Private&lt;/td&gt;
                &lt;td class="justtable"&gt; Used by authoritative server to create RRSIG for zone data Used somewhat frequently depending on the zone, whenever authoritative zone data changes or re-signing is needed.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;ZSK&lt;/td&gt;
                &lt;td class="justtable"&gt; Public&lt;/td&gt;
                &lt;td class="justtable"&gt; Used by recursive server to validate zone data RRset Used very frequently, whenever recursive server validates a response&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;KSK&lt;/td&gt;
                &lt;td class="justtable"&gt; Private&lt;/td&gt;
                &lt;td class="justtable"&gt; Used by authoritative server to create RRSIG for ZSK and KSK Public (DNSKEY) Very infrequently, whenever ZSK&amp;rsquo;s or KSK&amp;rsquo;s change (every year or every five years in our examples)&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;KSK&lt;/td&gt;
                &lt;td class="justtable"&gt; Public&lt;/td&gt;
                &lt;td class="justtable"&gt; Used by recursive server to validate DNSKEY RRset Used very frequently, whenever recursive server validates a DNSKEY RRset&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ftp.yz.yamagata-u.ac.jp/pub/network/isc/dnssec-guide/html/dnssec-guide.html#troubleshooting-unable-to-load-keys"&gt;https://ftp.yz.yamagata-u.ac.jp/pub/network/isc/dnssec-guide/html/dnssec-guide.html#troubleshooting-unable-to-load-keys&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="dnssec"></category><category term="dns"></category><category term="comparison"></category></entry><entry><title>Bitcoin Vulnerabilities</title><link href="/egberts/articles/bitcoin-vulnerabilities.html" rel="alternate"></link><published>2018-08-20T09:43:00-04:00</published><updated>2018-08-20T09:43:00-04:00</updated><author><name></name></author><id>tag:None,2018-08-20:/egberts/articles/bitcoin-vulnerabilities.html</id><summary type="html">&lt;p&gt;Vulnerabilities Found in Bitcoin.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Some errors Satoshi with Bitcoin made are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Early version of bitcoind allows you to spend any coin by using &lt;code&gt;op_true op_return&lt;/code&gt; as signature.&lt;/li&gt;
&lt;li&gt;It was initially possible to fork each version of the client on its own chain using &amp;ldquo;&lt;strong&gt;op_version&lt;/strong&gt;&amp;ldquo;&lt;/li&gt;
&lt;li&gt;Input value were not directly covered by signature, making it impossible for offline devices to check how much is spent and paid in fees.&lt;/li&gt;
&lt;li&gt;It is possible to put &lt;strong&gt;op_checksig&lt;/strong&gt; in an input script. Computing the signature hash fails and return 1 as an error code, but error code was checked so it is possible to produce a valid signature signing 1.&lt;/li&gt;
&lt;li&gt;Version fields are completely useless because they don&amp;rsquo;t degrade gracefully.&lt;/li&gt;
&lt;li&gt;In case of hard fork, you can&amp;rsquo;t make sense of the new data regardless of version, and in case of soft forks, they aren&amp;rsquo;t useful.&lt;/li&gt;
&lt;li&gt;Places where addresses could be useful, for instance outputs, do not have one.&lt;/li&gt;
&lt;li&gt;Numerous opcodes were seriously flawed in early version, some of them exhibiting buffer overflow.&lt;/li&gt;
&lt;li&gt;It was possible to create several coinbases with the same &lt;strong&gt;txid&lt;/strong&gt;, and in fact, Satoshi lost coins doing so. This breaks numerous assumption about the &lt;strong&gt;txns&lt;/strong&gt; graph being a &lt;a href="wikipedia:Directed_acyclic_graph" title="wikilink"&gt;DAG&lt;/a&gt; by design.&lt;/li&gt;
&lt;li&gt;Block size and/or tx count are not covered by pow. This creates DoS vector that lead to the introduction of the block size.  [[wikipedia:Bitcoin&lt;/li&gt;
&lt;li&gt;Unlimited|Bitcoin Unlimited]] suffered from attacks after neglecting these DoS * vectors.&lt;/li&gt;
&lt;li&gt;The script number format is little-endian, one complement. No more comments on that one.&lt;/li&gt;
&lt;li&gt;The original code had numerous problems checking signature encoding, at least one could lead to a chain split between 32 and 64 bits architectures.&lt;/li&gt;
&lt;li&gt;The &lt;a href="wikipedia:Merkle_tree" title="wikilink"&gt;Merkle tree&lt;/a&gt; doesn&amp;rsquo;t handle empty branches properly. This lead to a vulnerability where you could repeat transactions is a block and get a node to reject it.&lt;/li&gt;
&lt;li&gt;It is also possible to generate a valid 64 bytes transaction that looks like an intermediate node in the Merkle tree, making it possible to lie to &lt;strong&gt;spv&lt;/strong&gt; by brute forcing 70bits or so, which isn&amp;rsquo;t considered secure.&lt;/li&gt;
&lt;li&gt;Verifying signatures was O(n*m) where n is the number of &lt;strong&gt;checksig&lt;/strong&gt; ops and &lt;strong&gt;m&lt;/strong&gt; the transaction size. This makes it possible to generate transaction that are absurdly expensive to validate.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/deadalnix/status/1007548856375095296?s=09"&gt;https://twitter.com/deadalnix/status/1007548856375095296?s=09&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="bitcoin"></category><category term="vulnerabilities"></category></entry><entry><title>DNSSEC HOWTO</title><link href="/egberts/articles/dnssec-howto.html" rel="alternate"></link><published>2018-08-08T16:25:00-04:00</published><updated>2018-08-08T16:25:00-04:00</updated><author><name></name></author><id>tag:None,2018-08-08:/egberts/articles/dnssec-howto.html</id><summary type="html">&lt;h2 id="dnssec-two-steps"&gt;DNSSEC Two Steps&lt;/h2&gt;
&lt;p&gt;Signing your domain with DNSSEC involves two components:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The registrar of your domain name needs to be able to accept what are called “Delegation Signor (DS)” records and be able to send those up to the Top-Level-Domain (TLD) for your domain (ex. .com, .org, .net).&lt;/li&gt;
&lt;li&gt;The DNS …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="dnssec-two-steps"&gt;DNSSEC Two Steps&lt;/h2&gt;
&lt;p&gt;Signing your domain with DNSSEC involves two components:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The registrar of your domain name needs to be able to accept what are called “Delegation Signor (DS)” records and be able to send those up to the Top-Level-Domain (TLD) for your domain (ex. .com, .org, .net).&lt;/li&gt;
&lt;li&gt;The DNS hosting provider who operates the DNS name servers for your domain must support DNSSEC and be able to sign (and re-sign) your DNS zone files.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="dnssec-resource-records"&gt;DNSSEC Resource Records&lt;/h2&gt;
&lt;p&gt;A Resource Record (RR) contains a specific information about the domain.
Some common ones are A record which contains the IP address of the
domain, AAAA record which holds the IPv6 information, and MX record
which has mail servers of a domain. A complete list of DNS RRs can be
found here.&lt;/p&gt;
&lt;p&gt;Likewise DNSSEC too requires several RRs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DNSKEY Holds the public key which resolvers use to verify.&lt;/li&gt;
&lt;li&gt;RRSIG Exists for each RR and contains the digital signature of a record.&lt;/li&gt;
&lt;li&gt;DS - Delegation Signer – this record exists in the TLD&amp;rsquo;s nameservers. So if example.com was your domain name, the TLD is &amp;ldquo;com&amp;rdquo; and its nameservers are a.gtld-servers.net., b.gtld-servers.net. up to m.gtld-servers.net..  The purpose of this record is to verify the authenticity of the DNSKEY itself.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="setup-environment"&gt;Setup Environment&lt;/h2&gt;
&lt;p&gt;Domain Name: example.com&lt;/p&gt;
&lt;p&gt;I used a real .COM domain to do this, but have replaced it with
example.com for this article.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    Master Nameserver:
    IP Address: 1.1.1.1
    Hostname: master.example.com
    OS: Debian 7

    Slave Nameserver:
    IP Address: 2.2.2.2
    Hostname: slave.example.com
    OS: CentOS
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;== File locations and names ==&lt;/p&gt;
&lt;p&gt;The names and locations of configuration and zone files of BIND different according to the Linux distribution used. Debian/Ubuntu&lt;/p&gt;
&lt;p&gt;Service name: bind9
Main configuration file: /etc/bind/named.conf.options
Zone names file: /etc/bind/named.conf.local
Default zone file location: /var/cache/bind/
CentOS/Fedora Service name: named
Main configuration and zone names file: /etc/named.conf
Default zone file location: /var/named/&lt;/p&gt;
&lt;p&gt;These may change if you&amp;rsquo;re using bind-chroot. For this tutorial, I&amp;rsquo;ve
used Debian for the Master NS and CentOS for the Slave NS, so change it
according to your distribution.&lt;/p&gt;
&lt;h2 id="dnssec-master-configuration"&gt;DNSSEC Master Configuration&lt;/h2&gt;
&lt;p&gt;Enable DNSSEC by adding the following configuration directives inside
options{ }&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nano /etc/bind/named.conf.options
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    dnssec-enable yes;
    dnssec-validation yes;
    dnssec-lookaside auto;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It is possible that these are already added in some distributions.
Navigate to the location of your zone files.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /var/lib/bind &lt;span class="p"&gt;;&lt;/span&gt; Debian
&lt;span class="c1"&gt;# or&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; /var/cache/named &lt;span class="p"&gt;;&lt;/span&gt; RedHat
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create a Zone Signing Key(ZSK) with the following command.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dnssec-keygen -a NSEC3RSASHA1 -b &lt;span class="m"&gt;2048&lt;/span&gt; -n ZONE example.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you have installed haveged, it&amp;rsquo;ll take only a few seconds for this
key to be generated; otherwise it&amp;rsquo;ll take a very long time. Sample
output.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@master# &lt;span class="nb"&gt;cd&lt;/span&gt; /var/cache/bind
root@master# dnssec-keygen -a NSEC3RSASHA1 &lt;span class="se"&gt;\&lt;/span&gt;
                           -b &lt;span class="m"&gt;2048&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
                           -n ZONE &lt;span class="se"&gt;\&lt;/span&gt;
                           example.com
   Generating key pair..................+++ .............+++
   Kexample.com.+007+40400
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create a Key Signing Key(KSK) with the following command.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dnssec-keygen -f KSK -a NSEC3RSASHA1 -b &lt;span class="m"&gt;4096&lt;/span&gt; -n ZONE example.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Sample output.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@master# &lt;span class="nb"&gt;cd&lt;/span&gt; /var/cache/bind
root@master# dnssec-keygen -f KSK &lt;span class="se"&gt;\&lt;/span&gt;
                           -a NSEC3RSASHA1 &lt;span class="se"&gt;\&lt;/span&gt;
                           -b &lt;span class="m"&gt;4096&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
                           -n ZONE &lt;span class="se"&gt;\&lt;/span&gt;
                           example.com
   Generating key pair......................++.............................................................................................................................................................................................................++
   Kexample.com.+007+62910
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The directory will now have 4 keys - private/public pairs of ZSK and
KSK. We have to add the public keys which contain the DNSKEY record to
the zone file. The following for loop will do this.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; key in &lt;span class="sb"&gt;`&lt;/span&gt;ls Kexample.com*.key&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\$INCLUDE &lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&amp;gt;&amp;gt; example.com.zone
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Sign the zone with the dnssec-signzone command.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dnssec-signzone -3 &lt;span class="sb"&gt;`&lt;/span&gt;&amp;lt;salt&amp;gt;&lt;span class="sb"&gt;`&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
                -A &lt;span class="se"&gt;\&lt;/span&gt;
                -N INCREMENT &lt;span class="se"&gt;\&lt;/span&gt;
                -o &lt;span class="sb"&gt;`&lt;/span&gt;&amp;lt;zonename&amp;gt;&lt;span class="sb"&gt;`&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
                -t &lt;span class="sb"&gt;`&lt;/span&gt;&amp;lt;zonefilename&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Replace salt with something random. Here is an example with the output.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /var/cache/bind
dnssec-signzone -A -3 &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="k"&gt;$(&lt;/span&gt;head -c &lt;span class="m"&gt;1000&lt;/span&gt; /dev/random &lt;span class="p"&gt;|&lt;/span&gt; sha1sum &lt;span class="p"&gt;|&lt;/span&gt; cut -b &lt;span class="m"&gt;1&lt;/span&gt;-16&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -N INCREMENT &lt;span class="se"&gt;\&lt;/span&gt;
    -o example.com &lt;span class="se"&gt;\&lt;/span&gt;
    -t example.com.zone

   Verifying the zone using the following algorithms: NSEC3RSASHA1.
   Zone signing complete:
   Algorithm: NSEC3RSASHA1: KSKs: &lt;span class="m"&gt;1&lt;/span&gt; active, &lt;span class="m"&gt;0&lt;/span&gt; stand-by, &lt;span class="m"&gt;0&lt;/span&gt; revoked
                           ZSKs: &lt;span class="m"&gt;1&lt;/span&gt; active, &lt;span class="m"&gt;0&lt;/span&gt; stand-by, &lt;span class="m"&gt;0&lt;/span&gt; revoked
   example.com.zone.signed
   Signatures generated:                       &lt;span class="m"&gt;14&lt;/span&gt;
   Signatures retained:                         &lt;span class="m"&gt;0&lt;/span&gt;
   Signatures dropped:                          &lt;span class="m"&gt;0&lt;/span&gt;
   Signatures successfully verified:            &lt;span class="m"&gt;0&lt;/span&gt;
   Signatures unsuccessfully verified:          &lt;span class="m"&gt;0&lt;/span&gt;
   Signing &lt;span class="nb"&gt;time&lt;/span&gt; in seconds:                 &lt;span class="m"&gt;0&lt;/span&gt;.046
   Signatures per second:                 &lt;span class="m"&gt;298&lt;/span&gt;.310
   Runtime in seconds:                      &lt;span class="m"&gt;0&lt;/span&gt;.056
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A 16 character string must be entered as the &amp;ldquo;salt&amp;rdquo;. The following
command&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;head -c &lt;span class="m"&gt;1000&lt;/span&gt; /dev/random &lt;span class="p"&gt;|&lt;/span&gt; sha1sum &lt;span class="p"&gt;|&lt;/span&gt; cut -b &lt;span class="m"&gt;1&lt;/span&gt;-16
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;outputs a random string of 16 characters which will be used as the salt.&lt;/p&gt;
&lt;p&gt;This creates a new file named example.com.zone.signed which contains
RRSIG records for each DNS record. We have to tell BIND to load this
&amp;ldquo;signed&amp;rdquo; zone.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nano /etc/bind/named.conf.local
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Change the file option inside the zone { } section.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   zone &amp;quot;example.com&amp;quot; IN {
       type master;
       file &amp;quot;example.com.zone.signed&amp;quot;;
       allow-transfer { 2.2.2.2; };
       allow-update { none; };
   };
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Save this file and reload bind&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;service bind9 reload
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Check if for the DNSKEY record using dig on the same server.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dig DNSKEY example.com. @localhost +multiline
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Sample output&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /var/cache/bind
dig DNSKEY example.com. @localhost +multiline
&lt;span class="p"&gt;;;&lt;/span&gt; Truncated, retrying in TCP mode.

&lt;span class="p"&gt;;&lt;/span&gt; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG &lt;span class="m"&gt;9&lt;/span&gt;.8.4-rpz2+rl005.12-P1 &amp;lt;&amp;lt;&amp;gt;&amp;gt; DNSKEY example.com. @localhost +multiline
&lt;span class="p"&gt;;;&lt;/span&gt; global options: +cmd
&lt;span class="p"&gt;;;&lt;/span&gt; Got answer:
&lt;span class="p"&gt;;;&lt;/span&gt; -&amp;gt;&amp;gt;HEADER&lt;span class="s"&gt;&amp;lt;&amp;lt;- opco&lt;/span&gt;de: QUERY, status: NOERROR, id: &lt;span class="m"&gt;43986&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; flags: qr aa rd&lt;span class="p"&gt;;&lt;/span&gt; QUERY: &lt;span class="m"&gt;1&lt;/span&gt;, ANSWER: &lt;span class="m"&gt;2&lt;/span&gt;, AUTHORITY: &lt;span class="m"&gt;0&lt;/span&gt;, ADDITIONAL: &lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; WARNING: recursion requested but not available

&lt;span class="p"&gt;;;&lt;/span&gt; QUESTION SECTION:
&lt;span class="p"&gt;;&lt;/span&gt;example.com.       IN DNSKEY

&lt;span class="p"&gt;;;&lt;/span&gt; ANSWER SECTION:
example.com.        &lt;span class="m"&gt;86400&lt;/span&gt; IN DNSKEY   &lt;span class="m"&gt;256&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;
                AwEAActPMYurNEyhUgHjPctbLCI1VuSj3xcjI8QFTpdM
                8k3cYrfwB/WlNKjnnjt98nPmHv6frnuvs2LKIvvGzz++
                kVwVc8uMLVyLOxVeKhygDurFQpLNNdPumuc2MMRvV9me
                fPrdKWtEEtOxq6Pce3DW2qRLjyE1n1oEq44gixn6hjgo
                sG2FzV4fTQdxdYCzlYjsaZwy0Kww4HpIaozGNjoDQVI/
                f3JtLpE1MYEb9DiUVMjkwVR5yH2UhJwZH6VVvDOZg6u6
                YPOSUDVvyofCGcICLqUOG+qITYVucyIWgZtHZUb49dpG
                aJTAdVKlOTbYV9sbmHNuMuGt+1/rc+StsjTPTHU&lt;span class="o"&gt;=&lt;/span&gt;
                &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; key &lt;span class="nv"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;40400&lt;/span&gt;
example.com.        &lt;span class="m"&gt;86400&lt;/span&gt; IN DNSKEY   &lt;span class="m"&gt;257&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;
                AwEAAa2BE0dAvMs0pe2f+D6HaCyiFSHw47BA82YGs7Sj
                qSqH3MprNra9/4S0aV6SSqHM3iYZt5NRQNTNTRzkE18e
                3j9AGV8JA+xbEow74n0eu33phoxq7rOpd/N1GpCrxUsG
                kK4PDkm+R0hhfufe1ZOSoiZUV7y8OVGFB+cmaVb7sYqB
                RxeWPi1Z6Fj1/5oKwB6Zqbs7s7pmxl/GcjTvdQkMFtOQ
                AFGqaaSxVrisjq7H3nUj4hJIJ+SStZ59qfW3rO7+Eqgo
                1aDYaz+jFHZ+nTc/os4Z51eMWsZPYRnPRJG2EjJmkBrJ
                huZ9x0qnjEjUPAcUgMVqTo3hkRv0D24I10LAVQLETuw/
                QOuWMG1VjybzLbXi5YScwcBDAgtEpsQA9o7u6VC00DGh
                +2+4RmgrQ7mQ5A9MwhglVPaNXKuI6sEGlWripgTwm425
                JFv2tGHROS55Hxx06A416MtxBpSEaPMYUs6jSIyf9cjB
                BMV24OjkCxdz29zi+OyUyHwirW51BFSaOQuzaRiOsovM
                NSEgKWLwzwsQ5cVJBEMw89c2V0sHa4yuI5rr79msRgZT
                KCD7wa1Hyp7s/r+ylHhjpqrZwViOPU7tAGZ3IkkJ2SMI
                e/h+FGiwXXhr769EHbVE/PqvdbpcsgsDqFu0K2oqY70u
                SxnsLB8uVKYlzjG+UIoQzefBluQl
                &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; key &lt;span class="nv"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;62910&lt;/span&gt;

&lt;span class="p"&gt;;;&lt;/span&gt; Query time: &lt;span class="m"&gt;0&lt;/span&gt; msec
&lt;span class="p"&gt;;;&lt;/span&gt; SERVER: &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1#53&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; WHEN: Wed Nov &lt;span class="m"&gt;27&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt;:18:30 &lt;span class="m"&gt;2013&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; MSG SIZE  rcvd: &lt;span class="m"&gt;839&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Check for the presence of RRSIG records.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dig A example.com. @localhost +noadditional +dnssec +multiline
&lt;span class="p"&gt;;&lt;/span&gt; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG &lt;span class="m"&gt;9&lt;/span&gt;.8.4-rpz2+rl005.12-P1 &amp;lt;&amp;lt;&amp;gt;&amp;gt; A example.com. @localhost +noadditional
+dnssec +multiline
&lt;span class="p"&gt;;;&lt;/span&gt; global options: +cmd
&lt;span class="p"&gt;;;&lt;/span&gt; Got answer:
&lt;span class="p"&gt;;;&lt;/span&gt; -&amp;gt;&amp;gt;HEADER&lt;span class="s"&gt;&amp;lt;&amp;lt;- opco&lt;/span&gt;de: QUERY, status: NOERROR, id: &lt;span class="m"&gt;32902&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; flags: qr aa rd&lt;span class="p"&gt;;&lt;/span&gt; QUERY: &lt;span class="m"&gt;1&lt;/span&gt;, ANSWER: &lt;span class="m"&gt;2&lt;/span&gt;, AUTHORITY: &lt;span class="m"&gt;3&lt;/span&gt;, ADDITIONAL: &lt;span class="m"&gt;5&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; WARNING: recursion requested but not available

&lt;span class="p"&gt;;;&lt;/span&gt; OPT PSEUDOSECTION:
&lt;span class="p"&gt;;&lt;/span&gt; EDNS: version: &lt;span class="m"&gt;0&lt;/span&gt;, flags: &lt;span class="k"&gt;do&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; udp: &lt;span class="m"&gt;4096&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; QUESTION SECTION:
&lt;span class="p"&gt;;&lt;/span&gt;example.com.         IN A

&lt;span class="p"&gt;;;&lt;/span&gt; ANSWER SECTION:
example.com.          &lt;span class="m"&gt;86400&lt;/span&gt; IN A &lt;span class="m"&gt;93&lt;/span&gt;.184.216.119
example.com.          &lt;span class="m"&gt;86400&lt;/span&gt; IN RRSIG A &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;86400&lt;/span&gt; &lt;span class="m"&gt;20131227171405&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;
                            &lt;span class="m"&gt;20131127171405&lt;/span&gt; &lt;span class="m"&gt;40400&lt;/span&gt; example.com.
                            JCoL8L7As1a8CXnx1W62O94eQl6zvVQ3prtNK7BWIW9O
                            lir/4V+a6c+0tbt4z4lhgmb0sb+qdvqRnlI7CydaSZDb
                            hlrJA93fHqFqNXw084YD1gWC+M8m3ewbobiZgBUh5W66
                            1hsVjWZGvvQL+HmobuSvsF8WBMAFgJgYLg0YzBAvwHIk
                            886be6vbNeAltvPl9I+tjllXkMK5dReMH40ulgKo+Cwb
                            xNQ+RfHhCQIwKgyvL1JGuHB125rdEQEVnMy26bDcC9R+
                            qJNYj751CEUZxEEGI9cZkD44oHwDvPgF16hpNZGUdo8P
                            &lt;span class="nv"&gt;GtuH4JwP3hDIpNtGTsQrFWYWL5pUuuQRwA&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;;;&lt;/span&gt; AUTHORITY SECTION:
example.com.          &lt;span class="m"&gt;86400&lt;/span&gt; IN NS master.example.com.
example.com.          &lt;span class="m"&gt;86400&lt;/span&gt; IN NS slave.example.com.
example.com.          &lt;span class="m"&gt;86400&lt;/span&gt; IN RRSIG NS &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;86400&lt;/span&gt; &lt;span class="m"&gt;20131227171405&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;
                            &lt;span class="m"&gt;20131127171405&lt;/span&gt; &lt;span class="m"&gt;40400&lt;/span&gt; example.com.
                            hEGzNvKnc3sXkiQKo9/+ylU5WSFWudbUc3PAZvFMjyRA
                            j7dzcVwM5oArK5eXJ8/77CxL3rfwGvi4LJzPQjw2xvDI
                            oVKei2GJNYekU38XUwzSMrA9hnkremX/KoT4Wd0K1NPy
                            giaBgyyGR+PT3jIP95Ud6J0YS3+zg60Zmr9iQPBifH3p
                            QrvvY3OjXWYL1FKBK9+rJcwzlsSslbmj8ndL1OBKPEX3
                            psSwneMAE4PqSgbcWtGlzySdmJLKqbI1oB+d3I3bVWRJ
                            4F6CpIRRCb53pqLvxWQw/NXyVefNTX8CwOb/uanCCMH8
                            wTYkCS3APl/hu20Y4R5f6xyt8JZx3zkZEQ&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;;;&lt;/span&gt; Query time: &lt;span class="m"&gt;0&lt;/span&gt; msec
&lt;span class="p"&gt;;;&lt;/span&gt; SERVER: &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1#53&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; WHEN: Thu Nov &lt;span class="m"&gt;28&lt;/span&gt; &lt;span class="m"&gt;00&lt;/span&gt;:01:06 &lt;span class="m"&gt;2013&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; MSG SIZE  rcvd: &lt;span class="m"&gt;1335&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The configuration of the master server is complete.&lt;/p&gt;
&lt;h2 id="dnssec-slave-configuration"&gt;DNSSEC Slave Configuration&lt;/h2&gt;
&lt;p&gt;The slave servers only require DNSSEC to be enabled and the zone file
location to be changed. Edit the main configuration file of BIND.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nano /etc/named.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Place these lines inside the options { } section if they don&amp;rsquo;t exist.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   dnssec-enable yes;
   dnssec-validation yes;
   dnssec-lookaside auto;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Edit the file option inside the zone { } section.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    zone &amp;quot;example.com&amp;quot; IN {
        type slave;
        file &amp;quot;example.com.zone.signed&amp;quot;;
        masters { 1.1.1.1; };
        allow-notify { 1.1.1.1; };
    };
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Reload the BIND service.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;service named reload
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Check if there is a new .signed zone file.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    $ ls -l /var/named/slaves/
    total &lt;span class="m"&gt;16&lt;/span&gt;
    -rw-r--r-- &lt;span class="m"&gt;1&lt;/span&gt; named named  &lt;span class="m"&gt;472&lt;/span&gt; Nov &lt;span class="m"&gt;27&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt;:25 example.com.zone
    -rw-r--r-- &lt;span class="m"&gt;1&lt;/span&gt; named named &lt;span class="m"&gt;9180&lt;/span&gt; Nov &lt;span class="m"&gt;27&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt;:29 example.com.zone.signed
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Voila! That&amp;rsquo;s it. Just to make sure things are working as they should
,query the DNSKEY using dig as mentioned in the previous section.&lt;/p&gt;
&lt;h3 id="configure-ds-records-with-the-registrar"&gt;Configure DS records with the registrar&lt;/h3&gt;
&lt;p&gt;When we ran the dnssec-signzone command apart from the .signed zone
file, a file named dsset-example.com was also created, this contains the
DS records.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /var/cache/bind
cat dsset-example.com.
    example.com.        IN DS &lt;span class="m"&gt;62910&lt;/span&gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; 1D6AC75083F3CEC31861993E325E0EEC7E97D1DD
    example.com.        IN DS &lt;span class="m"&gt;62910&lt;/span&gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
    198303E265A856DE8FE6330EDB5AA76F3537C10783151AEF3577859F FFC3F59D
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;These have to be entered in your domain registrar&amp;rsquo;s control panel. The
screenshots below will illustrate the steps on GoDaddy.&lt;/p&gt;
&lt;p&gt;Login to your domain registrar&amp;rsquo;s control panel, choose your domain, and
select the option to manage DS records. GoDaddy&amp;rsquo;s control panel looks
like this.&lt;/p&gt;
&lt;p&gt;GoDaddy&amp;rsquo;s Domain control panel&lt;/p&gt;
&lt;p&gt;Here is a breakup of the data in the dsset-example.com. file. DS record
1:&lt;/p&gt;
&lt;p&gt;Key tag: 62910 Algorithm: 7 Digest Type: 1 Digest:
1D6AC75083F3CEC31861993E325E0EEC7E97D1DD&lt;/p&gt;
&lt;p&gt;DS record 1 DS record 2:&lt;/p&gt;
&lt;p&gt;Key tag: 62910 Algorithm: 7 Digest Type: 2 Digest:
198303E265A856DE8FE6330EDB5AA76F3537C10783151AEF3577859FFFC3F59D&lt;/p&gt;
&lt;p&gt;DS record 2&lt;/p&gt;
&lt;p&gt;The second DS record in the dsset-example.com. file had a space in the
digest, but when entering it in the form you should omit it. Click Next,
click Finish and Save the records.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;ll take a few minutes for these changes to be saved. To check if the
DS records have been created query the nameservers of your TLD. Instead
of finding the TLD&amp;rsquo;s nameservers we can do a dig +trace which is much
simpler.&lt;/p&gt;
&lt;p&gt;root@master:~# dig +trace +noadditional DS example.com. @8.8.8.8 | grep
DS&lt;/p&gt;
&lt;p&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.8.2rc1-RedHat-9.8.2-0.17.rc1.el6_4.6 &amp;lt;&amp;lt;&amp;gt;&amp;gt; +trace +noadditional DS&lt;/p&gt;
&lt;p&gt;example.com. @8.8.8.8 example.com. 86400 IN DS 62910 7 2
198303E265A856DE8FE6330EDB5AA76F3537C10783151AEF3577859F FFC3F59D
example.com. 86400 IN DS 62910 7 1
1D6AC75083F3CEC31861993E325E0EEC7E97D1DD&lt;/p&gt;
&lt;p&gt;Once this is confirmed, we can check if DNSSEC is working fine using any
of the following online services.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;a href="http://dnssec-debugger.verisignlabs.com"&gt;&lt;code&gt;http://dnssec-debugger.verisignlabs.com&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;a href="http://dnsviz.net/"&gt;&lt;code&gt;http://dnsviz.net/&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The first tool is a simple one, while the second gives you a visual
representation of things. Here is a screenshot from the first tool.&lt;/p&gt;
&lt;p&gt;Notice the lines I&amp;rsquo;ve marked. The first one mentions the Key tag value
(62910) of the DS record while the second one key id (40400) of the
DNSKEY record which holds the ZSK (Zone Signing Key).&lt;/p&gt;
&lt;h2 id="modifying-zone-records"&gt;Modifying Zone Records&lt;/h2&gt;
&lt;p&gt;Each time you edit the zone by adding or removing records, it has to be
signed to make it work. So we will create a script for this so that we
don&amp;rsquo;t have to type long commands every time.&lt;/p&gt;
&lt;p&gt;# nano /usr/sbin/zonesigner.sh&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="nv"&gt;PDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="nv"&gt;ZONEDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/var/lib/bind&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;#Debian location of your zone files&lt;/span&gt;
&lt;span class="nv"&gt;ZONE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;span class="nv"&gt;ZONEFILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;
&lt;span class="nv"&gt;DNSSERVICE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bind9&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;#On CentOS/Fedora replace this with &amp;quot;named&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$ZONEDIR&lt;/span&gt;
&lt;span class="nv"&gt;SERIAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;/usr/sbin/named-checkzone &lt;span class="nv"&gt;$ZONE&lt;/span&gt; &lt;span class="nv"&gt;$ZONEFILE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; egrep -ho &lt;span class="s1"&gt;&amp;#39;[0-9]{10}&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt; sed -i &lt;span class="s1"&gt;&amp;#39;s/&amp;#39;&lt;/span&gt;&lt;span class="nv"&gt;$SERIAL&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;$((&lt;/span&gt;&lt;span class="nv"&gt;$SERIAL&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="k"&gt;))&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$ZONEFILE&lt;/span&gt;
/usr/sbin/dnssec-signzone -A -3 &lt;span class="k"&gt;$(&lt;/span&gt;head -c &lt;span class="m"&gt;1000&lt;/span&gt; /dev/random &lt;span class="p"&gt;|&lt;/span&gt; sha1sum &lt;span class="p"&gt;|&lt;/span&gt; cut -b &lt;span class="m"&gt;1&lt;/span&gt;-16&lt;span class="k"&gt;)&lt;/span&gt; -N increment -o &lt;span class="nv"&gt;$1&lt;/span&gt; -t &lt;span class="nv"&gt;$2&lt;/span&gt;
service &lt;span class="nv"&gt;$DNSSERVICE&lt;/span&gt; reload
&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$PDIR&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Save the file and make it executable.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;chmod +x /usr/sbin/zonesigner.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Whenever you want to add or remove records, edit the example.com.zone
and NOT the .signed file. This file also takes care of incrementing the
serial value, so you needn&amp;rsquo;t do it each time you edit the file. After
editing it run the script by passing the domain name and zone filename
as parameters.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   root@master# zonesigner.sh example.com example.com.zone
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You do not have to do anything on the slave nameserver as the
incremented serial will ensure the zone if transferred and updated.&lt;/p&gt;
&lt;h2 id="securing-the-dnssec-setup-from-zone-walking"&gt;Securing the DNSSEC setup from Zone Walking&lt;/h2&gt;
&lt;p&gt;Zone Walking is a technique used to find all the Resource Records of a
zone by querying the NSEC (Next-Secure) record. NSEC3 was released which
&amp;ldquo;hashed&amp;rdquo; this information using a salt. Recall the dnssec-signzone
command in which we specified a -3 option followed by another elaborate
command to generate a random string. This is the salt which can be found
using the following dig query.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dig NSEC3PARAM example.com. @master.example.com. +short
   &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt; 7CBAA916230368F2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;All this makes zone walking difficult but not impossible. A determined
hacker using rainbow tables can break the hash, though it&amp;rsquo;ll take a long
time. To prevent this we can recompute this salt at regular intervals,
which makes a hacker&amp;rsquo;s attempt futile as there is a new salt before
he/she can find the hash with the old salt. Create a cron job to do this
for you using the zonesigner.sh script we created previously. If you run
the cronjob as root you don&amp;rsquo;t have to worry about file ownership. Or
else make sure the user under whom you&amp;rsquo;re placing the cron has write
permission on the zone directory and read permission on the private keys
(Kexample.com.*.private).&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;crontab -e
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And insert in the following:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    0 0 */3 * * /usr/sbin/zonesigner.sh example.com example.com.zone
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will sign the zone every 3 days and as a result a new salt will be
generated. You&amp;rsquo;ll also receive an email containing the output of the
dnssec-signzone command.&lt;/p&gt;</content><category term="dnssec"></category><category term="bind9"></category><category term="dns"></category></entry><entry><title>Change password to MacOS File Vault</title><link href="/egberts/articles/change-password-to-macos-file-vault.html" rel="alternate"></link><published>2018-07-07T16:43:00-04:00</published><updated>2018-07-07T16:43:00-04:00</updated><author><name></name></author><id>tag:None,2018-07-07:/egberts/articles/change-password-to-macos-file-vault.html</id><summary type="html">&lt;p&gt;How to change FileVault password. This is useful when wanting to have
two separate passwords; one for the disk and one for the login account.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://support.apple.com/en-us/HT202842"&gt;https://support.apple.com/en-us/HT202842&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apple.stackexchange.com/questions/125087/how-can-i-have-one-password-for-filevalue-2-pre-boot-password-and-another-for/125120#125120"&gt;https://apple.stackexchange.com/questions/125087/how-can-i-have-one-password-for-filevalue-2-pre-boot-password-and-another-for/125120#125120&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;p&gt;How to change FileVault password. This is useful when wanting to have
two separate passwords; one for the disk and one for the login account.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://support.apple.com/en-us/HT202842"&gt;https://support.apple.com/en-us/HT202842&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apple.stackexchange.com/questions/125087/how-can-i-have-one-password-for-filevalue-2-pre-boot-password-and-another-for/125120#125120"&gt;https://apple.stackexchange.com/questions/125087/how-can-i-have-one-password-for-filevalue-2-pre-boot-password-and-another-for/125120#125120&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="macos"></category><category term="password"></category><category term="file vault"></category></entry><entry><title>Hardening Signal App</title><link href="/egberts/articles/hardening-signal-app.html" rel="alternate"></link><published>2018-07-07T16:21:00-04:00</published><updated>2018-07-07T16:21:00-04:00</updated><author><name></name></author><id>tag:None,2018-07-07:/egberts/articles/hardening-signal-app.html</id><summary type="html">&lt;p&gt;How to hardened Signal app:
&lt;a href="https://medium.com/@mshelton/signal-for-beginners-c6b44f76a1f0"&gt;https://medium.com/@mshelton/signal-for-beginners-c6b44f76a1f0&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;How to hardened Signal app:
&lt;a href="https://medium.com/@mshelton/signal-for-beginners-c6b44f76a1f0"&gt;https://medium.com/@mshelton/signal-for-beginners-c6b44f76a1f0&lt;/a&gt;&lt;/p&gt;</content><category term="hardening"></category><category term="signal app"></category></entry><entry><title>Bro Core Engine</title><link href="/egberts/articles/bro-core-engine.html" rel="alternate"></link><published>2018-05-16T14:20:12-04:00</published><updated>2018-05-16T14:20:12-04:00</updated><author><name></name></author><id>tag:None,2018-05-16:/egberts/articles/bro-core-engine.html</id><summary type="html">&lt;p&gt;How to debug the Core Engine of Bro-IDS.&lt;/p&gt;</summary><content type="html">&lt;h2 id="debugging-bro-core-engine"&gt;Debugging Bro Core Engine&lt;/h2&gt;
&lt;p&gt;This page covers how to debug the Core Engine of Bro. 
1. Viewing BroString Object 
2. Breakpoint an Analyzer function&lt;/p&gt;
&lt;h2 id="viewing-brostring-object"&gt;Viewing BroString Object&lt;/h2&gt;
&lt;p&gt;To view a BroString object, enter at GDB prompt:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(gdb) print content_subtype_str-&amp;gt;CheckString()
$14 = 0x2a51e60 &amp;quot;MIXED&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="breakpoint-an-analyzer-function"&gt;Breakpoint an Analyzer function&lt;/h2&gt;
&lt;p&gt;Setting a breakpoint on a C++ function is similar to setting a
breakpoint on a C function. However C++ is polymorphic, so you must tell
break which version of the function you want to break on (even if there
is only one). To do this, you tell it the list of argument types.&lt;/p&gt;
&lt;p&gt;GDB also assist in auto-completing your desired function name via TAB
keys, provided the namespace(s) are correct.&lt;/p&gt;
&lt;p&gt;To add a breakpoint to a function deep in the Analyzer part of Bro Core
Engine, add the analyzer::mime:: namespace to its full function name:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(gdb) break analyzer::mime::MIME_Entity::ParseFieldParameters
&lt;/pre&gt;&lt;/div&gt;</content><category term="bro"></category><category term="debugging"></category></entry><entry><title>Bro messaging</title><link href="/egberts/articles/bro-messaging.html" rel="alternate"></link><published>2018-05-16T14:16:28-04:00</published><updated>2018-05-16T14:16:28-04:00</updated><author><name></name></author><id>tag:None,2018-05-16:/egberts/articles/bro-messaging.html</id><summary type="html">&lt;p&gt;Enabling debug messages of Bro script&lt;/p&gt;</summary><content type="html">&lt;h2 id="debugging-bro-message-queues"&gt;Debugging Bro message queues&lt;/h2&gt;
&lt;p&gt;To enable debugging Bro message queues, insert the following into the
local.bro script in /usr/share/bro/sfa/policy directory. This is also
useful for troubleshooting script-land memory leakage.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;@load misc/profiling&lt;/span&gt;
&lt;span class="k"&gt;redef&lt;/span&gt; &lt;span class="n"&gt;Log&lt;/span&gt;&lt;span class="nn"&gt;::&lt;/span&gt;&lt;span class="n"&gt;enable_local_logging&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;redef&lt;/span&gt; &lt;span class="n"&gt;profiling_interval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="n"&gt;secs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;redef&lt;/span&gt; &lt;span class="n"&gt;expensive_profiling_multiple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Bro UNIX server created a prof.log file. As a UNIX server, prof.log are
found in each of the /var/spool/bro/&lt;strong&gt;&lt;em&gt;bro-process-type&lt;/em&gt;&lt;/strong&gt; directory.
Running Bro as standalone puts prof.log in the current working
directory.&lt;/p&gt;
&lt;p&gt;Example output of prof.log:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;------------------------&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;Command&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;bro&lt;/span&gt; &lt;span class="nt"&gt;-C&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="nt"&gt;-B&lt;/span&gt; &lt;span class="nt"&gt;threading&lt;/span&gt; &lt;span class="nt"&gt;-t&lt;/span&gt; &lt;span class="nt"&gt;trace&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;log&lt;/span&gt; &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nt"&gt;redef&lt;/span&gt;
    &lt;span class="nt"&gt;profiling_interval&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;30secs&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;redef&lt;/span&gt; &lt;span class="nt"&gt;expensive_profiling_multiple&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt; &lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;redef&lt;/span&gt; &lt;span class="nt"&gt;Log&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nd"&gt;enable_local_logging&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;T&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;redef&lt;/span&gt;
    &lt;span class="nt"&gt;Reporter&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nd"&gt;info_to_stderr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="nt"&gt;T&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;redef&lt;/span&gt; &lt;span class="nt"&gt;Reporter&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nd"&gt;errors_to_stderr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;T&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;redef&lt;/span&gt; &lt;span class="nt"&gt;Reporter&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nd"&gt;warnings_to_stderr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;T&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;-r&lt;/span&gt; &lt;span class="nt"&gt;ftp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;pcap&lt;/span&gt;
    &lt;span class="nt"&gt;sfa&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;policy&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;local&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;bro&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;------------------------&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;Memory&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;total&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;30160K&lt;/span&gt; &lt;span class="nt"&gt;total_adj&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0K&lt;/span&gt; &lt;span class="nt"&gt;malloced&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;23126K&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;Run-time&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;user&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;0&lt;/span&gt; &lt;span class="nt"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;0&lt;/span&gt; &lt;span class="nt"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;0&lt;/span&gt; &lt;span class="nt"&gt;real&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;0&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;Conns&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;total&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="nt"&gt;ext&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="nt"&gt;mem&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0K&lt;/span&gt; &lt;span class="nt"&gt;avg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;-nan&lt;/span&gt; &lt;span class="nt"&gt;table&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;1K&lt;/span&gt; &lt;span class="nt"&gt;connvals&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0K&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;Conns&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;tcp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="nt"&gt;udp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="nt"&gt;icmp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;TCP-States&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;        &lt;span class="nt"&gt;Inact&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  &lt;span class="nt"&gt;Syn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;    &lt;span class="nt"&gt;SA&lt;/span&gt;      &lt;span class="nt"&gt;Part&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;   &lt;span class="nt"&gt;Est&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;    &lt;span class="nt"&gt;Fin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;    &lt;span class="nt"&gt;Rst&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;TCP-States&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;Inact&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;TCP-States&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;Syn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;TCP-States&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;SA&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;TCP-States&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;Part&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;TCP-States&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;Est&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;TCP-States&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;Fin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;TCP-States&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;Rst&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;Connections&lt;/span&gt; &lt;span class="nt"&gt;expired&lt;/span&gt; &lt;span class="nt"&gt;due&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;inactivity&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;0&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;Total&lt;/span&gt; &lt;span class="nt"&gt;reassembler&lt;/span&gt; &lt;span class="nt"&gt;data&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;0K&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;RuleMatcher&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;matchers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt; &lt;span class="nt"&gt;dfa_states&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt; &lt;span class="nt"&gt;ncomputed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="nt"&gt;mem&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;2K&lt;/span&gt;
    &lt;span class="nt"&gt;avg_nfa_states&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;29&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;Timers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;19&lt;/span&gt; &lt;span class="nt"&gt;max&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;19&lt;/span&gt; &lt;span class="nt"&gt;mem&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;1K&lt;/span&gt; &lt;span class="nt"&gt;lag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;00s&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;DNS_Mgr&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="nt"&gt;succesful&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="nt"&gt;failed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="nt"&gt;pending&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="nt"&gt;cached_hosts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;
    &lt;span class="nt"&gt;cached_addrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;Triggers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;total&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="nt"&gt;pending&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;Threads&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;4&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt;   &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;spool&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;bro&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;bv_intel&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;bv_intel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;txt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nd"&gt;READER_ASCII&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt; &lt;span class="nt"&gt;out&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;
    &lt;span class="nt"&gt;pending&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;queue&lt;/span&gt; &lt;span class="nt"&gt;r&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;w&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="nt"&gt;in&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt; &lt;span class="nt"&gt;out&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;Global_sizes&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;100k&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;0K&lt;/span&gt;
    &lt;span class="nt"&gt;ProfileTimer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;1&lt;/span&gt;
    &lt;span class="nt"&gt;ScheduleTimer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;2&lt;/span&gt;
    &lt;span class="nt"&gt;TableValTimer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;16&lt;/span&gt;
    &lt;span class="nt"&gt;packet_filter&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;Log&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nd"&gt;WRITER_ASCII&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt; &lt;span class="nt"&gt;out&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="nt"&gt;pending&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;queue&lt;/span&gt; &lt;span class="nt"&gt;r&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;w&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;
    &lt;span class="nt"&gt;out&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nt"&gt;packet_filter&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;Log&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nd"&gt;WRITER_ASCII&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt; &lt;span class="nt"&gt;out&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="nt"&gt;pending&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;queue&lt;/span&gt; &lt;span class="nt"&gt;r&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;w&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;
    &lt;span class="nt"&gt;out&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nt"&gt;loaded_scripts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;Log&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nd"&gt;WRITER_ASCII&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt; &lt;span class="nt"&gt;out&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="nt"&gt;pending&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;queue&lt;/span&gt; &lt;span class="nt"&gt;r&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;w&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;
    &lt;span class="nt"&gt;out&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nt"&gt;reporter&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;Log&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nd"&gt;WRITER_ASCII&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt; &lt;span class="nt"&gt;out&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="nt"&gt;pending&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;queue&lt;/span&gt; &lt;span class="nt"&gt;r&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;w&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt; &lt;span class="nt"&gt;out&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;Global_sizes&lt;/span&gt; &lt;span class="nt"&gt;total&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1173K&lt;/span&gt;
    &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;000000&lt;/span&gt; &lt;span class="nt"&gt;Total&lt;/span&gt; &lt;span class="nt"&gt;number&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="nt"&gt;table&lt;/span&gt; &lt;span class="nt"&gt;entries&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1648&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;1691&lt;/span&gt;
    &lt;span class="nt"&gt;SSL&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nd"&gt;cipher_desc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;99K&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;351&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;351&lt;/span&gt; &lt;span class="nt"&gt;entries&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nt"&gt;SSL&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nd"&gt;root_certs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;208K&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;147&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;147&lt;/span&gt; &lt;span class="nt"&gt;entries&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nt"&gt;FTP&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nd"&gt;cmd_reply_code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;48K&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;325&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;325&lt;/span&gt; &lt;span class="nt"&gt;entries&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nt"&gt;Weird&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nd"&gt;actions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;36K&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;162&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;162&lt;/span&gt; &lt;span class="nt"&gt;entries&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Please note the (#queue r/w: in=1/1 out=0/1) by
bv_intel.txt/WRITER_ASCII: this means one message was inserted into
the input queue and one message was removed from the same input queue,
while only one message was written to the output queue, but nobody has
retrieved it yet.&lt;/p&gt;
&lt;p&gt;The prof.log output continues on (note the timestamp):&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    1413471640.952530 ------------------------
    1413471640.952530 Memory: total=30160K total_adj=0K malloced: 23127K
    1413471640.952530 Run-time: user+sys=0.0 user=0.0 sys=0.0 real=0.0
    1413471640.952530 Conns: total=0 current=0/0 ext=0 mem=0K avg=-nan table=1K
    connvals=0K
    1413471640.952530 Conns: tcp=0/0 udp=0/0 icmp=0/0
    1413471640.952530 TCP-States:        Inact.  Syn.    SA      Part.   Est.
    Fin.    Rst.
    1413471640.952530 TCP-States:Inact.
    1413471640.952530 TCP-States:Syn.
    1413471640.952530 TCP-States:SA
    1413471640.952530 TCP-States:Part.
    1413471640.952530 TCP-States:Est.
    1413471640.952530 TCP-States:Est.
    1413471640.952530 TCP-States:Fin.
    1413471640.952530 TCP-States:Rst.
    1413471640.952530 Connections expired due to inactivity: 0
    1413471640.952530 Total reassembler data: 0K
    1413471640.952530 RuleMatcher: matchers=2 dfa_states=2 ncomputed=0 mem=2K
    avg_nfa_states=29
    1413471640.952530 Timers: current=18 max=19 mem=1K lag=1413471639.95s
    1413471640.952530 DNS_Mgr: requests=0 succesful=0 failed=0 pending=0
    cached_hosts=0 cached_addrs=0
    1413471640.952530 Triggers: total=0 pending=0
    1413471640.952530         ScheduleTimer = 2
    1413471640.952530         TableValTimer = 16
    1413471640.952530 Threads: current=4
    1413471640.952530   /var/spool/bro/bv_intel/bv_intel.txt/Input::READER_ASCII
    in=1 out=1 pending=0/0 (#queue
    r/w: in=1/1 out=1/1)
    1413471640.952530
    1413471640.952530
    1413471640.952530
    1413471640.952530 Global_sizes &amp;gt; 100k: 0K
    packet_filter/Log::WRITER_ASCII in=1 out=0 pending=0/0 (#queue r/w: in=1/1
    out=0/0)
    loaded_scripts/Log::WRITER_ASCII in=1 out=0 pending=0/0 (#queue r/w: in=1/1
    out=0/0)
    reporter/Log::WRITER_ASCII in=1 out=0 pending=0/0 (#queue r/w: in=1/1 out=0/0)
    1413471640.952530
    1413471640.952530
    1413471640.952530
    1413471640.952530
    1413471640.952530 Global_sizes total: 1173K
    1413471640.952530 Total number of table entries: 1648/1691
    1413471671.003551 ------------------------
    1413471671.003551 Memory: total=30160K total_adj=0K malloced: 23329K
    1413471671.003551 Run-time: user+sys=0.1 user=0.0 sys=0.0 real=0.1
    1413471671.003551 Conns: total=14 current=9/9 ext=0 mem=48488K avg=5387.6
    table=50K connvals=35K
    1413471671.003551 Conns: tcp=7/8 udp=2/6 icmp=0/0
    1413471671.003551 TCP-States:        Inact.  Syn.    SA      Part.   Est.
    Fin.    Rst.
    1413471671.003551 TCP-States:Inact.
    1413471671.003551 TCP-States:Syn.
    1413471671.003551 TCP-States:SA
    SSL::cipher_desc = 99K (351/351 entries)
    SSL::root_certs = 208K (147/147 entries)
    FTP::cmd_reply_code = 48K (325/325 entries)
    Weird::actions = 36K (162/162 entries)
    1413471671.003551 TCP-States:Part.
    1413471671.003551 TCP-States:Est.
    1413471671.003551 TCP-States:Fin.
    1413471671.003551 TCP-States:Rst.
    1413471671.003551 Connections expired due to inactivity: 0
    1413471671.003551 Total reassembler data: 0K
    1413471671.003551 RuleMatcher: matchers=2 dfa_states=40 ncomputed=150 mem=62K
    avg_nfa_states=1
    1413471671.003551 Timers: current=36 max=47 mem=2K lag=0.05s
    1413471671.003551 DNS_Mgr: requests=0 succesful=0 failed=0 pending=0
    cached_hosts=0 cached_addrs=0
    1413471671.003551 Triggers: total=0 pending=0
    1413471671.003551         ConnectionInactivityTimer = 11
    1413471671.003551         FileAnalysisInactivityTimer = 1
    ...
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="analyzing-proflog"&gt;Analyzing prof.log&lt;/h2&gt;
&lt;p&gt;Intel::data_store size should remain unchanged during leakage/polling
periods. (Note: It is proportional to the size of bv_intel.txt file.)&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Global_sizes &amp;gt; 100k: 0K
               Communication::connected_peers = 2556K (18/18 entries)
               [FTP::cmd_reply_code](FTP::cmd_reply_code) = 48K (325/325 entries)
               Cluster::worker2manager_events = 155K
               Weird::actions = 37K (162/162 entries)
               Intel::min_data_store = 5386K
               Intel::data_store = 33904K
               SSL::cipher_desc = 101K (351/351 entries)
               Communication::nodes = 2588K (20/20 entries)
               SSL::root_certs = 209K (147/147 entries)
Global_sizes total: 45812K
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Also Global_sizes total should remain unchanged during all statistical
collection periods after initialization.&lt;/p&gt;
&lt;p&gt;READER_ASCII would not leak if it had a perfect one-to-one read/write
with input portion of Intel reader queue.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/var/spool/bro/bv_intel/bv_intel.txt/Input::READER_ASCII in=151 out=76527
pending=0/0 (\#queue r/w: in=151/151 out=76527/76527)

Total memory should be closely paid attention to for Bro Core Engine
leakage as it did in this 20-second example:

    Memory: total=32608K total_adj=0K malloced: 32478K
    ...
    Memory: total=123236K total_adj=90628K malloced: 78143K
    ...
    Memory: total=143088K total_adj=110480K malloced: 87989K
    ...
    Memory: total=164320K total_adj=131712K malloced: 108040K
    ...
    Memory: total=177040K total_adj=144432K malloced: 132104K
    ...
    Memory: total=177040K total_adj=144432K malloced: 133631K
    ...
    Memory: total=177040K total_adj=144432K malloced: 137221K
    ...
    Memory: total=177040K total_adj=144432K malloced: 139141K
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Checkpointing of memory structures between Bro workers were less than 1K
every 20 seconds as denoted by this prof.log output:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    Conns: total=78555 current=1622/1622 ext=0 mem=0K avg=0.0 table=0K connvals=0K
    ...
    Conns: total=78555 current=1622/1622 ext=0 mem=0K avg=0.0 table=1K connvals=0K
    ...
    Conns: total=78555 current=1622/1622 ext=0 mem=0K avg=0.0 table=0K connvals=0K
    ...
&lt;/pre&gt;&lt;/div&gt;</content><category term="Bro"></category><category term="API"></category></entry><entry><title>Machine Learning Checklist</title><link href="/egberts/articles/machine-learning-checklist.html" rel="alternate"></link><published>2018-02-21T11:49:00-05:00</published><updated>2018-02-21T11:49:00-05:00</updated><author><name></name></author><id>tag:None,2018-02-21:/egberts/articles/machine-learning-checklist.html</id><summary type="html">&lt;h2 id="system-architecture"&gt;System architecture&lt;/h2&gt;
&lt;p&gt;Here we assume a system architecture that extracts features from raw
input data, feeds them into a training system that produces a model,
which is then read into a serving system to make inferences and affect
the user-facing behavior of the system. We also assume typical software
engineering …&lt;/p&gt;</summary><content type="html">&lt;h2 id="system-architecture"&gt;System architecture&lt;/h2&gt;
&lt;p&gt;Here we assume a system architecture that extracts features from raw
input data, feeds them into a training system that produces a model,
which is then read into a serving system to make inferences and affect
the user-facing behavior of the system. We also assume typical software
engineering practice such as a source repository, continuous automated
test framework, and an ability to conduct experiments comparing
different system versions.&lt;/p&gt;
&lt;h2 id="related-work"&gt;Related work&lt;/h2&gt;
&lt;p&gt;Software testing is well studied, as is machine learning, but their
intersection has been less well explored in the literature. [ 4 ]
review testing for scientific software more generally, and cite a number
of articles such as [ 5 ], who present an approach for testing ML
algorithms. These ideas are a useful complement for the tests we
present, which are focused on testing the use of ML in a production
system rather than just the correctness of the ML algorithm per se.&lt;/p&gt;
&lt;h2 id="checklist"&gt;Checklist&lt;/h2&gt;
&lt;h3 id="tests-for-features-and-data"&gt;Tests for Features and Data&lt;/h3&gt;
&lt;p&gt;Machine learning systems differ from traditional software-based systems
in that the behavior of ML systems is not specified directly in code but
is learned from data. Therefore, while traditional software can rely on
unit tests and integration tests of the code, here we attempt to add a
sufficient set of tests of the data.&lt;/p&gt;
&lt;h4 id="test-that-the-distributions-of-each-feature-match-your-expectations"&gt;Test that the distributions of each feature match your expectations.&lt;/h4&gt;
&lt;p&gt;One example might be to test that Feature A takes on values 1 to 5, or
that the two most common values of Feature B are &amp;ldquo;Harry&amp;rdquo; and &amp;ldquo;Potter&amp;rdquo;
and they account for 10% of all values. This test can fail due to real
external changes, which may require changes in your model.&lt;/p&gt;
&lt;h4 id="test-the-relationship-between-each-feature-and-the-target-and-the-pairwise-correlations-between-individual-signals"&gt;Test the relationship between each feature and the target, and the pairwise correlations between individual signals.&lt;/h4&gt;
&lt;p&gt;It is important to have a thorough understanding of the individual
features used in a given model; this is a minimal set of tests, more
exploration may be needed to develop a full understanding. These tests
may be run by computing correlation coefficients, by training models
with one or two features, or by training a set of models that each have
one of k features individually removed.&lt;/p&gt;
&lt;h4 id="test-the-cost-of-each-feature"&gt;Test the cost of each feature.&lt;/h4&gt;
&lt;p&gt;The costs of a feature may include added inference latency and RAM
usage, more upstream data dependencies, and additional expected
instability incurred by relying on that feature. Consider whether this
cost is worth paying when traded off against the provided improvement in
model quality.&lt;/p&gt;
&lt;h4 id="test-that-a-model-does-not-contain-any-features-that-have-been-manually-determined-as-unsuitable-for-use"&gt;Test that a model does not contain any features that have been manually determined as unsuitable for use.&lt;/h4&gt;
&lt;p&gt;A feature might be unsuitable when it’s been discovered to be
unreliable, overly expensive, etc. Tests are needed to ensure that such
features are not accidentally included (e.g. via copy-paste) into new
models.&lt;/p&gt;
&lt;h4 id="test-that-your-system-maintains-privacy-controls-across-its-entire-data-pipeline"&gt;Test that your system maintains privacy controls across its entire data pipeline.&lt;/h4&gt;
&lt;p&gt;While strict access control is typically maintained on raw data, ML
systems often export and transform that data during training. Test to
ensure that access control is appropriately restricted across the entire
pipeline.&lt;/p&gt;
&lt;h4 id="test-the-calendar-time-needed-to-develop-and-add-a-new-feature-to-the-production-model"&gt;Test the calendar time needed to develop and add a new feature to the production model.&lt;/h4&gt;
&lt;p&gt;The faster a team can go from a feature idea to it running in
production, the faster it can both improve the system and respond to
external changes.&lt;/p&gt;
&lt;h4 id="test-all-code-that-creates-input-features-both-in-training-and-serving"&gt;Test all code that creates input features, both in training and serving.&lt;/h4&gt;
&lt;p&gt;It can be tempting to believe feature creation code is simple enough to
not need unit tests, but this code is crucial for correct behavior and
so its continued quality is vital.&lt;/p&gt;
&lt;h3 id="tests-for-model-development"&gt;Tests for Model Development&lt;/h3&gt;
&lt;p&gt;While the field of software engineering has developed a full range of
best practices for developing reliable software systems, the set of
standards and practices for developing ML models in a rigorous fashion
is still developing. It can be all too tempting to rely on a
single-number summary metric to judge performance, perhaps masking
subtle areas of unreliability. Careful testing is needed to search for
potential lurking issues.&lt;/p&gt;
&lt;h4 id="test-that-every-model-specification-undergoes-a-code-review-and-is-checked-in-to-a-repository"&gt;Test that every model specification undergoes a code review and is checked in to a repository.&lt;/h4&gt;
&lt;p&gt;It can be tempting to avoid, but disciplined code review remains an
excellent method for avoiding silly errors and for enabling more
efficient incident response and debugging.&lt;/p&gt;
&lt;h4 id="test-the-relationship-between-offline-proxy-metrics-and-the-actual-impact-metrics"&gt;Test the relationship between offline proxy metrics and the actual impact metrics.&lt;/h4&gt;
&lt;p&gt;For example, how does a one-percent improvement in accuracy or AUC
translate into effects on metrics of user satisfaction, such as click
through rates? This can be measured in a small scale A/B experiment
using an intentionally degraded model.&lt;/p&gt;
&lt;h4 id="test-the-impact-of-each-tunable-hyperparameter"&gt;Test the impact of each tunable hyperparameter.&lt;/h4&gt;
&lt;p&gt;Methods such as a grid search or a more sophisticated hyperparameter
search strategy not only improve predictive performance, but also can
uncover hidden reliability issues. For example, it can be surprising to
observe the impact of massive increases in data parallelism on model
accuracy.&lt;/p&gt;
&lt;h4 id="test-the-effect-of-model-staleness"&gt;Test the effect of model staleness.&lt;/h4&gt;
&lt;p&gt;If predictions are based on a model trained yesterday versus last week
versus last year, what is the impact on the live metrics of interest?
All models need to be updated eventually to account for changes in the
external world; a careful assessment is important to guide such
decisions.&lt;/p&gt;
&lt;h4 id="test-against-a-simpler-model-as-a-baseline"&gt;Test against a simpler model as a baseline.&lt;/h4&gt;
&lt;p&gt;Regularly testing against a very simple baseline model, such as a linear
model with very few features, is an effective strategy both for
confirming the functionality of the larger pipeline and for helping to
assess the cost to benefit tradeoffs of more sophisticated techniques.&lt;/p&gt;
&lt;h4 id="test-model-quality-on-important-data-slices"&gt;Test model quality on important data slices.&lt;/h4&gt;
&lt;p&gt;Slicing a data set along certain dimensions of interest provides
fine-grained understanding of model performance. For example, important
slices might be users by country or movies by genre. Examining sliced
data avoids having fine-grained performance issues masked by a global
summary metric.&lt;/p&gt;
&lt;h4 id="test-the-model-for-implicit-bias"&gt;Test the model for implicit bias.&lt;/h4&gt;
&lt;p&gt;This may be viewed as an extension of examining important data slices,
and may reveal issues that can be root-caused and addressed. For
example, implicit bias might be induced by a lack of sufficient
diversity in the training data.&lt;/p&gt;
&lt;h3 id="tests-for-ml-infrastructure"&gt;Tests for ML Infrastructure&lt;/h3&gt;
&lt;p&gt;An ML system often relies on a complex pipeline rather than a single
running binary.&lt;/p&gt;
&lt;h4 id="test-the-reproducibility-of-training"&gt;Test the reproducibility of training.&lt;/h4&gt;
&lt;p&gt;Train two models on the same data, and observe any differences in
aggregate metrics, sliced metrics, or example-by-example predictions.
Large differences due to non-determinism can exacerbate debugging and
troubleshooting.&lt;/p&gt;
&lt;h4 id="unit-test-model-specification-code"&gt;Unit test model specification code.&lt;/h4&gt;
&lt;p&gt;Although model specifications may seem like “configuration”, such files
can have bugs and need to be tested. Useful assertions include testing
that training results in decreased loss and that a model can restore
from a checkpoint after a mid-training job crash.&lt;/p&gt;
&lt;h4 id="integration-test-the-full-ml-pipeline"&gt;Integration test the full ML pipeline.&lt;/h4&gt;
&lt;p&gt;A good integration test runs all the way from original data sources,
through feature creation, to training, and to serving. An integration
test should run both continuously as well as with new releases of models
or servers, in order to catch problems well before they reach
production.&lt;/p&gt;
&lt;h4 id="test-model-quality-before-attempting-to-serve-it"&gt;Test model quality before attempting to serve it.&lt;/h4&gt;
&lt;p&gt;Useful tests include testing against data with known correct outputs and
validating the aggregate quality, as well as comparing predictions to a
previous version of the model.&lt;/p&gt;
&lt;h4 id="test-that-a-single-example-or-training-batch-can-be-sent-to-the-model-and-changes-to-internal-state-can-be-observed-from-training-through-to-prediction"&gt;Test that a single example or training batch can be sent to the model, and changes to internal state can be observed from training through to prediction.&lt;/h4&gt;
&lt;p&gt;Observing internal state on small amounts of data is a useful debugging
strategy for issues like numerical instability.&lt;/p&gt;
&lt;h4 id="test-models-via-a-canary-process-before-they-enter-production-serving-environments"&gt;Test models via a canary process before they enter production serving environments.&lt;/h4&gt;
&lt;p&gt;Modeling code can change more frequently than serving code, so there is
a danger that an older serving system will not be able to serve a model
trained from newer code. This includes testing that a model can be
loaded into the production serving binaries and perform inference on
production input data at all. It also includes a canary process, in
which a new version is tested on a small trickle of live data.&lt;/p&gt;
&lt;h4 id="test-how-quickly-and-safely-a-model-can-be-rolled-back-to-a-previous-serving-version"&gt;Test how quickly and safely a model can be rolled back to a previous serving version.&lt;/h4&gt;
&lt;p&gt;A model “roll back” procedure is useful in cases where upstream issues
might result in unexpected changes to model quality. Being able to
quickly revert to a previous known-good state is as crucial with ML
models as with any other aspect of a serving system.&lt;/p&gt;
&lt;h3 id="monitoring-tests-for-ml"&gt;Monitoring Tests for ML&lt;/h3&gt;
&lt;p&gt;Monitoring is crucial for models that automatically incorporate new data
in a continual or ongoing fashion at training time, and is always needed
for models that serve predictions in an on-demand fashion.&lt;/p&gt;
&lt;h4 id="test-for-upstream-instability-in-features-both-in-training-and-serving"&gt;Test for upstream instability in features, both in training and serving&lt;/h4&gt;
&lt;p&gt;Upstream instability can create problems both at training and serving
(inference) time. Training time instability is especially problematic
when models are updated or retrained frequently. Serving time
instability can occur even when the models themselves remain static. As
examples, what alert would fire if one datacenter stops sending data?
What if an upstream signal provider did a major version upgrade?&lt;/p&gt;
&lt;h4 id="test-that-data-invariants-hold-in-training-and-serving-inputs"&gt;Test that data invariants hold in training and serving inputs.&lt;/h4&gt;
&lt;p&gt;For example, test if Feature A and Feature B should always have the same
number of non-zero values in each example, or that Feature C is always
in the range (0,100) or that class distribution is about 10:1.&lt;/p&gt;
&lt;h4 id="test-that-your-training-and-serving-features-compute-the-same-values"&gt;Test that your training and serving features compute the same values.&lt;/h4&gt;
&lt;p&gt;The codepaths that actually generate input features may differ for
training and inference time, due to tradeoffs for flexibility vs.
efficiency and other concerns. This is sometimes called
“training/serving skew” and requires careful monitoring to detect and
avoid.&lt;/p&gt;
&lt;h4 id="test-for-model-staleness"&gt;Test for model staleness.&lt;/h4&gt;
&lt;p&gt;For models that continually update, this means monitoring staleness
throughout the training pipeline, to be able to determine in the case of
a stale model where the pipeline has stalled. For example, if a daily
job stopped generating an important table, what alert would fire?&lt;/p&gt;
&lt;h4 id="test-for-nans-or-infinities-appearing-in-your-model-during-training-or-serving"&gt;Test for NaNs or infinities appearing in your model during training or serving.&lt;/h4&gt;
&lt;p&gt;Invalid numeric values can easily crop up in your learning model, and
knowing that they have occurred can speed diagnosis of the problem.&lt;/p&gt;
&lt;h4 id="test-for-dramatic-or-slow-leak-regressions-in-training-speed-serving-latency-throughput-or-ram-usage"&gt;Test for dramatic or slow-leak regressions in training speed, serving latency, throughput, or RAM usage.&lt;/h4&gt;
&lt;p&gt;The computational performance (as opposed to predictive quality) of an
ML system is often a key concern at scale, and should be monitored via
specialized regression testing. Dramatic regressions and slow
regressions over time may require different kinds of monitoring.&lt;/p&gt;
&lt;h4 id="test-for-regressions-in-prediction-quality-on-served-data"&gt;Test for regressions in prediction quality on served data.&lt;/h4&gt;
&lt;p&gt;For many systems, monitoring for nonzero bias can be an effective canary
for identifying real problems, though it may also result from changes in
the world.&lt;/p&gt;</content><category term="ml"></category><category term="checklist"></category></entry><entry><title>OpenLDAP Debugging Levels</title><link href="/egberts/articles/openldap-debugging-levels.html" rel="alternate"></link><published>2018-01-14T19:26:00-05:00</published><updated>2018-01-14T19:26:00-05:00</updated><author><name></name></author><id>tag:None,2018-01-14:/egberts/articles/openldap-debugging-levels.html</id><summary type="html">&lt;p&gt;olcLogLevel: &lt;level&gt; This directive specifies the level at which
debugging statements and operation statistics should be syslogged
(currently logged to the syslogd(8) LOG_LOCAL4 facility). You must have
configured OpenLDAP &amp;ndash;enable-debug (the default) for this to work
(except for the two statistics levels, which are always enabled). Log
levels may be …&lt;/level&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;olcLogLevel: &lt;level&gt; This directive specifies the level at which
debugging statements and operation statistics should be syslogged
(currently logged to the syslogd(8) LOG_LOCAL4 facility). You must have
configured OpenLDAP &amp;ndash;enable-debug (the default) for this to work
(except for the two statistics levels, which are always enabled). Log
levels may be specified as integers or by keyword. Multiple log levels
may be used and the levels are additive. To display what levels
correspond to what kind of debugging, invoke slapd with -d? or consult
the table below. The possible values for &lt;level&gt; are:&lt;/p&gt;
&lt;p&gt;Table 5.1: Debugging Levels

&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;Level&lt;/th&gt;
            &lt;th class="justtable"&gt; Keyword&lt;/th&gt;
            &lt;th class="justtable"&gt; Description&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;-1&lt;/td&gt;
                &lt;td class="justtable"&gt; any enable all debugging&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;0&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; no,  debugging&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;1&lt;/td&gt;
                &lt;td class="justtable"&gt; (0x1 trace)&lt;/td&gt;
                &lt;td class="justtable"&gt;  trace function calls&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;2&lt;/td&gt;
                &lt;td class="justtable"&gt; (0x2 packets)&lt;/td&gt;
                &lt;td class="justtable"&gt;    debug packet handling&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;4&lt;/td&gt;
                &lt;td class="justtable"&gt; (0x4 args)&lt;/td&gt;
                &lt;td class="justtable"&gt;   heavy trace debugging&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;8&lt;/td&gt;
                &lt;td class="justtable"&gt; (0x8 conns)&lt;/td&gt;
                &lt;td class="justtable"&gt;  connection management&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;16&lt;/td&gt;
                &lt;td class="justtable"&gt; (0x10 BER)&lt;/td&gt;
                &lt;td class="justtable"&gt;   print out packets sent and received&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;32&lt;/td&gt;
                &lt;td class="justtable"&gt; (0x20 filter)&lt;/td&gt;
                &lt;td class="justtable"&gt;    search filter processing&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;64&lt;/td&gt;
                &lt;td class="justtable"&gt; (0x40 config)&lt;/td&gt;
                &lt;td class="justtable"&gt;    configuration processing&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;128&lt;/td&gt;
                &lt;td class="justtable"&gt; (0x80 ACL)&lt;/td&gt;
                &lt;td class="justtable"&gt;   access control list processing&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;256&lt;/td&gt;
                &lt;td class="justtable"&gt; (0x100 stats)&lt;/td&gt;
                &lt;td class="justtable"&gt;    stats log connections/operations/results&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;512&lt;/td&gt;
                &lt;td class="justtable"&gt; (0x200 stats2)&lt;/td&gt;
                &lt;td class="justtable"&gt;   stats log entries sent&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;1024&lt;/td&gt;
                &lt;td class="justtable"&gt; (0x400 shell)&lt;/td&gt;
                &lt;td class="justtable"&gt;    print communication with shell backends&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;2048&lt;/td&gt;
                &lt;td class="justtable"&gt; (0x800 parse)&lt;/td&gt;
                &lt;td class="justtable"&gt;    print entry parsing debugging&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;16384&lt;/td&gt;
                &lt;td class="justtable"&gt; (0x4000 sync)&lt;/td&gt;
                &lt;td class="justtable"&gt;    syncrepl consumer processing&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;32768&lt;/td&gt;
                &lt;td class="justtable"&gt; (0x8000 none)&lt;/td&gt;
                &lt;td class="justtable"&gt;    only messages that get logged whatever log level is&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;&lt;/p&gt;</content><category term="debugging"></category><category term="openldap"></category></entry><entry><title>Bro-IDS HOWTO</title><link href="/egberts/articles/bro-ids-howto.html" rel="alternate"></link><published>2017-11-01T05:11:00-04:00</published><updated>2017-11-01T05:11:00-04:00</updated><author><name></name></author><id>tag:None,2017-11-01:/egberts/articles/bro-ids-howto.html</id><summary type="html">&lt;p&gt;How to use Bro IDS.&lt;/p&gt;</summary><content type="html">&lt;p&gt;How to use Bro&lt;/p&gt;
&lt;h2 id="repository"&gt;Repository&lt;/h2&gt;
&lt;p&gt;To obtain Bro:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/bro-ids/bro
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And their dependent packages&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo yum install mongodb-devel
sudo service bro start
sudo yum install cmake28
sudo alternatives --install /usr/bin/cmake cmake /usr/bin/cmake28 &lt;span class="m"&gt;90&lt;/span&gt;
sudo yum install python-devel
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="installation"&gt;Installation&lt;/h2&gt;
&lt;p&gt;Configure installation using default settings:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./configure --enable-debug &lt;span class="se"&gt;\&lt;/span&gt;
   --disable-broccoli --prefix&lt;span class="o"&gt;=&lt;/span&gt;/usr --conf-files-dir&lt;span class="o"&gt;=&lt;/span&gt;/etc/bro
make
sudo make install  &lt;span class="c1"&gt;# goes into /usr/local&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="bro-executable"&gt;Bro executable&lt;/h2&gt;
&lt;p&gt;Command line options General usage:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;bro &lt;span class="o"&gt;[&lt;/span&gt;option&lt;span class="o"&gt;]&lt;/span&gt; &amp;lt;bro-policy-script-file&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;
&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;option&lt;/th&gt;
            &lt;th class="justtable"&gt; long option&lt;/th&gt;
            &lt;th class="justtable"&gt; description&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;-a&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;--parse-only&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;Syntax check the policy script files. bro returns 0 if OK, 1 if syntax is invalid (new in Bro 2.3.1)&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;-b&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;--bare-mode&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; Don&amp;rsquo;t load scripts from the base/ directory. Useful in testing&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;-d&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;--debug-policy&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; Activate policy file debugger&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;-e&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;--exec&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; augment loaded policies by given script code&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;-f&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;--filter&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; tcpdump BPF filter (ie. &lt;code&gt;port 22 or udp and icmp&lt;/code&gt;) (see BFP syntax (external site)&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;-g&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;--dump-config&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; Dumps current configuration into the ./.state subdirectory&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;-i&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;--iface&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; Read from given network interface&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;-p&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;--prefix&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; Add given prefix to policy filepath resolution. This is also BRO_PREFIXES environment variable. Contains a list of subdirectories separated by a semicolon in which to search a policy file for. A @load .bro statement in the script would result in searching each BRO_PREFIXES subdirectories in the order given in which to load .bro script file from.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;-r&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;--readfile&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; PCAP file in which to read from (instead of from a network interface.)&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;--rulefile&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; Read rules from a given file. Useful for Signature RULE testing.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;-t&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;--tracefile&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; Outputs a trace execution of each line of each script file loaded&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;-N&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;--print-plugins&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; Print available plugins and exit&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;-N&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;--print-plugins&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; -print-plugins Print event and function available in each plugins (verbose)&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;code&gt;--debug-rules&lt;/code&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; Enable rule debugging. More about setting up the rule tables and less about rule matching.&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h3 id="bro-environment-variables"&gt;Bro Environment Variables&lt;/h3&gt;
&lt;p&gt;
&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;environment name &lt;/th&gt;
            &lt;th class="justtable"&gt; program &lt;/th&gt;
            &lt;th class="justtable"&gt; environment description&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;BROPATH&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; bro &lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;file search path for Bro policy script; A list of directory, each separated by semicolon, in which profile script files can be searched for.&amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;BRO_DNS_FAKE&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; bro &lt;/td&gt;
                &lt;td class="justtable"&gt; disable DNS lookups; Determine whether actual DNS lookup occurs or fake DNS data is returned; Valid value: &amp;lsquo;0&amp;rsquo; or &amp;lsquo;1&amp;rsquo;.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;BRO_SEED_FILE&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; bro &lt;/td&gt;
                &lt;td class="justtable"&gt; A filespec to a file containing seed number for the Bro&amp;rsquo;s init_random_seed(); useful for ensuring repeatable test runs.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;BRO_PREFIXES&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; bro &lt;/td&gt;
                &lt;td class="justtable"&gt; add given prefix to policy file resolution; this adds a full or relative directory path to try for each script file given&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;BRO_LOG_SUFFIX&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; bro &lt;/td&gt;
                &lt;td class="justtable"&gt; ASCII log file extension (currently set to .log)&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;BRO_PROFILER_FILE&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; bro &lt;/td&gt;
                &lt;td class="justtable"&gt; Full or relative filespec where to put the Bro profiler data in. A presense of this environment variable is the only way to turn this Bro profiler on.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;BRO_DISABLE_BROXYGEN&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; bro &lt;/td&gt;
                &lt;td class="justtable"&gt; Disable the Broxygen documentation&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;CLUSTER_NODE&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; bro &lt;/td&gt;
                &lt;td class="justtable"&gt; broctl&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;BROCTL_INSTALL_PREFIX&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; broctl &lt;/td&gt;
                &lt;td class="justtable"&gt; Where did broctl get installed to? (occurrs during bro install time)&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;BRO_ARG_TESTBRO&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; btest &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;NOTDEFINED&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; btest &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;TESTBRO&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; btest &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;BROCCOLI_CONFIG_FILE&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; broccoli &lt;/td&gt;
                &lt;td class="justtable"&gt; Broccoli configuration filespec&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h2 id="unix-signal-supported"&gt;UNIX Signal supported&lt;/h2&gt;
&lt;p&gt;
&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;Signal name &lt;/th&gt;
            &lt;th class="justtable"&gt; Signal description&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;SIGINT&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;From main process, calls bro_done() events. From main process, kills all threads if SIGINT received the 2nd time. Not used in threads. With -d mode, it caused Bro policy script debugger prompt to appear (requires an active STDIN/STDOUT terminal.)&amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;SIGTERM&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;From main process, calls bro_done() events. From main process, kills all threads if SIGTERM received the 2nd time. Main process may send to child thread for terminating RAW input reader(s). With -dmode, it caused Bro policy script debugger prompt to appear (requires an active STDIN/STDOUT terminal.)&amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;SIGSTOP&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;broctl sends STOP signal firstly to all Bro manager, proxy(s), and workers first time around, then KILL on 2nd try.&amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;SIGPIPE&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;With -d mode, this signal gets ignored. RAW input reader(s) inherits main process SIGPIPE in Raw::Execute().&amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;SIGHUP&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;During bro.init(), checkpoints persistent state.&amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;SIGALRM&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Main process uses it monitor for jammed or idle network interface(s). Thread uses to request stats to be sent. sig_handler_log()&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;SIGPROF&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;Thread uses it to request CPU usage statistics to be sent to SocketComm::Log (remote.log) via sig_handler_prof(). If compiled with DEBUG_COMMUNICATION (src/ChunkedIO.h), main process uses it to dump debug data of RemoteSerializer then terminate.&amp;rdquo;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;SIGKILL&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Propagates from thread/child to main process.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;SIGUSR1&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Used to be used for MPatrol debugging hooks. Not used in threads.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;SIGUSR2&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Used to be used for MPatrol debugging hooks. Not used in threads.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;SIGCONT&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Not used in threads.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;SIGQUIT&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; QUIT is sent in event of RemoteSerializer::FatalError() toward child process(es).&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;SIGCHLD&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Not used in threads.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;SIGSEGV&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Propagates from thread/child to main process.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;SIGBUS&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Propagates from thread/child to main process.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;&lt;code&gt;SIGFPE&lt;/code&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; Propagates from thread/child to main process.&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h2 id="external-references"&gt;External References&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Bro Documentation - &lt;a href="http://mailman.icsi.berkeley.edu/mailman/listinfo/bro-announce"&gt;http://mailman.icsi.berkeley.edu/mailman/listinfo/bro-announce&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bro Support - &lt;a href="https://www.bro.org/support/"&gt;https://www.bro.org/support/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bro Contacts - &lt;a href="https://www.bro.org/contact/"&gt;https://www.bro.org/contact/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="mailing-list"&gt;Mailing List&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;General - &lt;a href="http://mailman.icsi.berkeley.edu/mailman/listinfo/bro"&gt;http://mailman.icsi.berkeley.edu/mailman/listinfo/bro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Announcement - &lt;a href="http://mailman.icsi.berkeley.edu/mailman/listinfo/bro"&gt;http://mailman.icsi.berkeley.edu/mailman/listinfo/bro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Twitter - @Bro_IDS&lt;/li&gt;
&lt;li&gt;IRC - Freenode&amp;rsquo;s #bro channel&lt;/li&gt;
&lt;li&gt;Bro Community - &lt;a href="https://www.bro.org/community/"&gt;https://www.bro.org/community/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Index to all of Bro website - &lt;a href="https://www.bro.org/sphinx/genindex.html"&gt;https://www.bro.org/sphinx/genindex.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="Bro"></category></entry><entry><title>Comparison of Memory Allocation Methods</title><link href="/egberts/articles/comparison-of-memory-allocation-methods.html" rel="alternate"></link><published>2017-10-20T12:53:00-04:00</published><updated>2018-07-07T20:42:00-04:00</updated><author><name></name></author><id>tag:None,2017-10-20:/egberts/articles/comparison-of-memory-allocation-methods.html</id><summary type="html">&lt;p&gt;A comparison of memory allocation libraries.&lt;/p&gt;</summary><content type="html">&lt;h2 id="memory-allocation"&gt;Memory Allocation&lt;/h2&gt;
&lt;h3 id="problems"&gt;Problems&lt;/h3&gt;
&lt;p&gt;Limit Memory Allocation (if not necessary)&lt;/p&gt;
&lt;p&gt;Multithreaded programs often do not scale because the heap is a
bottleneck.&lt;/p&gt;
&lt;p&gt;When multiple threads simultaneously allocate or deallocate memory from
the allocator, the allocator will serialize them. Programs making
intensive use of the allocator actually slow down as the number of
processors increases.&lt;/p&gt;
&lt;p&gt;Malloc (libc) is the worse memory allocation API to use.&lt;/p&gt;
&lt;p&gt;Programs should avoid, if possible, allocating/deallocations memory too
often and in particular whenever a packet is received.&lt;/p&gt;
&lt;p&gt;In the Linux kernel there are available kernel/driver patches for
recycling skbuff (kernel memory used to store incoming/outgoing
packets).&lt;/p&gt;
&lt;p&gt;Using PF_RING (into the driver) for copying packets from the NIC to the
circular buffer without any memory allocation increases the capture
performance (around 10%) and reduces congestion issues.&lt;/p&gt;
&lt;h2 id="design-evolution"&gt;Design Evolution&lt;/h2&gt;
&lt;p&gt;Basic design of malloc() is to dynamically pre-allocate a pool of memory
from the OS in which applications can then take smaller pieces from.
malloc() is a standard API having a choice of different allocation
algorithms and to mitigate the expensive OS system calls (typically done
at program initialization time) during allocation of its system memory.
The first memory allocation scheme started with a stack-based memory
allocation.&lt;/p&gt;
&lt;p&gt;Next came the dynamic-based memory allocation scheme where linked-list
and bucket-heap mechanism are used to divide the private-heap using size
class approach.&lt;/p&gt;
&lt;p&gt;Soon, garbage collection algorithm introduced the initial backend of the
memory allocation scheme. Frontend covers the usual malloc() API, et.
al.&lt;/p&gt;
&lt;p&gt;In 2006, a third pool was introduced (after operating system memory pool
and library-based memory pool) called the &amp;ldquo;arena&amp;rdquo;. Arena is a
jemalloc-term and is intended to deal with different memory types such
as different-speed memory bank or NUMA-architecture, as well as memory
tied to specific to each of the multiple CPU core or even CPU infinity.&lt;/p&gt;
&lt;h3 id="frontend-evolution"&gt;Frontend Evolution&lt;/h3&gt;
&lt;p&gt;Frontend manages the memory being given to the application.&lt;/p&gt;
&lt;p&gt;Within the frontend of the memory allocation system, the evolution went
in the following order:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;link-list free space&lt;/li&gt;
&lt;li&gt;heap-bucket size classes (eliminating an object header)&lt;/li&gt;
&lt;li&gt;(Process) Owner encoding&lt;/li&gt;
&lt;li&gt;single core local allocation buffers (CLABs)&lt;/li&gt;
&lt;li&gt;Epoch encoding&lt;/li&gt;
&lt;li&gt;Large-size class memory block by direct mmap()&lt;/li&gt;
&lt;li&gt;Hazard pointers (safe memory reclamation for lock-free objects) (M.M. Michael, 2004)&lt;/li&gt;
&lt;li&gt;Arena memory pool&lt;/li&gt;
&lt;li&gt;thread-specific local allocation buffers (TLABs)&lt;/li&gt;
&lt;li&gt;constant-time modulo synchronization (early return to OS pool, or FreeBSD madvise call)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="backend-evolution"&gt;Backend Evolution&lt;/h3&gt;
&lt;p&gt;Backend of the memory allocation system manages the empty, straggling,
fragmented or no-longer used memory blocks back to the OS (thereby
reducing RSS).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pool semantic: Remote f-list encoding, using Treiber stack), (R.K.
    Treiber,&lt;/li&gt;
&lt;li&gt;1986)&lt;/li&gt;
&lt;li&gt;buddy algorithm&lt;/li&gt;
&lt;li&gt;binary buddy algorithm&lt;/li&gt;
&lt;li&gt;BIPOP Table (span-based allocator)(S. Schneider, 2006) aka local
    free list and&lt;/li&gt;
&lt;li&gt;remote free list&lt;/li&gt;
&lt;li&gt;segment queue (Quasi-linearizability, Y. Afek, 2010)&lt;/li&gt;
&lt;li&gt;multi-core distributed queue (A. Haas, 2013)&lt;/li&gt;
&lt;li&gt;k-FIFO queue (T.A. Henzinger, 2013)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="competition"&gt;Competition&lt;/h3&gt;
&lt;p&gt;There are better ones out there that does not worsen as more
threads/processes performs memory allocation system calls; they are
listed in best-to-good performance order​[seed with source]:&lt;/p&gt;
&lt;h2 id="comparison-of-malloc-design"&gt;Comparison of malloc design&lt;/h2&gt;
&lt;p&gt;
&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;name &lt;/th&gt;
            &lt;th class="justtable"&gt; Author &lt;/th&gt;
            &lt;th class="justtable"&gt; link &lt;/th&gt;
            &lt;th class="justtable"&gt; repo&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;ssmalloc &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;a href="https://apsys2012.kaist.ac.kr/media/papers/apsys2012-final27.pdf"&gt;whitepaper&lt;/a&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;jemalloc &lt;/td&gt;
                &lt;td class="justtable"&gt; Jason Evans (Facebook&lt;/td&gt;
                &lt;td class="justtable"&gt; FreeBSD) &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;a href="https://people.freebsd.org/~jasone/jemalloc/bsdcan2006/jemalloc.pdf"&gt;whitepaper&lt;/a&gt; , &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;sfmalloc &lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;SNU&lt;/td&gt;
                &lt;td class="justtable"&gt; Korea&amp;rdquo; &lt;/td&gt;
                &lt;td class="justtable"&gt; , &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;Streamflow &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;ptmalloc3 &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;nedmalloc-1.02 &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;lockless &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;ptmalloc2 &lt;/td&gt;
                &lt;td class="justtable"&gt; GNU Libc (dlmalloc-forked) &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;Hoard &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;libumem &lt;/td&gt;
                &lt;td class="justtable"&gt; SMI Solaris &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;mtmalloc &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;nedmalloc-1 &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;tcmalloc &lt;/td&gt;
                &lt;td class="justtable"&gt; Google &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;ctmalloc &lt;/td&gt;
                &lt;td class="justtable"&gt; Google Code &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;ptmalloc &lt;/td&gt;
                &lt;td class="justtable"&gt; GNU Libc (dlmalloc-forked) &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;dlmalloc &lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;Doug Lea&lt;/td&gt;
                &lt;td class="justtable"&gt; FreeBSD&amp;rdquo; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;a href="http://g.oswego.edu/dl/html/malloc.html"&gt;blog&lt;/a&gt;, &lt;a href="ftp://g.oswego.edu/pub/misc/malloc.c"&gt;FTP&lt;/a&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;pkmalloc &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;a href="http://www.freebsd.dk/pubs/malloc.pdf"&gt;whitepaper&lt;/a&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;phkmalloc &lt;/td&gt;
                &lt;td class="justtable"&gt; FreeBSD &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;malloc &lt;/td&gt;
                &lt;td class="justtable"&gt; GNU Libc (glibc) &lt;/td&gt;
                &lt;td class="justtable"&gt; &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h3 id="features-of-malloc"&gt;Features of malloc&lt;/h3&gt;
&lt;p&gt;Algorithms - best-first&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Wilderness Preservation - The ``wilderness&amp;rsquo;&amp;lsquo; chunk represents the space bordering the topmost address allocated from the system. Because it is at the border, it is the only chunk that can be arbitrarily extended (via sbrk in Unix) to be bigger than it is&lt;/li&gt;
&lt;li&gt;Deferred Coalescing - Rather than coalescing freed chunks, leave them at their current sizes in hopes that another request for the same size will come along soon. This saves a coalesce, a later split, and the time it would take to find a non-exactly-matching chunk to split.&lt;/li&gt;
&lt;li&gt;Preallocation - Rather than splitting out new chunks one-by one, pre-split many at once. This is normally faster than doing it one-at-a-time.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;name&lt;/th&gt;
            &lt;th class="justtable"&gt; Algorithm&lt;/th&gt;
            &lt;th class="justtable"&gt; Wilderness Preservation&lt;/th&gt;
            &lt;th class="justtable"&gt; Deferred coalescing free chunk&lt;/th&gt;
            &lt;th class="justtable"&gt; Pre-split free chunk&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;ssmalloc &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;jemalloc &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;sfmalloc &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;Streamflow &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;ptmalloc3 &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;nedmalloc-1.02 &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;lockless &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;ptmalloc2 &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;Hoard &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;libumem &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;mtmalloc &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;nedmalloc-1 &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;tcmalloc &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;ctmalloc &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;ptmalloc &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;dlmalloc &lt;/td&gt;
                &lt;td class="justtable"&gt; best-first &lt;/td&gt;
                &lt;td class="justtable"&gt; Y &lt;/td&gt;
                &lt;td class="justtable"&gt; Y &lt;/td&gt;
                &lt;td class="justtable"&gt; Y &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;pkmalloc &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;phkmalloc &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;malloc &lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
                &lt;td class="justtable"&gt;&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h2 id="unit-test-approaches"&gt;Unit Test Approaches&lt;/h2&gt;
&lt;p&gt;Malloc testing&lt;/p&gt;
&lt;p&gt;Test various patterns of memory allocation, aiming for various levels of
fragmentation. Perform the tests both in single-threaded and
multi-threaded environments.&lt;/p&gt;
&lt;p&gt;Checks for correctness:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None of the allocated blocks should overlap, and all should be successfully writable for the requested number of bytes.&lt;/li&gt;
&lt;li&gt;Allocations made by posix_memalign should be correctly aligned and freeable by free.&lt;/li&gt;
&lt;li&gt;Arguments to calloc which would overflow size_t when multiplied should result in allocation failure, not under-allocation.&lt;/li&gt;
&lt;li&gt;Allocating a block so large that subtracting two pointers within that block could overflow ptrdiff_t should not be possible.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further implementation-specific correctness checks: checking consistency
of bookkeeping information before and after each allocated block.&lt;/p&gt;
&lt;p&gt;Possible quality-of-implementation checks: Attempting to obtain
pathological fragmentation and allocation failure where it should not
happen.&lt;/p&gt;
&lt;p&gt;Corruption check: The attacker could overflow a buffer dynamically
allocated by malloc(3) and:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;overwrite the next contiguous boundary tag (&lt;a href="http://www.openwall.com/advisories/OW-002-netscape-jpeg.tx"&gt;Netscape browsers exploit&lt;/a&gt; or&lt;/li&gt;
&lt;li&gt;underflow such a buffer and overwrite the boundary tag stored just before &lt;a href="ftp://maxx.via.ecp.fr/dislocate/"&gt;Secure Locate exploit&lt;/a&gt;), or&lt;/li&gt;
&lt;li&gt;cause the vulnerable program to perform an incorrect free(3) call &lt;a href="http://www.synnergy.net/downloads/exploits/traceroute-exp.txt"&gt;LBML traceroute exploit&lt;/a&gt;, or&lt;/li&gt;
&lt;li&gt;freeing &lt;a href="ftp://maxx.via.ecp.fr/traceroot/"&gt;multiple frees&lt;/a&gt;, or&lt;/li&gt;
&lt;li&gt;overwrite a single byte of a boundary tag with a NUL byte (Sudo exploit)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Known malloc exploits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[http://www.phrack.org/issues.html?issue=57&amp;amp;id=8#article]&lt;/li&gt;
&lt;li&gt;[https://sploitfun.wordpress.com/2015/03/04/heap-overflow-using-malloc-maleficarum/]&lt;/li&gt;
&lt;li&gt;[http://phrack.org/issues/66/10.html]&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[https://sploitfun.wordpress.com/2015/02/10/understanding-glibc-malloc]&lt;/li&gt;
&lt;li&gt;Origin of the word malloc is &lt;a href="https://www.spinellis.gr/blog/20170914/"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;History of malloc is [ here].&lt;/li&gt;
&lt;li&gt;Heap and allocators&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cs.dartmouth.edu/~sergey/cs108/2015/heaps-and-allocators.txt"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://manybutfinite.com/post/anatomy-of-a-program-in-memory/"&gt;Anatomy of a Program in Memory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="comparison"></category><category term="malloc"></category></entry><entry><title>Firefox Sync</title><link href="/egberts/articles/firefox-sync.html" rel="alternate"></link><published>2017-05-20T16:59:00-04:00</published><updated>2017-05-20T16:59:00-04:00</updated><author><name></name></author><id>tag:None,2017-05-20:/egberts/articles/firefox-sync.html</id><summary type="html">&lt;p&gt;Firefox Sync is a built-in web browser add-in application and an&lt;/p&gt;</summary><content type="html">&lt;p&gt;application network protocol.&lt;/p&gt;
&lt;p&gt;Firefox Sync can synchronize between your own Firefox web browsers over
different devices for the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bookmarks&lt;/li&gt;
&lt;li&gt;Opened tabs&lt;/li&gt;
&lt;li&gt;Passwords&lt;/li&gt;
&lt;li&gt;History of browsed web pages&lt;/li&gt;
&lt;li&gt;Add-Ons (not available on mobile devices)&lt;/li&gt;
&lt;li&gt;Preferences (not available on mobile devices)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="application-program"&gt;Application Program&lt;/h2&gt;
&lt;h3 id="setup-by-gui"&gt;Setup by GUI&lt;/h3&gt;
&lt;h3 id="setup-by-command-line"&gt;Setup by command line&lt;/h3&gt;
&lt;p&gt;On the UNIX platform, Firefox stores its preference data settings in the
&lt;code&gt;$HOME/.mozilla/firefox&lt;/code&gt; directory. Check for your specific profile
subdirectory in the &lt;code&gt;$HOME/.mozilla/firefox/profiles.ini&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;Add the following lines to the &lt;code&gt;user.js&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Notice: Any and all changes toward ``preferences.js`` will be blown&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;away by the next Firefox upgrade.&lt;/p&gt;
&lt;p&gt;
&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;Column&lt;/th&gt;
            &lt;th class="justtable"&gt; Description&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;prefs.js:user_pref(&amp;ldquo;services.sync.username&amp;rdquo;&lt;/td&gt;
                &lt;td class="justtable"&gt; johndoe@example.com&amp;rdquo;), The Sync account name (maintained by Firefox Account Manager)&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;prefs.js:user_pref(&amp;ldquo;services.sync.declinedEngines&amp;rdquo;&lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;tabs,addons,passwords,history&amp;rdquo;);&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;A list of things to keep track of. Valid options are tabs&lt;/td&gt;
                &lt;td class="justtable"&gt; addons, passwords, history.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;prefs.js:user_pref(&amp;ldquo;services.sync.account&amp;rdquo;&lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;johndoe@example.com&amp;rdquo;);&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;prefs.js:user_pref(&amp;ldquo;services.sync.client.name&amp;rdquo;&lt;/td&gt;
                &lt;td class="justtable"&gt; &amp;ldquo;johndoe&amp;rsquo; Firefox on johndoe-macbook&amp;rdquo;);&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;To set up the&lt;/p&gt;
&lt;h2 id="firefox-sync-network-protocol"&gt;Firefox Sync Network Protocol&lt;/h2&gt;
&lt;h3 id="firefox-sync-server"&gt;Firefox Sync Server&lt;/h3&gt;
&lt;p&gt;To host a private server of Firefox Sync, see
[&lt;a href="https://mozilla-services.readthedocs.io/en/latest/howtos/run-sync-1.5.html%7CHowTo"&gt;https://mozilla-services.readthedocs.io/en/latest/howtos/run-sync-1.5.html%7CHowTo&lt;/a&gt;
Firefox Sync server]&lt;/p&gt;</content><category term="firefox"></category><category term="sync"></category></entry><entry><title>Pelican Markdown</title><link href="/egberts/articles/pelican-markdown.html" rel="alternate"></link><published>2017-01-20T05:00:00-05:00</published><updated>2018-11-25T06:15:00-05:00</updated><author><name></name></author><id>tag:None,2017-01-20:/egberts/articles/pelican-markdown.html</id><summary type="html">&lt;p&gt;Using Pelican Markdown files&lt;/p&gt;</summary><content type="html">&lt;h2 id="pelican-markdown"&gt;Pelican Markdown&lt;/h2&gt;
&lt;h3 id="detailed-markdown-cheat-sheet"&gt;Detailed Markdown Cheat Sheet&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://sourceforge.net/p/pelican-edt/wiki/markdown_syntax/#md_ex_lists"&gt;Pelican Wiki Markdown Cheat
Sheet&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="markdown-metadata-pelican-specific"&gt;Markdown Metadata, Pelican-specific&lt;/h3&gt;
&lt;p&gt;Markdown is a text/markdown MIME-style file.&lt;/p&gt;
&lt;p&gt;Markdown used in Pelican is derived from &lt;a href="https://daringfireball.net/projects/markdown/"&gt;Daring
Fireball&lt;/a&gt; Markdown.&lt;/p&gt;
&lt;p&gt;
&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;RST field name&lt;/th&gt;
            &lt;th class="justtable"&gt; Markdown field name&lt;/th&gt;
            &lt;th class="justtable"&gt; Description of field value&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;:title:&lt;/td&gt;
                &lt;td class="justtable"&gt; Title:&lt;/td&gt;
                &lt;td class="justtable"&gt; Title of the article&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;:date:&lt;/td&gt;
                &lt;td class="justtable"&gt; Date:&lt;/td&gt;
                &lt;td class="justtable"&gt; Writing date of the article. Should always be formated like YYYY-MM-DD HH:SS&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;:modified:&lt;/td&gt;
                &lt;td class="justtable"&gt;  Modified:&lt;/td&gt;
                &lt;td class="justtable"&gt;  Modification date of the article. Should always be formated like YYYY-MM-DD HH:SS&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;:tags:&lt;/td&gt;
                &lt;td class="justtable"&gt; Tags:&lt;/td&gt;
                &lt;td class="justtable"&gt;  Tags of the article. Multiple tags can be set&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;:keywords:&lt;/td&gt;
                &lt;td class="justtable"&gt; Keywords:&lt;/td&gt;
                &lt;td class="justtable"&gt;  Keywords of the article. Multiple keywords can be set&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;:category:&lt;/td&gt;
                &lt;td class="justtable"&gt; Category:&lt;/td&gt;
                &lt;td class="justtable"&gt;  Category of the article. Only one can be set&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;:slug:&lt;/td&gt;
                &lt;td class="justtable"&gt; Slug:&lt;/td&gt;
                &lt;td class="justtable"&gt;  Identifier for the article. This must not be modified between an article and it&amp;rsquo;s translation&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;:author:&lt;/td&gt;
                &lt;td class="justtable"&gt;   Author:&lt;/td&gt;
                &lt;td class="justtable"&gt;    Author of the article. Only one can be set&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;:authors:&lt;/td&gt;
                &lt;td class="justtable"&gt;  Authors:&lt;/td&gt;
                &lt;td class="justtable"&gt;   Authors of the article. Multiple can be set&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;:summary:&lt;/td&gt;
                &lt;td class="justtable"&gt;  Summary:&lt;/td&gt;
                &lt;td class="justtable"&gt;   Short description of the article&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;:lang:&lt;/td&gt;
                &lt;td class="justtable"&gt; Lang:&lt;/td&gt;
                &lt;td class="justtable"&gt;  Langage of the article. Only one can be set, like fr, or en, etc.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;:translation:&lt;/td&gt;
                &lt;td class="justtable"&gt;  Translation:&lt;/td&gt;
                &lt;td class="justtable"&gt;   If the article is the translated version of another one. Can be true or false&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;:status:&lt;/td&gt;
                &lt;td class="justtable"&gt;   Status:&lt;/td&gt;
                &lt;td class="justtable"&gt;    Status of the article. Can be draft, hidden, or published&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Category: {category}markdown&lt;/p&gt;</content><category term="pelican"></category><category term="markdown"></category></entry><entry><title>SSH Overview</title><link href="/egberts/articles/ssh-overview.html" rel="alternate"></link><published>2016-09-24T12:08:00-04:00</published><updated>2016-09-24T12:08:00-04:00</updated><author><name></name></author><id>tag:None,2016-09-24:/egberts/articles/ssh-overview.html</id><summary type="html">&lt;p&gt;This page details the hardening of SSH.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="SSH_client" title="wikilink"&gt;SSH client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="SSH_server" title="wikilink"&gt;SSH server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="algorithms-used"&gt;Algorithms Used&lt;/h2&gt;
&lt;p&gt;To display available algorithms for a specific SSH client&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh -Q cipher
ssh -Q cipher-auth
ssh -Q mac
ssh -Q kex
ssh -Q key
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="audit"&gt;Audit&lt;/h2&gt;
&lt;h3 id="auto-assess"&gt;Auto-Assess&lt;/h3&gt;
&lt;p&gt;To audit in a passive manner the SSH servers and clients …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This page details the hardening of SSH.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="SSH_client" title="wikilink"&gt;SSH client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="SSH_server" title="wikilink"&gt;SSH server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="algorithms-used"&gt;Algorithms Used&lt;/h2&gt;
&lt;p&gt;To display available algorithms for a specific SSH client&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh -Q cipher
ssh -Q cipher-auth
ssh -Q mac
ssh -Q kex
ssh -Q key
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="audit"&gt;Audit&lt;/h2&gt;
&lt;h3 id="auto-assess"&gt;Auto-Assess&lt;/h3&gt;
&lt;p&gt;To audit in a passive manner the SSH servers and clients, execute
&lt;code&gt;ssh-audit&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssh-audit&lt;/code&gt; (written in Python) can be found over at
&lt;a href="https://github.com/jtesta/ssh-audit"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="manual-remediation"&gt;Manual Remediation&lt;/h3&gt;
&lt;p&gt;To manually check and ensure that the SSH is clamped down securely,
execute the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://benchmarks.cisecurity.org/tools2/linux/CIS_Debian_Linux_8_Benchmark_v1.0.0.pdf"&gt;https://benchmarks.cisecurity.org/tools2/linux/CIS_Debian_Linux_8_Benchmark_v1.0.0.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://benchmarks.cisecurity.org/tools2/linux/CIS_Debian_Linux_7_Benchmark_v1.0.0.pdf"&gt;https://benchmarks.cisecurity.org/tools2/linux/CIS_Debian_Linux_7_Benchmark_v1.0.0.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Make effective all changes, by executing:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    systemctl reload sshd.service
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="escape-codes"&gt;Escape Codes&lt;/h2&gt;
&lt;p&gt;Did you know that when you’re using OpenSSH from the command line you
have a variety of escape sequences available to you? SSH somewhere, then
type “~” and “?” (tilde, then question mark) to see all the options. You
should get something like: SSH Escape Codes&lt;/p&gt;
&lt;p&gt;Supported escape sequences:&lt;/p&gt;
&lt;p&gt;[jtable]
command sequence, description
~., connection (and any multiplexed sessions)
~B, a BREAK to the remote system
~C, a command line
~R, rekey (SSH protocol 2 only)
~^Z, ssh
~#, forwarded connections
~&amp;amp;, ssh (when waiting for connections to terminate)
~?, message
~~, the escape character by typing it twice&lt;/p&gt;
&lt;p&gt;Most commonly, I use tilde-period (~.) to close an unresponsive session,
like when a firewall has closed my connection. BREAK is useful for
various things, usually getting back to a terminal server console or
getting the attention of network equipment. The command line doesn’t do
much, but you can alter forwards from it. I’ve never used it but it’s
probably handy for troubleshooting if your tunnels aren’t working right:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh&amp;gt; ?
Commands:`
     -L[bind_address:]port:host:hostport
     -R[bind_address:]port:host:hostport
     -D[bind_address:]port
     -KR[bind_address:]port
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Request local forward Request remote forward Request dynamic forward
Cancel remote forward&lt;/p&gt;
&lt;p&gt;I’ve also never had to rekey a session for any reason, as SSH protocol
version 2 does it automatically after a certain amount of data has been
transferred. You can mess with it via the RekeyLimit configuration
directives, or read more about it in RFC 4344. Suspending SSH via
tilde-Ctrl-Z is handy from time to time, especially when you’re on the
console of a machine that doesn’t have screen or some other multiplexer
on it (or you forgot to start one). Of course, you have to remember that
when you need it, but now that you’ve read it maybe you will.&lt;/p&gt;
&lt;p&gt;List forwarded connections is handy for managing the forwards you might
have created with the command line. Backgrounding SSH attempts to close
all the connections, and will wait patiently for them to die. I have
never needed this, because I’m the impatient bastard that just
tilde-periods them if they don’t close right away.&lt;/p&gt;
&lt;p&gt;You can use the EscapeChar configuration directive to change the tilde,
if that conflicts with something. Or you can just type it twice to send
it.&lt;/p&gt;</content><category term="ssh"></category></entry><entry><title>Libpcap to capture 10Gbps</title><link href="/egberts/articles/libpcap-to-capture-10gbps.html" rel="alternate"></link><published>2014-12-14T20:34:00-05:00</published><updated>2014-12-14T20:34:00-05:00</updated><author><name></name></author><id>tag:None,2014-12-14:/egberts/articles/libpcap-to-capture-10gbps.html</id><summary type="html">&lt;p&gt;Someone asked:&lt;/p&gt;
&lt;p&gt;I want to capture packets from 10Gbps network card with 0 packet loss. I am
using lipcap for 100Mbps NIC and it is working fine. Will libpcap be able to
handle 10Gbps NIC traffic? If not what are the other alternative ways to achive
this?&lt;/p&gt;
&lt;p&gt;I answered:&lt;/p&gt;
&lt;p&gt;You …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Someone asked:&lt;/p&gt;
&lt;p&gt;I want to capture packets from 10Gbps network card with 0 packet loss. I am
using lipcap for 100Mbps NIC and it is working fine. Will libpcap be able to
handle 10Gbps NIC traffic? If not what are the other alternative ways to achive
this?&lt;/p&gt;
&lt;p&gt;I answered:&lt;/p&gt;
&lt;p&gt;You don't say which Operating System or CPU. It doesn't matter whether you
choose libpcap or not, the underlying network performance is still burdened by
the Operating System Memory Management and its network driver. libpcap has kept
up with the paces and can handle 10Gbps, but there's more.&lt;/p&gt;
&lt;p&gt;If you want the best CPU so that you can do number-crunching, running virtual
machines and while capturing packets, go with AMD Opteron CPU which still
outperforms Intel Xeon Quadcore 5540 2.53GHz (despite Intel's XIO/DDIO
introduction and mostly because of Intel dual-core sharing of same L2 cache).
For best ready-made OS, go with latest FreeBSD as-is (which still outperforms
Linux 3.10 networking using basic hardware.) Otherwise, Intel and Linux will
works just fine for basic drop-free 10Gbps capture, provided you are eager to
roll up your sleeves.&lt;/p&gt;
&lt;p&gt;If you're pushing for breakneck speed all the time while doing financial-like or
stochastic or large matrix predictive computational crunching (or something),
then read-on...&lt;/p&gt;
&lt;p&gt;As RedHat have
[discovered](people.netfilter.org/hawk/presentations/nfws2014/dp-accel-10G-challenge.pdf), 67.2 nanosecond is what it takes to process one
minimal-sized packet at 10Gbps rate. I assert it's closer to 81.6 nanosecond for
64 byte Ethernet payload but they are talking 46-byte minimal as a theoretical.&lt;/p&gt;
&lt;p&gt;To cut it short, you WON'T be able to DO or USE any of the following if you want
0% packet drop at full-rate by staying under 81.6 ns for each packet:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Make an SKB call for each packet (to minimize that overhead, amortized this over several 100s of packets)&lt;/li&gt;
&lt;li&gt;TLB (Translation lookaside buffer, to avoid that, use HUGE page allocations)&lt;/li&gt;
&lt;li&gt;Short latency (you did say 'capture', so latency is irrelevant here). It's called Interrupt Coalesce (&lt;cite&gt;ethtool -C rx-frames 1024+&lt;/cite&gt;).&lt;/li&gt;
&lt;li&gt;Float processes across multi-CPU (must lock them down, one per network interface interrupt)&lt;/li&gt;
&lt;li&gt;libc &lt;cite&gt;malloc()&lt;/cite&gt; (must replace it with a faster one, preferably HUGE-based one)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, Linux has an edge over FreeBSD to capture the 10Gbps rate in 0% drop rate
AND run several virtual machines (and other overheads). Just that it requires a
new memory management (MM) of some sort for a specific network device and not
necessarily the whole operating system. Most new super-high-performance network
driver are now making devices use HUGE memory that were allocated at userland
then using driver calls to pass a bundle of packets at a time.&lt;/p&gt;
&lt;p&gt;Many new network-driver having repurposed MM are out (in no particular order):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;netmap&lt;/li&gt;
&lt;li&gt;PF-RING&lt;/li&gt;
&lt;li&gt;PF-RING+netmap&lt;/li&gt;
&lt;li&gt;OpenOnload&lt;/li&gt;
&lt;li&gt;DPDK&lt;/li&gt;
&lt;li&gt;PacketShader&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The maturity level of each code is highly dependent on which Linux (or distro)
version you choose. I've tried a few of them and once I understood the basic
design, it became apparent what I needed. YMMV.&lt;/p&gt;
</content><category term="pcap"></category><category term="libpcap"></category><category term="Ethernet"></category><category term="high-speed"></category></entry><entry><title>Bind9 Network Ports</title><link href="/egberts/articles/bind9-network-ports.html" rel="alternate"></link><published>2011-07-11T06:31:00-04:00</published><updated>2011-07-11T06:31:00-04:00</updated><author><name></name></author><id>tag:None,2011-07-11:/egberts/articles/bind9-network-ports.html</id><summary type="html">&lt;p&gt;Network port numbers used by ISC Bind9.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Network port numbers used by &lt;a href="Bind9" title="wikilink"&gt;Bind9&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="network-port-number-used-by-bind9"&gt;Network port number used by Bind9&lt;/h3&gt;
&lt;p&gt;
&lt;div class="justtable"&gt;
    &lt;table class="justtable"&gt;
        &lt;thead class="justtable"&gt;
        &lt;tr class="justtable"&gt;
            &lt;th class="justtable"&gt;Port number&lt;/th&gt;
            &lt;th class="justtable"&gt; Protocol&lt;/th&gt;
            &lt;th class="justtable"&gt; Description&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody class="justtable"&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;53&lt;/td&gt;
                &lt;td class="justtable"&gt; tcp/udp&lt;/td&gt;
                &lt;td class="justtable"&gt; General DNS data communication&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr class="justtable"&gt;
                &lt;td class="justtable"&gt;953&lt;/td&gt;
                &lt;td class="justtable"&gt; udp&lt;/td&gt;
                &lt;td class="justtable"&gt; Control channel for Bind9 &lt;code&gt;named&lt;/code&gt; process. Port used by &lt;code&gt;rndc&lt;/code&gt; and &lt;code&gt;nsupdate&lt;/code&gt; utility.&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;&lt;/p&gt;</content><category term="network"></category><category term="port"></category><category term="bind9"></category></entry></feed>